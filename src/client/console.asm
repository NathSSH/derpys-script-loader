; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28107.0 

	TITLE	C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_vsnprintf
PUBLIC	_printConsoleRaw
PUBLIC	_printConsoleFormatted
PUBLIC	_createScriptConsole
PUBLIC	_destroyScriptConsole
PUBLIC	_setScriptConsoleLogging
PUBLIC	_drawScriptConsole
PUBLIC	_clearScriptConsole
PUBLIC	_refocusScriptConsole
PUBLIC	_sendScriptConsoleKeystroke
PUBLIC	_getScriptConsoleText
PUBLIC	??_C@_0BM@LKHHPCGE@Microsoft?5JhengHei?5UI?5Light@ ; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_02GMLFBBN@wb@				; `string'
PUBLIC	??_C@_0BG@EMEDFEGG@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$CFs?$AN?6@ ; `string'
PUBLIC	??_C@_05MBDEGLCK@ERROR@				; `string'
PUBLIC	??_C@_07KCOHIFOP@WARNING@			; `string'
PUBLIC	??_C@_0BL@EPFNCBCN@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$FL?$CFs?$FN?5?$CFs?$AN?6@ ; `string'
PUBLIC	??_C@_0BB@JDFPCANG@keyboard?5failure@		; `string'
PUBLIC	__real@3ba3d70a
PUBLIC	__real@3c23d70a
PUBLIC	__real@3c75c28f
PUBLIC	__real@3c8f5c29
PUBLIC	__real@3e800000
PUBLIC	__real@3e99999a
PUBLIC	__real@3f000000
PUBLIC	__real@3f75c28f
PUBLIC	__real@3f800000
EXTRN	_fclose:PROC
EXTRN	_fflush:PROC
EXTRN	_fopen:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	_isspace:PROC
EXTRN	_isprint:PROC
EXTRN	__imp__OpenClipboard@4:PROC
EXTRN	__imp__CloseClipboard@0:PROC
EXTRN	__imp__GetClipboardData@4:PROC
EXTRN	__imp__GetKeyboardState@4:PROC
EXTRN	__imp__ToAscii@20:PROC
EXTRN	__imp__MapVirtualKeyA@8:PROC
EXTRN	__localtime64:PROC
EXTRN	__time64:PROC
EXTRN	_getRenderAspect:PROC
EXTRN	_drawRenderRectangle:PROC
EXTRN	_drawRenderTextureUV:PROC
EXTRN	_drawRenderString:PROC
EXTRN	_createRenderTextureEx:PROC
EXTRN	_destroyRenderTexture:PROC
EXTRN	_createRenderFont:PROC
EXTRN	_destroyRenderFont:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f75c28f
CONST	SEGMENT
__real@3f75c28f DD 03f75c28fr			; 0.96
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3c8f5c29
CONST	SEGMENT
__real@3c8f5c29 DD 03c8f5c29r			; 0.0175
CONST	ENDS
;	COMDAT __real@3c75c28f
CONST	SEGMENT
__real@3c75c28f DD 03c75c28fr			; 0.015
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@3ba3d70a
CONST	SEGMENT
__real@3ba3d70a DD 03ba3d70ar			; 0.005
CONST	ENDS
;	COMDAT ??_C@_0BB@JDFPCANG@keyboard?5failure@
CONST	SEGMENT
??_C@_0BB@JDFPCANG@keyboard?5failure@ DB 'keyboard failure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EPFNCBCN@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$FL?$CFs?$FN?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_0BL@EPFNCBCN@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$FL?$CFs?$FN?5?$CFs?$AN?6@ DB '['
	DB	'%.2d:%.2d:%.2d] [%s] %s', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KCOHIFOP@WARNING@
CONST	SEGMENT
??_C@_07KCOHIFOP@WARNING@ DB 'WARNING', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MBDEGLCK@ERROR@
CONST	SEGMENT
??_C@_05MBDEGLCK@ERROR@ DB 'ERROR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EMEDFEGG@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_0BG@EMEDFEGG@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$CFs?$AN?6@ DB '['
	DB	'%.2d:%.2d:%.2d] %s', 0dH, 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb@
CONST	SEGMENT
??_C@_02GMLFBBN@wb@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LKHHPCGE@Microsoft?5JhengHei?5UI?5Light@
CONST	SEGMENT
??_C@_0BM@LKHHPCGE@Microsoft?5JhengHei?5UI?5Light@ DB 'Microsoft JhengHei'
	DB	' UI Light', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _trimTrailingInput
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_trimTrailingInput PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 263
	mov	eax, DWORD PTR _sc$[esp-4]
	push	esi
	push	edi
	mov	esi, DWORD PTR [eax+280]
; Line 264
	lea	edi, DWORD PTR [eax+24]
; Line 265
	test	esi, esi
	je	SHORT $LN9@trimTraili
$LL2@trimTraili:
	movsx	eax, BYTE PTR [edi+esi-1]
	dec	esi
	push	eax
	call	_isspace
	add	esp, 4
	test	eax, eax
	je	SHORT $LN9@trimTraili
; Line 266
	mov	BYTE PTR [edi+esi], 0
	test	esi, esi
	jne	SHORT $LL2@trimTraili
$LN9@trimTraili:
	pop	edi
; Line 267
	pop	esi
	ret	0
_trimTrailingInput ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fillInputWithClipboard
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_fillInputWithClipboard PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 248
	push	0
	call	DWORD PTR __imp__OpenClipboard@4
	test	eax, eax
	je	SHORT $LN5@fillInputW
; Line 249
	push	edi
	push	1
	call	DWORD PTR __imp__GetClipboardData@4
	mov	edi, eax
	test	edi, edi
	je	SHORT $LN6@fillInputW
; Line 250
	push	ebx
	mov	bl, BYTE PTR [edi]
	movsx	ecx, bl
	push	esi
	push	ecx
	call	_isprint
	mov	esi, DWORD PTR _sc$[esp+12]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@fillInputW
$LL4@fillInputW:
; Line 251
	mov	eax, DWORD PTR [esi+280]
	cmp	eax, 255				; 000000ffH
	jge	SHORT $LN2@fillInputW
; Line 252
	mov	BYTE PTR [eax+esi+24], bl
	inc	DWORD PTR [esi+280]
$LN2@fillInputW:
; Line 250
	mov	bl, BYTE PTR [edi+1]
	inc	edi
	movsx	eax, bl
	push	eax
	call	_isprint
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL4@fillInputW
$LN3@fillInputW:
; Line 253
	mov	eax, DWORD PTR [esi+280]
	mov	BYTE PTR [eax+esi+24], 0
; Line 254
	mov	DWORD PTR [esi+352], -1
	pop	esi
	pop	ebx
$LN6@fillInputW:
; Line 256
	pop	edi
	jmp	DWORD PTR __imp__CloseClipboard@0
$LN5@fillInputW:
; Line 258
	ret	0
_fillInputWithClipboard ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _logConsoleOutput
_TEXT	SEGMENT
_timer$ = -8						; size = 8
_file$ = 8						; size = 4
_type$ = 12						; size = 4
_str$ = 16						; size = 4
_logConsoleOutput PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 170
	sub	esp, 8
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\time.h
; Line 536
	lea	eax, DWORD PTR _timer$[esp+8]
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 170
	push	esi
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\time.h
; Line 536
	push	eax
	call	__time64
; Line 512
	lea	eax, DWORD PTR _timer$[esp+16]
	push	eax
	call	__localtime64
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 176
	mov	edx, DWORD PTR _type$[esp+16]
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\time.h
; Line 512
	add	esp, 8
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 175
	mov	ecx, eax
; Line 176
	test	edx, edx
	je	SHORT $LN4@logConsole
	cmp	edx, 3
	je	SHORT $LN4@logConsole
; Line 179
	push	DWORD PTR _str$[esp+8]
	cmp	edx, 1
	mov	esi, OFFSET ??_C@_07KCOHIFOP@WARNING@
	mov	eax, OFFSET ??_C@_05MBDEGLCK@ERROR@
	cmovne	eax, esi
	mov	esi, DWORD PTR _file$[esp+12]
	push	eax
	push	DWORD PTR [ecx]
	push	DWORD PTR [ecx+4]
	push	DWORD PTR [ecx+8]
	push	OFFSET ??_C@_0BL@EPFNCBCN@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$FL?$CFs?$FN?5?$CFs?$AN?6@
	push	esi
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 180
	push	esi
	call	_fflush
	add	esp, 4
	pop	esi
; Line 181
	add	esp, 8
	ret	0
$LN4@logConsole:
; Line 177
	push	DWORD PTR _str$[esp+8]
	mov	esi, DWORD PTR _file$[esp+12]
	push	DWORD PTR [ecx]
	push	DWORD PTR [ecx+4]
	push	DWORD PTR [ecx+8]
	push	OFFSET ??_C@_0BG@EMEDFEGG@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$CFs?$AN?6@
	push	esi
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 180
	push	esi
	call	_fflush
	add	esp, 4
	pop	esi
; Line 181
	add	esp, 8
	ret	0
_logConsoleOutput ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _drawInput
_TEXT	SEGMENT
_drawtext$ = -48					; size = 48
_ar$ = 8						; size = 4
_sc$ = 8						; size = 4
_start$ = 12						; size = 4
_height$ = 16						; size = 4
_drawInput PROC						; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 148
	sub	esp, 48					; 00000030H
	push	esi
; Line 152
	mov	esi, DWORD PTR _sc$[esp+48]
	push	DWORD PTR [esi]
	call	_getRenderAspect
; Line 158
	movss	xmm2, DWORD PTR __real@3c75c28f
	lea	eax, DWORD PTR [esi+24]
; Line 159
	movss	xmm1, DWORD PTR _height$[esp+52]
	add	esp, 4
	movss	xmm3, DWORD PTR _start$[esp+48]
	movaps	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@3f000000
	mov	DWORD PTR _drawtext$[esp+56], eax
	fstp	DWORD PTR _ar$[esp+48]
	divss	xmm2, DWORD PTR _ar$[esp+48]
	mov	eax, DWORD PTR [esi+280]
	mov	DWORD PTR _drawtext$[esp+52], 8480	; 00002120H
	mov	DWORD PTR _drawtext$[esp+60], eax
	mov	DWORD PTR _drawtext$[esp+84], -1
	mov	DWORD PTR _drawtext$[esp+72], 1016028201 ; 3c8f5c29H
; Line 161
	push	-1154075082				; bb363636H
	sub	esp, 16					; 00000010H
	addss	xmm0, xmm3
	movss	DWORD PTR [esp+12], xmm1
	movss	DWORD PTR _drawtext$[esp+84], xmm2
	addss	xmm2, xmm2
	mov	DWORD PTR [esp+8], 1065185444		; 3f7d70a4H
	movss	DWORD PTR [esp+4], xmm3
	mov	DWORD PTR [esp], 1000593162		; 3ba3d70aH
	push	DWORD PTR [esi]
	movss	DWORD PTR _drawtext$[esp+92], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm2
	movss	DWORD PTR _drawtext$[esp+100], xmm0
	call	_drawRenderRectangle
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN5@drawInput
; Line 163
	lea	eax, DWORD PTR _height$[esp+48]
	push	eax
	push	0
	lea	eax, DWORD PTR _drawtext$[esp+60]
	push	eax
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	call	_drawRenderString
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN5@drawInput
; Line 165
	mov	eax, 1
	pop	esi
; Line 166
	add	esp, 48					; 00000030H
	ret	0
$LN5@drawInput:
; Line 164
	xor	eax, eax
	pop	esi
; Line 166
	add	esp, 48					; 00000030H
	ret	0
_drawInput ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _drawOutput
_TEXT	SEGMENT
_height$ = -52						; size = 4
_drawtext$ = -48					; size = 48
_ar$ = 8						; size = 4
_sc$ = 8						; size = 4
_drawOutput PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 103
	sub	esp, 52					; 00000034H
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR _sc$[esp+60]
; Line 109
	push	DWORD PTR [edi]
	call	_getRenderAspect
	add	esp, 4
	fstp	DWORD PTR _ar$[esp+60]
; Line 110
	push	DWORD PTR [edi+12]
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1050253722		; 3e99999aH
	mov	DWORD PTR [esp+8], 1067030938		; 3f99999aH
	mov	DWORD PTR [esp+4], 1060320051		; 3f333333H
	mov	DWORD PTR [esp], -1110651699		; bdcccccdH
	push	DWORD PTR [edi]
	call	_drawRenderRectangle
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN25@drawOutput
; Line 112
	mov	eax, DWORD PTR [edi+8]
	movss	xmm0, DWORD PTR _ar$[esp+60]
	movss	xmm2, DWORD PTR __real@3f800000
	test	eax, eax
	je	$LN13@drawOutput
; Line 113
	mov	ecx, DWORD PTR [edi]
	sub	esp, 16					; 00000010H
	cmp	DWORD PTR [edi+16], 0
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	je	SHORT $LN10@drawOutput
; Line 114
	movss	xmm1, DWORD PTR __real@3e99999a
	divss	xmm1, xmm0
	push	-1
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1050253722		; 3e99999aH
	movaps	xmm0, xmm2
	subss	xmm0, xmm1
	movss	DWORD PTR [esp+8], xmm1
	mov	DWORD PTR [esp+4], 1060320051		; 3f333333H
	movss	DWORD PTR [esp], xmm0
	push	eax
	push	ecx
	call	_drawRenderTextureUV
	add	esp, 44					; 0000002cH
	test	eax, eax
	jne	SHORT $LN34@drawOutput
$LN25@drawOutput:
	pop	edi
; Line 147
	pop	esi
	xor	eax, eax
	pop	ebx
	add	esp, 52					; 00000034H
	ret	0
$LN10@drawOutput:
; Line 116
	movss	xmm1, DWORD PTR __real@3e800000
	divss	xmm1, xmm0
	push	851809803				; 32c5960bH
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1048576000		; 3e800000H
	movaps	xmm0, xmm2
	subss	xmm0, xmm1
	movss	DWORD PTR [esp+8], xmm1
	mov	DWORD PTR [esp+4], 1060320051		; 3f333333H
	movss	DWORD PTR [esp], xmm0
	push	eax
	push	ecx
	call	_drawRenderTextureUV
	add	esp, 44					; 0000002cH
	test	eax, eax
	je	SHORT $LN25@drawOutput
$LN34@drawOutput:
; Line 119
	movss	xmm2, DWORD PTR __real@3f800000
$LN13@drawOutput:
	xorps	xmm0, xmm0
; Line 126
	mov	esi, DWORD PTR [edi+356]
	movlpd	QWORD PTR _drawtext$[esp+68], xmm0
	movlpd	QWORD PTR _drawtext$[esp+96], xmm0
	movlpd	QWORD PTR _drawtext$[esp+104], xmm0
	movss	xmm0, DWORD PTR [edi+20]
	movss	DWORD PTR _drawtext$[esp+84], xmm0
	movss	xmm0, DWORD PTR __real@3c23d70a
; Line 127
	mov	eax, DWORD PTR [edi+364]
	mov	DWORD PTR _drawtext$[esp+64], 4656	; 00001230H
	mov	DWORD PTR _drawtext$[esp+80], 1064514355 ; 3f733333H
	mov	DWORD PTR _drawtext$[esp+92], 1047904911 ; 3e75c28fH
	divss	xmm0, DWORD PTR _ar$[esp+60]
	movss	DWORD PTR _drawtext$[esp+76], xmm0
	addss	xmm0, xmm0
	subss	xmm2, xmm0
	movss	DWORD PTR _drawtext$[esp+88], xmm2
	test	esi, esi
	je	$LN26@drawOutput
$LL4@drawOutput:
	test	eax, eax
	je	SHORT $LN33@drawOutput
; Line 128
	mov	esi, DWORD PTR [esi+12]
	dec	eax
	test	esi, esi
	jne	SHORT $LL4@drawOutput
$LN33@drawOutput:
; Line 129
	test	esi, esi
	je	$LN26@drawOutput
	mov	ebx, -362684				; fffa7744H
	npad	1
$LL7@drawOutput:
; Line 130
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	jne	SHORT $LN14@drawOutput
; Line 131
	mov	DWORD PTR _drawtext$[esp+96], -2105377	; ffdfdfdfH
	jmp	SHORT $LN18@drawOutput
$LN14@drawOutput:
; Line 132
	cmp	ecx, 1
	jne	SHORT $LN16@drawOutput
; Line 133
	mov	DWORD PTR _drawtext$[esp+96], -444103	; fff93939H
	jmp	SHORT $LN18@drawOutput
$LN16@drawOutput:
; Line 134
	cmp	ecx, 2
	mov	eax, -16727809				; ff00c0ffH
	cmove	eax, ebx
	mov	DWORD PTR _drawtext$[esp+96], eax
$LN18@drawOutput:
; Line 138
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR _drawtext$[esp+68], eax
; Line 139
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR _drawtext$[esp+72], eax
; Line 140
	lea	eax, DWORD PTR _height$[esp+64]
	push	eax
	push	0
	lea	eax, DWORD PTR _drawtext$[esp+72]
	push	eax
	push	DWORD PTR [edi+4]
	push	DWORD PTR [edi]
	call	_drawRenderString
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN25@drawOutput
; Line 142
	movss	xmm1, DWORD PTR _height$[esp+64]
	addss	xmm1, DWORD PTR __real@3ba3d70a
	movss	xmm0, DWORD PTR _drawtext$[esp+80]
	subss	xmm0, xmm1
	movss	DWORD PTR _height$[esp+64], xmm1
	movss	DWORD PTR _drawtext$[esp+80], xmm0
	movss	xmm0, DWORD PTR _drawtext$[esp+92]
	subss	xmm0, xmm1
	xorps	xmm1, xmm1
; Line 143
	comiss	xmm1, xmm0
	movss	DWORD PTR _drawtext$[esp+92], xmm0
	jae	SHORT $LN26@drawOutput
; Line 129
	mov	esi, DWORD PTR [esi+12]
	test	esi, esi
	jne	$LL7@drawOutput
$LN26@drawOutput:
	pop	edi
; Line 147
	pop	esi
	mov	eax, 1
	pop	ebx
	add	esp, 52					; 00000034H
	ret	0
_drawOutput ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _getScriptConsoleText
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_getScriptConsoleText PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 333
	mov	eax, DWORD PTR _sc$[esp-4]
	add	eax, 24					; 00000018H
; Line 334
	ret	0
_getScriptConsoleText ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sendScriptConsoleKeystroke
_TEXT	SEGMENT
_ascii$ = -264						; size = 2
_keyboard$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_sc$ = 8						; size = 4
_key$ = 12						; size = 4
_sendScriptConsoleKeystroke PROC			; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 268
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+264], eax
	push	esi
	mov	esi, DWORD PTR _sc$[esp+264]
; Line 274
	lea	eax, DWORD PTR _keyboard$[esp+268]
	push	edi
	push	eax
	call	DWORD PTR __imp__GetKeyboardState@4
	test	eax, eax
	jne	SHORT $LN5@sendScript
; Line 275
	movups	xmm0, XMMWORD PTR ??_C@_0BB@JDFPCANG@keyboard?5failure@
	lea	ecx, DWORD PTR [esi+24]
; Line 276
	lea	edx, DWORD PTR [ecx+1]
	movups	XMMWORD PTR [ecx], xmm0
	mov	al, BYTE PTR ??_C@_0BB@JDFPCANG@keyboard?5failure@+16
	mov	BYTE PTR [ecx+16], al
$LL82@sendScript:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL82@sendScript
	sub	ecx, edx
	mov	DWORD PTR [esi+280], ecx
	jmp	$LN39@sendScript
$LN5@sendScript:
; Line 277
	test	BYTE PTR _keyboard$[esp+289], 128	; 00000080H
	je	$LN7@sendScript
; Line 278
	cmp	DWORD PTR _key$[esp+268], 47		; 0000002fH
	jne	$LN39@sendScript
; Line 248
	push	0
	call	DWORD PTR __imp__OpenClipboard@4
	test	eax, eax
	je	$LN39@sendScript
; Line 249
	push	1
	call	DWORD PTR __imp__GetClipboardData@4
	mov	edi, eax
	test	edi, edi
	je	SHORT $LN50@sendScript
; Line 250
	push	ebx
	mov	bl, BYTE PTR [edi]
	movsx	ecx, bl
	push	ecx
	call	_isprint
	add	esp, 4
	test	eax, eax
	je	SHORT $LN47@sendScript
$LL48@sendScript:
; Line 251
	mov	eax, DWORD PTR [esi+280]
	cmp	eax, 255				; 000000ffH
	jge	SHORT $LN46@sendScript
; Line 252
	mov	BYTE PTR [eax+esi+24], bl
	inc	DWORD PTR [esi+280]
$LN46@sendScript:
; Line 250
	mov	bl, BYTE PTR [edi+1]
	inc	edi
	movsx	eax, bl
	push	eax
	call	_isprint
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL48@sendScript
$LN47@sendScript:
; Line 253
	mov	eax, DWORD PTR [esi+280]
; Line 254
	pop	ebx
	mov	BYTE PTR [eax+esi+24], 0
	mov	DWORD PTR [esi+352], -1
$LN50@sendScript:
; Line 256
	call	DWORD PTR __imp__CloseClipboard@0
; Line 258
	jmp	$LN39@sendScript
$LN7@sendScript:
; Line 280
	mov	eax, DWORD PTR _key$[esp+268]
	cmp	eax, 28					; 0000001cH
	jne	$LN10@sendScript
; Line 281
	cmp	DWORD PTR [esi+280], 0
	je	$LN39@sendScript
; Line 282
	mov	edi, DWORD PTR [esi+348]
	test	edi, edi
	je	SHORT $LN81@sendScript
	mov	ecx, DWORD PTR [esi+edi*4+280]
	lea	eax, DWORD PTR [esi+24]
	npad	1
$LL83@sendScript:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN84@sendScript
	test	dl, dl
	je	SHORT $LN85@sendScript
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN84@sendScript
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL83@sendScript
$LN85@sendScript:
	xor	eax, eax
	jmp	SHORT $LN86@sendScript
$LN84@sendScript:
	sbb	eax, eax
	or	eax, 1
$LN86@sendScript:
	test	eax, eax
	je	SHORT $LN16@sendScript
$LN81@sendScript:
; Line 283
	cmp	edi, 16					; 00000010H
	jne	SHORT $LN3@sendScript
; Line 284
	push	DWORD PTR [esi+284]
	lea	edi, DWORD PTR [esi+284]
	call	_free
; Line 285
	dec	DWORD PTR [esi+348]
; Line 286
	xor	ecx, ecx
	add	esp, 4
	cmp	DWORD PTR [esi+348], ecx
	jle	SHORT $LN3@sendScript
$LL4@sendScript:
; Line 287
	mov	eax, DWORD PTR [edi+4]
	lea	edi, DWORD PTR [edi+4]
	mov	DWORD PTR [edi-4], eax
	inc	ecx
	cmp	ecx, DWORD PTR [esi+348]
	jl	SHORT $LL4@sendScript
$LN3@sendScript:
; Line 289
	mov	eax, DWORD PTR [esi+280]
	inc	eax
	push	eax
	call	_malloc
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	SHORT $LN16@sendScript
; Line 290
	lea	ecx, DWORD PTR [esi+24]
	mov	edx, edi
	sub	edx, ecx
$LL42@sendScript:
	mov	al, BYTE PTR [ecx]
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR [ecx+edx-1], al
	test	al, al
	jne	SHORT $LL42@sendScript
	mov	eax, DWORD PTR [esi+348]
	mov	DWORD PTR [esi+eax*4+284], edi
	inc	DWORD PTR [esi+348]
$LN16@sendScript:
; Line 263
	mov	edi, DWORD PTR [esi+280]
; Line 265
	test	edi, edi
	je	SHORT $LN89@sendScript
	npad	5
$LL54@sendScript:
	movsx	eax, BYTE PTR [esi+edi+23]
	dec	edi
	push	eax
	call	_isspace
	add	esp, 4
	test	eax, eax
	je	SHORT $LN89@sendScript
; Line 266
	mov	BYTE PTR [esi+edi+24], 0
	test	edi, edi
	jne	SHORT $LL54@sendScript
$LN89@sendScript:
	pop	edi
; Line 293
	mov	DWORD PTR [esi+280], 0
; Line 295
	mov	eax, 1
	mov	DWORD PTR [esi+352], -1
; Line 331
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[esp+264]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	ret	0
$LN10@sendScript:
; Line 297
	cmp	eax, 1
	jne	SHORT $LN17@sendScript
; Line 298
	mov	BYTE PTR [esi+24], 0
; Line 299
	mov	DWORD PTR [esi+280], 0
; Line 300
	jmp	$LN90@sendScript
$LN17@sendScript:
; Line 301
	cmp	eax, 200				; 000000c8H
	jne	SHORT $LN19@sendScript
; Line 302
	mov	eax, DWORD PTR [esi+348]
	test	eax, eax
	je	$LN39@sendScript
; Line 303
	mov	edi, DWORD PTR [esi+352]
	cmp	edi, -1
	je	SHORT $LN24@sendScript
	cmp	edi, eax
	jge	SHORT $LN24@sendScript
; Line 305
	test	edi, edi
	je	SHORT $LN25@sendScript
; Line 306
	dec	edi
	jmp	SHORT $LN91@sendScript
$LN24@sendScript:
; Line 304
	lea	edi, DWORD PTR [eax-1]
$LN91@sendScript:
; Line 307
	mov	DWORD PTR [esi+352], edi
$LN25@sendScript:
	mov	edi, DWORD PTR [esi+edi*4+284]
	lea	edx, DWORD PTR [esi+24]
	mov	ecx, edx
$LL43@sendScript:
	mov	al, BYTE PTR [edi]
	lea	edi, DWORD PTR [edi+1]
	mov	BYTE PTR [edx], al
	lea	edx, DWORD PTR [edx+1]
	test	al, al
	jne	SHORT $LL43@sendScript
	lea	edx, DWORD PTR [ecx+1]
$LL87@sendScript:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL87@sendScript
	sub	ecx, edx
	mov	DWORD PTR [esi+280], ecx
; Line 308
	jmp	$LN39@sendScript
$LN19@sendScript:
; Line 309
	cmp	eax, 208				; 000000d0H
	jne	SHORT $LN26@sendScript
; Line 310
	mov	eax, DWORD PTR [esi+348]
	test	eax, eax
	je	$LN39@sendScript
	mov	edi, DWORD PTR [esi+352]
	cmp	edi, -1
	je	$LN39@sendScript
; Line 311
	inc	edi
	mov	DWORD PTR [esi+352], edi
	cmp	edi, eax
	jl	SHORT $LN29@sendScript
; Line 312
	lea	edi, DWORD PTR [eax-1]
	mov	DWORD PTR [esi+352], edi
$LN29@sendScript:
; Line 313
	mov	edi, DWORD PTR [esi+edi*4+284]
	lea	edx, DWORD PTR [esi+24]
	mov	ecx, edx
	npad	3
$LL44@sendScript:
	mov	al, BYTE PTR [edi]
	lea	edi, DWORD PTR [edi+1]
	mov	BYTE PTR [edx], al
	lea	edx, DWORD PTR [edx+1]
	test	al, al
	jne	SHORT $LL44@sendScript
	lea	edx, DWORD PTR [ecx+1]
$LL88@sendScript:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL88@sendScript
	sub	ecx, edx
	mov	DWORD PTR [esi+280], ecx
; Line 314
	jmp	$LN39@sendScript
$LN26@sendScript:
; Line 315
	cmp	eax, 201				; 000000c9H
	jne	SHORT $LN30@sendScript
; Line 316
	mov	eax, DWORD PTR [esi+360]
	test	eax, eax
	je	$LN39@sendScript
	inc	DWORD PTR [esi+364]
	cmp	DWORD PTR [esi+364], eax
	jl	$LN39@sendScript
; Line 317
	dec	eax
	mov	DWORD PTR [esi+364], eax
; Line 318
	jmp	$LN39@sendScript
$LN30@sendScript:
	cmp	eax, 209				; 000000d1H
	jne	SHORT $LN33@sendScript
; Line 319
	mov	eax, DWORD PTR [esi+364]
	test	eax, eax
	je	$LN39@sendScript
; Line 320
	dec	eax
	mov	DWORD PTR [esi+364], eax
; Line 321
	jmp	$LN39@sendScript
$LN33@sendScript:
	mov	ecx, DWORD PTR [esi+280]
	cmp	eax, 14					; 0000000eH
	jne	SHORT $LN36@sendScript
; Line 322
	test	ecx, ecx
	je	$LN90@sendScript
; Line 323
	lea	eax, DWORD PTR [ecx-1]
	mov	DWORD PTR [esi+280], eax
; Line 324
	jmp	SHORT $LN92@sendScript
$LN36@sendScript:
; Line 325
	cmp	ecx, 255				; 000000ffH
	jge	SHORT $LN39@sendScript
	push	1
	push	eax
	call	DWORD PTR __imp__MapVirtualKeyA@8
	test	eax, eax
	je	SHORT $LN39@sendScript
	push	0
	lea	ecx, DWORD PTR _ascii$[esp+276]
	push	ecx
	lea	ecx, DWORD PTR _keyboard$[esp+280]
	push	ecx
	push	0
	push	eax
	call	DWORD PTR __imp__ToAscii@20
	cmp	eax, 1
	jne	SHORT $LN39@sendScript
	movsx	eax, BYTE PTR _ascii$[esp+272]
	push	eax
	call	_isprint
	add	esp, 4
	test	eax, eax
	je	SHORT $LN39@sendScript
	cmp	DWORD PTR [esi+280], 0
	jne	SHORT $LN40@sendScript
	movsx	eax, BYTE PTR _ascii$[esp+272]
	push	eax
	call	_isspace
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN39@sendScript
$LN40@sendScript:
; Line 326
	mov	ecx, DWORD PTR [esi+280]
	mov	al, BYTE PTR _ascii$[esp+272]
	mov	BYTE PTR [ecx+esi+24], al
	inc	DWORD PTR [esi+280]
	mov	eax, DWORD PTR [esi+280]
$LN92@sendScript:
; Line 330
	mov	BYTE PTR [eax+esi+24], 0
$LN90@sendScript:
	mov	DWORD PTR [esi+352], -1
$LN39@sendScript:
; Line 331
	mov	ecx, DWORD PTR __$ArrayPad$[esp+272]
	xor	eax, eax
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	ret	0
_sendScriptConsoleKeystroke ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _refocusScriptConsole
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_refocusScriptConsole PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 239
	mov	eax, DWORD PTR _sc$[esp-4]
	mov	DWORD PTR [eax+280], 0
; Line 240
	mov	DWORD PTR [eax+364], 0
; Line 241
	mov	DWORD PTR [eax+352], -1
; Line 242
	ret	0
_refocusScriptConsole ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _clearScriptConsole
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_clearScriptConsole PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 225
	push	ebx
; Line 228
	mov	ebx, DWORD PTR _sc$[esp]
	push	esi
; Line 229
	mov	esi, DWORD PTR [ebx+356]
	test	esi, esi
	je	SHORT $LN3@clearScrip
	push	edi
$LL2@clearScrip:
; Line 231
	push	DWORD PTR [esi+4]
	mov	edi, DWORD PTR [esi+12]
	call	_free
; Line 232
	push	esi
	call	_free
	add	esp, 8
	mov	esi, edi
	test	edi, edi
	jne	SHORT $LL2@clearScrip
	pop	edi
$LN3@clearScrip:
; Line 236
	pop	esi
	mov	DWORD PTR [ebx+356], 0
	mov	DWORD PTR [ebx+360], 0
	mov	DWORD PTR [ebx+364], 0
	pop	ebx
; Line 237
	ret	0
_clearScriptConsole ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _drawScriptConsole
_TEXT	SEGMENT
_height$ = -56						; size = 4
_ar$1 = -52						; size = 4
_drawtext$2 = -48					; size = 48
_sc$ = 8						; size = 4
_drawScriptConsole PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 167
	sub	esp, 56					; 00000038H
	push	esi
; Line 168
	mov	esi, DWORD PTR _sc$[esp+56]
	push	esi
	call	_drawOutput
	add	esp, 4
	test	eax, eax
	je	$LN3@drawScript
; Line 152
	push	DWORD PTR [esi]
; Line 168
	mov	DWORD PTR _height$[esp+64], 1022739087	; 3cf5c28fH
; Line 152
	call	_getRenderAspect
; Line 158
	movss	xmm2, DWORD PTR __real@3c75c28f
	lea	eax, DWORD PTR [esi+24]
; Line 159
	movss	xmm1, DWORD PTR _height$[esp+64]
	add	esp, 4
	fstp	DWORD PTR _ar$1[esp+60]
	divss	xmm2, DWORD PTR _ar$1[esp+60]
	mov	DWORD PTR _drawtext$2[esp+64], eax
	mov	eax, DWORD PTR [esi+280]
	mov	DWORD PTR _drawtext$2[esp+60], 8480	; 00002120H
	mov	DWORD PTR _drawtext$2[esp+68], eax
	mov	DWORD PTR _drawtext$2[esp+92], -1
	mov	DWORD PTR _drawtext$2[esp+80], 1016028201 ; 3c8f5c29H
; Line 161
	push	-1154075082				; bb363636H
	sub	esp, 16					; 00000010H
	movaps	xmm0, xmm1
	movss	DWORD PTR [esp+12], xmm1
	mulss	xmm0, DWORD PTR __real@3f000000
	mov	DWORD PTR [esp+8], 1065185444		; 3f7d70a4H
	movss	DWORD PTR _drawtext$2[esp+92], xmm2
	addss	xmm2, xmm2
	mov	DWORD PTR [esp+4], 1064682127		; 3f75c28fH
	addss	xmm0, DWORD PTR __real@3f75c28f
	mov	DWORD PTR [esp], 1000593162		; 3ba3d70aH
	push	DWORD PTR [esi]
	movss	DWORD PTR _drawtext$2[esp+100], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm2
	movss	DWORD PTR _drawtext$2[esp+108], xmm0
	call	_drawRenderRectangle
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN3@drawScript
; Line 163
	lea	eax, DWORD PTR _height$[esp+60]
	push	eax
	push	0
	lea	eax, DWORD PTR _drawtext$2[esp+68]
	push	eax
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	call	_drawRenderString
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN3@drawScript
; Line 168
	mov	eax, 1
	pop	esi
; Line 169
	add	esp, 56					; 00000038H
	ret	0
$LN3@drawScript:
; Line 168
	xor	eax, eax
	pop	esi
; Line 169
	add	esp, 56					; 00000038H
	ret	0
_drawScriptConsole ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _setScriptConsoleLogging
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_path$ = 12						; size = 4
_setScriptConsoleLogging PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 98
	push	esi
; Line 99
	mov	esi, DWORD PTR _sc$[esp]
	mov	eax, DWORD PTR [esi+368]
	test	eax, eax
	je	SHORT $LN2@setScriptC
; Line 100
	push	eax
	call	_fclose
	add	esp, 4
$LN2@setScriptC:
; Line 101
	push	OFFSET ??_C@_02GMLFBBN@wb@
	push	DWORD PTR _path$[esp+4]
	call	_fopen
	xor	ecx, ecx
	mov	DWORD PTR [esi+368], eax
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	eax, ecx
	pop	esi
; Line 102
	ret	0
_setScriptConsoleLogging ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _destroyScriptConsole
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_destroyScriptConsole PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 78
	push	ebx
	push	edi
; Line 82
	mov	edi, DWORD PTR _sc$[esp+4]
	mov	ebx, DWORD PTR [edi+356]
	test	ebx, ebx
	je	SHORT $LN11@destroyScr
	push	esi
$LL2@destroyScr:
; Line 84
	push	DWORD PTR [ebx+4]
	mov	esi, DWORD PTR [ebx+12]
	call	_free
; Line 85
	push	ebx
	call	_free
	add	esp, 8
	mov	ebx, esi
	test	esi, esi
	jne	SHORT $LL2@destroyScr
	pop	esi
$LN11@destroyScr:
; Line 87
	cmp	DWORD PTR [edi+348], 0
	je	SHORT $LN5@destroyScr
	npad	11
$LL4@destroyScr:
; Line 88
	dec	DWORD PTR [edi+348]
	mov	eax, DWORD PTR [edi+348]
	push	DWORD PTR [edi+eax*4+284]
	call	_free
	add	esp, 4
	cmp	DWORD PTR [edi+348], 0
	jne	SHORT $LL4@destroyScr
$LN5@destroyScr:
; Line 89
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN6@destroyScr
; Line 90
	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	je	SHORT $LN7@destroyScr
; Line 91
	push	ecx
	push	eax
	call	_destroyRenderTexture
	mov	eax, DWORD PTR [edi]
	add	esp, 8
$LN7@destroyScr:
; Line 92
	push	DWORD PTR [edi+4]
	push	eax
	call	_destroyRenderFont
	add	esp, 8
$LN6@destroyScr:
; Line 94
	mov	eax, DWORD PTR [edi+368]
	test	eax, eax
	je	SHORT $LN8@destroyScr
; Line 95
	push	eax
	call	_fclose
	add	esp, 4
$LN8@destroyScr:
; Line 96
	push	edi
	call	_free
	add	esp, 4
	pop	edi
	pop	ebx
; Line 97
	ret	0
_destroyScriptConsole ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _createScriptConsole
_TEXT	SEGMENT
_render$ = 8						; size = 4
_sigpngpath$ = 12					; size = 4
_font$ = 16						; size = 4
_size$ = 20						; size = 4
_custom$ = 24						; size = 4
_bgargb$ = 28						; size = 4
_createScriptConsole PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 46
	push	esi
; Line 50
	push	372					; 00000174H
	call	_malloc
	mov	esi, eax
	add	esp, 4
; Line 51
	test	esi, esi
	jne	SHORT $LN2@createScri
	pop	esi
; Line 77
	ret	0
$LN2@createScri:
	push	edi
; Line 54
	mov	edi, DWORD PTR _render$[esp+4]
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi], edi
	test	edi, edi
	je	SHORT $LN5@createScri
; Line 55
	mov	eax, DWORD PTR _font$[esp+4]
	mov	ecx, OFFSET ??_C@_0BM@LKHHPCGE@Microsoft?5JhengHei?5UI?5Light@
	test	eax, eax
	cmovne	ecx, eax
	push	ecx
	push	0
	push	edi
	call	_createRenderFont
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+4], eax
; Line 56
	test	eax, eax
	jne	SHORT $LN4@createScri
; Line 57
	push	esi
	call	_free
	add	esp, 4
; Line 58
	xor	eax, eax
	pop	edi
	pop	esi
; Line 77
	ret	0
$LN4@createScri:
; Line 60
	mov	eax, DWORD PTR _sigpngpath$[esp+4]
	test	eax, eax
	je	SHORT $LN5@createScri
	push	ebx
	push	OFFSET ??_C@_02JDPG@rb@
	push	eax
	call	_fopen
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	SHORT $LN8@createScri
; Line 61
	push	0
	push	ebx
	push	edi
	call	_createRenderTextureEx
; Line 62
	push	ebx
	mov	DWORD PTR [esi+8], eax
	call	_fclose
	add	esp, 16					; 00000010H
$LN8@createScri:
	pop	ebx
$LN5@createScri:
; Line 67
	movss	xmm0, DWORD PTR _size$[esp+4]
	mov	eax, DWORD PTR _bgargb$[esp+4]
	mulss	xmm0, DWORD PTR __real@3c8f5c29
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR _custom$[esp+4]
	mov	DWORD PTR [esi+16], eax
; Line 76
	mov	eax, esi
	pop	edi
	movss	DWORD PTR [esi+20], xmm0
	mov	BYTE PTR [esi+24], 0
	mov	DWORD PTR [esi+280], 0
	mov	DWORD PTR [esi+348], 0
	mov	DWORD PTR [esi+352], -1
	mov	DWORD PTR [esi+356], 0
	mov	DWORD PTR [esi+360], 0
	mov	DWORD PTR [esi+364], 0
	mov	DWORD PTR [esi+368], 0
	pop	esi
; Line 77
	ret	0
_createScriptConsole ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printConsoleFormatted
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_type$ = 12						; size = 4
_fmt$ = 16						; size = 4
_printConsoleFormatted PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 337
	push	ebx
	push	esi
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
; Line 1440
	call	___local_stdio_printf_options
	mov	ebx, eax
	lea	eax, DWORD PTR _fmt$[esp+8]
	push	eax
	push	0
	push	DWORD PTR _fmt$[esp+12]
	mov	ecx, DWORD PTR [ebx]
	push	0
	push	0
	push	DWORD PTR [ebx+4]
	or	ecx, 2
	push	ecx
	call	___stdio_common_vsprintf
	mov	esi, eax
	add	esp, 28					; 0000001cH
; Line 1444
	or	eax, -1
	test	esi, esi
	cmovs	esi, eax
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 344
	test	esi, esi
	js	SHORT $LN2@printConso
	push	edi
	inc	esi
	push	esi
	call	_malloc
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	SHORT $LN8@printConso
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
; Line 1440
	lea	eax, DWORD PTR _fmt$[esp+12]
	push	eax
	mov	eax, DWORD PTR [ebx]
	push	0
	push	DWORD PTR _fmt$[esp+16]
	or	eax, 2
	push	esi
	push	edi
	push	DWORD PTR [ebx+4]
	push	eax
	call	___stdio_common_vsprintf
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 346
	push	edi
	push	DWORD PTR _type$[esp+40]
	push	DWORD PTR _sc$[esp+44]
	call	_printConsoleRaw
; Line 347
	push	edi
	call	_free
	add	esp, 44					; 0000002cH
$LN8@printConso:
	pop	edi
$LN2@printConso:
	pop	esi
; Line 350
	pop	ebx
	ret	0
_printConsoleFormatted ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printConsoleRaw
_TEXT	SEGMENT
_timer$1 = -8						; size = 8
_sc$ = 8						; size = 4
_type$ = 12						; size = 4
_last$ = 16						; size = 4
_str$ = 16						; size = 4
_printConsoleRaw PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 182
	sub	esp, 8
	push	ebp
; Line 187
	mov	ebp, DWORD PTR _str$[esp+8]
	cmp	BYTE PTR [ebp], 0
	jne	SHORT $LN5@printConso
; Line 188
	mov	eax, 1
	pop	ebp
; Line 224
	add	esp, 8
	ret	0
$LN5@printConso:
	push	ebx
	push	esi
	push	edi
; Line 189
	mov	edi, DWORD PTR _sc$[esp+20]
	mov	esi, DWORD PTR [edi+368]
	test	esi, esi
	je	SHORT $LN14@printConso
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\time.h
; Line 536
	lea	eax, DWORD PTR _timer$1[esp+24]
	push	eax
	call	__time64
; Line 512
	lea	eax, DWORD PTR _timer$1[esp+28]
	push	eax
	call	__localtime64
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 176
	mov	edx, DWORD PTR _type$[esp+28]
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\time.h
; Line 512
	add	esp, 8
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\console.c
; Line 176
	test	edx, edx
	je	SHORT $LN17@printConso
	cmp	edx, 3
	je	SHORT $LN17@printConso
; Line 179
	push	ebp
	cmp	edx, 1
	mov	ecx, OFFSET ??_C@_05MBDEGLCK@ERROR@
	mov	ebx, OFFSET ??_C@_07KCOHIFOP@WARNING@
	cmovne	ecx, ebx
	push	ecx
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax+8]
	push	OFFSET ??_C@_0BL@EPFNCBCN@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$FL?$CFs?$FN?5?$CFs?$AN?6@
	push	esi
	call	_fprintf
	add	esp, 28					; 0000001cH
	jmp	SHORT $LN16@printConso
$LN17@printConso:
; Line 177
	push	ebp
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax+8]
	push	OFFSET ??_C@_0BG@EMEDFEGG@?$FL?$CF?42d?3?$CF?42d?3?$CF?42d?$FN?5?$CFs?$AN?6@
	push	esi
	call	_fprintf
	add	esp, 24					; 00000018H
$LN16@printConso:
; Line 180
	push	esi
	call	_fflush
	add	esp, 4
$LN14@printConso:
; Line 192
	cmp	DWORD PTR [edi+360], 1024		; 00000400H
	jge	SHORT $LN7@printConso
; Line 194
	push	16					; 00000010H
	call	_malloc
	mov	ebx, eax
	add	esp, 4
; Line 195
	test	ebx, ebx
	je	$LN32@printConso
; Line 197
	mov	eax, DWORD PTR [edi+356]
; Line 199
	inc	DWORD PTR [edi+360]
	mov	DWORD PTR [ebx+12], eax
; Line 200
	mov	eax, DWORD PTR [edi+364]
	mov	DWORD PTR [edi+356], ebx
	test	eax, eax
	je	SHORT $LN11@printConso
; Line 201
	inc	eax
; Line 203
	jmp	SHORT $LN33@printConso
$LN7@printConso:
; Line 204
	mov	ecx, DWORD PTR [edi+356]
	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	SHORT $LN28@printConso
$LL4@printConso:
; Line 205
	mov	esi, ecx
	mov	ecx, eax
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	jne	SHORT $LL4@printConso
; Line 204
	jmp	SHORT $LN3@printConso
$LN28@printConso:
	mov	esi, DWORD PTR _last$[esp+20]
$LN3@printConso:
; Line 206
	mov	eax, DWORD PTR [esi+12]
	push	DWORD PTR [eax+4]
	call	_free
; Line 207
	mov	ecx, DWORD PTR [esi+12]
	add	esp, 4
	mov	eax, DWORD PTR [edi+356]
	mov	DWORD PTR [ecx+12], eax
; Line 208
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [edi+356], eax
; Line 209
	mov	DWORD PTR [esi+12], 0
; Line 211
	mov	eax, DWORD PTR [edi+364]
	mov	ebx, DWORD PTR [edi+356]
	test	eax, eax
	je	SHORT $LN11@printConso
	mov	ecx, DWORD PTR [edi+360]
	inc	eax
	mov	DWORD PTR [edi+364], eax
	cmp	eax, ecx
	jl	SHORT $LN11@printConso
; Line 212
	lea	eax, DWORD PTR [ecx-1]
$LN33@printConso:
; Line 215
	mov	DWORD PTR [edi+364], eax
$LN11@printConso:
	mov	esi, ebp
	lea	ecx, DWORD PTR [esi+1]
$LL27@printConso:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL27@printConso
	sub	esi, ecx
	push	esi
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $LN12@printConso
; Line 216
	push	esi
	push	ebp
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ebx+4], eax
; Line 218
	mov	eax, DWORD PTR _type$[esp+20]
	mov	DWORD PTR [ebx+8], esi
	mov	DWORD PTR [ebx], eax
; Line 219
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
; Line 224
	add	esp, 8
	ret	0
$LN12@printConso:
; Line 221
	mov	eax, DWORD PTR [ebx+12]
; Line 222
	push	ebx
	mov	DWORD PTR [edi+356], eax
	call	_free
	add	esp, 4
$LN32@printConso:
; Line 223
	pop	edi
	pop	esi
	pop	ebx
	xor	eax, eax
	pop	ebp
; Line 224
	add	esp, 8
	ret	0
_printConsoleRaw ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\time.h
; Line 536
	jmp	__time64
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _localtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\time.h
; Line 512
	jmp	__localtime64
_localtime ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _vsnprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
_vsnprintf PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
; Line 1440
	push	DWORD PTR __ArgList$[esp-4]
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __BufferCount$[esp+8]
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 2
	push	ecx
	call	___stdio_common_vsprintf
; Line 1444
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1445
	ret	0
_vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
; Line 643
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 842
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
; Line 643
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
