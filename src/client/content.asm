; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28107.0 

	TITLE	C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_createContentManager
PUBLIC	_destroyContentManager
PUBLIC	_freeContentListings
PUBLIC	_wasContentReplaced
PUBLIC	_addContentFile
PUBLIC	_addContentUsingLoader
PUBLIC	_makeArchiveWithContent
PUBLIC	??_C@_0CI@CDJOBGGC@?$FL?$CFs?$FN?5failed?5to?5register?5content@ ; `string'
PUBLIC	??_C@_08OAGOAADG@act_file@			; `string'
PUBLIC	??_C@_09JNMINGFM@cuts_file@			; `string'
PUBLIC	??_C@_0N@HFCIKJOA@trigger_file@			; `string'
PUBLIC	??_C@_08JANKDMEN@ide_file@			; `string'
PUBLIC	??_C@_0N@NCDPGIKO@scripts_file@			; `string'
PUBLIC	??_C@_0L@LBKGENCP@world_file@			; `string'
PUBLIC	??_C@_0BA@FPIGCIAC@content?5builder@		; `string'
PUBLIC	??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@ ; `string'
PUBLIC	??_C@_0BI@PLEFIACD@failed?5to?5open?5file?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0BG@KJLCGAPN@invalid?5file?5size?3?5?$CFs@ ; `string'
PUBLIC	??_C@_09GEAADJDD@dir?5files@			; `string'
PUBLIC	??_C@_0BI@GCIMLKCG@failed?5to?5read?5file?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0L@GONMOMPE@dir?5sorter@			; `string'
PUBLIC	??_C@_0L@EGGABOGG@img?5buffer@			; `string'
PUBLIC	??_C@_0DC@GPNPADIA@failed?5to?5seek?5file?3?5?$CFs?5?$CItarget@ ; `string'
PUBLIC	??_C@_0FB@MGBPKGHP@failed?5to?5copy?5file?3?5?$CFs?5?$CItarget@ ; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_0M@FHBJIOOF@copy?5buffer@			; `string'
PUBLIC	??_C@_0BK@EJFHDDOK@failed?5to?5append?5file?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0BJ@OIDOENJ@failed?5to?5write?5file?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0BJ@MMHCDFAD@built?5?$CF?4?$CKs?4img?5in?5?$CFlu?5ms@ ; `string'
EXTRN	_calloc:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	_realloc:PROC
EXTRN	_strncpy:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__imp__GetFileSize@8:PROC
EXTRN	__imp__ReadFile@20:PROC
EXTRN	__imp__SetFilePointer@16:PROC
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	_dslstrncmp:PROC
EXTRN	_getConfigStringArray:PROC
EXTRN	_openDslFile:PROC
EXTRN	_readDslFile:PROC
EXTRN	_closeDslFile:PROC
EXTRN	_printConsoleFormatted:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BJ@MMHCDFAD@built?5?$CF?4?$CKs?4img?5in?5?$CFlu?5ms@
CONST	SEGMENT
??_C@_0BJ@MMHCDFAD@built?5?$CF?4?$CKs?4img?5in?5?$CFlu?5ms@ DB 'built %.*'
	DB	's.img in %lu ms', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OIDOENJ@failed?5to?5write?5file?3?5?$CFs@
CONST	SEGMENT
??_C@_0BJ@OIDOENJ@failed?5to?5write?5file?3?5?$CFs@ DB 'failed to write f'
	DB	'ile: %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EJFHDDOK@failed?5to?5append?5file?3?5?$CFs@
CONST	SEGMENT
??_C@_0BK@EJFHDDOK@failed?5to?5append?5file?3?5?$CFs@ DB 'failed to appen'
	DB	'd file: %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FHBJIOOF@copy?5buffer@
CONST	SEGMENT
??_C@_0M@FHBJIOOF@copy?5buffer@ DB 'copy buffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@MGBPKGHP@failed?5to?5copy?5file?3?5?$CFs?5?$CItarget@
CONST	SEGMENT
??_C@_0FB@MGBPKGHP@failed?5to?5copy?5file?3?5?$CFs?5?$CItarget@ DB 'faile'
	DB	'd to copy file: %s (target: %.*s, buffer: %lu, bytes: %lu / %'
	DB	'lu, win32: %d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GPNPADIA@failed?5to?5seek?5file?3?5?$CFs?5?$CItarget@
CONST	SEGMENT
??_C@_0DC@GPNPADIA@failed?5to?5seek?5file?3?5?$CFs?5?$CItarget@ DB 'faile'
	DB	'd to seek file: %s (target: %.*s, win32: %d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EGGABOGG@img?5buffer@
CONST	SEGMENT
??_C@_0L@EGGABOGG@img?5buffer@ DB 'img buffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GONMOMPE@dir?5sorter@
CONST	SEGMENT
??_C@_0L@GONMOMPE@dir?5sorter@ DB 'dir sorter', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GCIMLKCG@failed?5to?5read?5file?3?5?$CFs@
CONST	SEGMENT
??_C@_0BI@GCIMLKCG@failed?5to?5read?5file?3?5?$CFs@ DB 'failed to read fi'
	DB	'le: %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09GEAADJDD@dir?5files@
CONST	SEGMENT
??_C@_09GEAADJDD@dir?5files@ DB 'dir files', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KJLCGAPN@invalid?5file?5size?3?5?$CFs@
CONST	SEGMENT
??_C@_0BG@KJLCGAPN@invalid?5file?5size?3?5?$CFs@ DB 'invalid file size: %'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLEFIACD@failed?5to?5open?5file?3?5?$CFs@
CONST	SEGMENT
??_C@_0BI@PLEFIACD@failed?5to?5open?5file?3?5?$CFs@ DB 'failed to open fi'
	DB	'le: %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
CONST	SEGMENT
??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@ DB 'failed to'
	DB	' allocate memory for %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FPIGCIAC@content?5builder@
CONST	SEGMENT
??_C@_0BA@FPIGCIAC@content?5builder@ DB 'content builder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LBKGENCP@world_file@
CONST	SEGMENT
??_C@_0L@LBKGENCP@world_file@ DB 'world_file', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NCDPGIKO@scripts_file@
CONST	SEGMENT
??_C@_0N@NCDPGIKO@scripts_file@ DB 'scripts_file', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JANKDMEN@ide_file@
CONST	SEGMENT
??_C@_08JANKDMEN@ide_file@ DB 'ide_file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HFCIKJOA@trigger_file@
CONST	SEGMENT
??_C@_0N@HFCIKJOA@trigger_file@ DB 'trigger_file', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JNMINGFM@cuts_file@
CONST	SEGMENT
??_C@_09JNMINGFM@cuts_file@ DB 'cuts_file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAGOAADG@act_file@
CONST	SEGMENT
??_C@_08OAGOAADG@act_file@ DB 'act_file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CDJOBGGC@?$FL?$CFs?$FN?5failed?5to?5register?5content@
CONST	SEGMENT
??_C@_0CI@CDJOBGGC@?$FL?$CFs?$FN?5failed?5to?5register?5content@ DB '[%s]'
	DB	' failed to register content (%s %s)', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _writeOutDir
_TEXT	SEGMENT
_wrote$ = 8						; size = 4
_bs$ = 8						; size = 4
_dsl$ = 12						; size = 4
_name$ = 16						; size = 4
_writeOutDir PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 376
	push	esi
	push	edi
; Line 380
	mov	edi, DWORD PTR _bs$[esp+4]
	push	DWORD PTR [edi+4]
	call	DWORD PTR __imp__CloseHandle@4
; Line 381
	mov	esi, DWORD PTR _name$[esp+4]
	push	0
	push	128					; 00000080H
	push	2
	push	0
	push	0
	push	1073741824				; 40000000H
	push	esi
	call	DWORD PTR __imp__CreateFileA@28
	mov	DWORD PTR [edi+4], eax
; Line 382
	cmp	eax, -1
	jne	SHORT $LN2@writeOutDi
; Line 383
	mov	eax, DWORD PTR _dsl$[esp+4]
	push	esi
	push	OFFSET ??_C@_0BI@PLEFIACD@failed?5to?5open?5file?3?5?$CFs@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
; Line 384
	xor	eax, eax
	pop	edi
; Line 392
	pop	esi
	ret	0
$LN2@writeOutDi:
	push	ebx
; Line 386
	mov	ebx, DWORD PTR [edi+8]
; Line 387
	lea	ecx, DWORD PTR _wrote$[esp+8]
	push	0
	push	ecx
	shl	ebx, 5
	push	ebx
	push	DWORD PTR [edi+12]
	push	eax
	call	DWORD PTR __imp__WriteFile@20
	test	eax, eax
	je	SHORT $LN4@writeOutDi
	cmp	DWORD PTR _wrote$[esp+8], ebx
	jne	SHORT $LN4@writeOutDi
; Line 391
	pop	ebx
	pop	edi
	mov	eax, 1
; Line 392
	pop	esi
	ret	0
$LN4@writeOutDi:
; Line 388
	mov	eax, DWORD PTR _dsl$[esp+8]
	push	esi
	push	OFFSET ??_C@_0BJ@OIDOENJ@failed?5to?5write?5file?3?5?$CFs@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
; Line 389
	xor	eax, eax
	pop	ebx
	pop	edi
; Line 392
	pop	esi
	ret	0
_writeOutDir ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _copyContent
_TEXT	SEGMENT
_size$1 = -24						; size = 4
_bufsiz$1$ = -20					; size = 4
_bytes$2 = -16						; size = 4
_count$1$ = -12						; size = 4
tv371 = -8						; size = 4
_sc$1$ = -4						; size = 4
_bs$ = 8						; size = 4
_dsl$ = 12						; size = 4
_copyContent PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 351
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
; Line 357
	mov	esi, DWORD PTR _bs$[esp+28]
	push	edi
	push	DWORD PTR [esi]
	call	DWORD PTR __imp__CloseHandle@4
; Line 358
	mov	DWORD PTR [esi], -1
; Line 359
	mov	esi, DWORD PTR [esi+20]
; Line 361
	push	65536					; 00010000H
	mov	DWORD PTR _sc$1$[esp+40], esi
	mov	DWORD PTR _bufsiz$1$[esp+40], 65536	; 00010000H
	mov	ebx, DWORD PTR [esi+4]
	call	_malloc
	mov	edi, eax
	add	esp, 4
; Line 362
	test	edi, edi
	jne	SHORT $LN17@copyConten
; Line 363
	mov	eax, DWORD PTR _dsl$[esp+32]
	push	OFFSET ??_C@_0M@FHBJIOOF@copy?5buffer@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
; Line 364
	xor	eax, eax
	pop	edi
; Line 375
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN17@copyConten:
	push	ebp
; Line 366
	test	ebx, ebx
	je	$LN3@copyConten
	imul	eax, ebx, 264
$LL2@copyConten:
; Line 368
	mov	ebp, DWORD PTR [esi]
	sub	eax, 264				; 00000108H
	add	ebp, eax
	mov	DWORD PTR tv371[esp+40], eax
; Line 316
	lea	eax, DWORD PTR _size$1[esp+40]
; Line 367
	dec	ebx
; Line 316
	push	eax
	push	OFFSET ??_C@_02JDPG@rb@
	lea	eax, DWORD PTR [ebp+4]
; Line 367
	mov	DWORD PTR _count$1$[esp+48], ebx
; Line 316
	push	eax
	push	DWORD PTR [ebp]
	push	DWORD PTR _dsl$[esp+52]
	call	_openDslFile
	mov	ebx, eax
	add	esp, 20					; 00000014H
; Line 317
	test	ebx, ebx
	je	$LN18@copyConten
; Line 319
	mov	edx, DWORD PTR _size$1[esp+40]
	mov	ecx, edx
	and	ecx, -2147481601			; 800007ffH
	jns	SHORT $LN28@copyConten
	dec	ecx
	or	ecx, -2048				; fffff800H
	inc	ecx
$LN28@copyConten:
; Line 321
	mov	esi, 2048				; 00000800H
	sub	esi, ecx
	test	ecx, ecx
	cmove	esi, ecx
	lea	eax, DWORD PTR [esi+edx]
	cmp	DWORD PTR _bufsiz$1$[esp+40], eax
	jae	SHORT $LN10@copyConten
; Line 322
	push	eax
	call	_malloc
	add	esp, 4
; Line 323
	test	eax, eax
	je	$LN24@copyConten
; Line 328
	mov	edx, DWORD PTR _size$1[esp+40]
; Line 329
	mov	edi, eax
	lea	ecx, DWORD PTR [esi+edx]
	mov	DWORD PTR _bufsiz$1$[esp+40], ecx
$LN10@copyConten:
; Line 331
	push	edx
	push	edi
	push	ebx
	call	_readDslFile
	add	esp, 12					; 0000000cH
	push	ebx
	cmp	eax, DWORD PTR _size$1[esp+44]
	jne	$LN25@copyConten
; Line 335
	call	_closeDslFile
; Line 336
	mov	eax, DWORD PTR _size$1[esp+44]
	add	esp, 4
	test	esi, esi
	je	SHORT $LN13@copyConten
; Line 337
	push	esi
	add	eax, edi
	push	0
	push	eax
	call	_memset
; Line 338
	mov	eax, DWORD PTR _size$1[esp+52]
	add	esp, 12					; 0000000cH
	add	eax, esi
	mov	DWORD PTR _size$1[esp+40], eax
$LN13@copyConten:
; Line 340
	mov	esi, DWORD PTR _bs$[esp+36]
	lea	ecx, DWORD PTR _bytes$2[esp+40]
	push	0
	push	ecx
	push	eax
	push	edi
	push	DWORD PTR [esi+4]
	call	DWORD PTR __imp__WriteFile@20
	test	eax, eax
	je	$LN15@copyConten
	mov	eax, DWORD PTR _bytes$2[esp+40]
	cmp	eax, DWORD PTR _size$1[esp+40]
	jne	$LN15@copyConten
; Line 344
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	inc	eax
	shl	ecx, 5
	add	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], eax
; Line 345
	mov	eax, DWORD PTR [esi+16]
	shr	eax, 11					; 0000000bH
	mov	DWORD PTR [ecx], eax
; Line 346
	mov	eax, DWORD PTR _size$1[esp+40]
	cdq
	and	edx, 2047				; 000007ffH
	add	eax, edx
	sar	eax, 11					; 0000000bH
	mov	DWORD PTR [ecx+4], eax
; Line 347
	lea	eax, DWORD PTR [ecx+8]
	push	24					; 00000018H
	push	DWORD PTR [ebp+260]
	push	eax
	call	_strncpy
; Line 348
	mov	eax, DWORD PTR _size$1[esp+52]
	add	esp, 12					; 0000000cH
	add	DWORD PTR [esi+16], eax
; Line 366
	mov	ebx, DWORD PTR _count$1$[esp+40]
	test	ebx, ebx
	je	$LN3@copyConten
	mov	eax, DWORD PTR tv371[esp+40]
	mov	esi, DWORD PTR _sc$1$[esp+40]
	jmp	$LL2@copyConten
$LN24@copyConten:
; Line 324
	mov	eax, DWORD PTR _dsl$[esp+36]
	push	OFFSET ??_C@_0M@FHBJIOOF@copy?5buffer@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
; Line 325
	push	ebx
	call	_closeDslFile
	add	esp, 20					; 00000014H
; Line 369
	push	edi
	call	_free
	add	esp, 4
; Line 370
	xor	eax, eax
	pop	ebp
	pop	edi
; Line 375
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN15@copyConten:
; Line 341
	push	DWORD PTR [ebp+260]
	mov	eax, DWORD PTR _dsl$[esp+40]
	push	OFFSET ??_C@_0BK@EJFHDDOK@failed?5to?5append?5file?3?5?$CFs@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
; Line 369
	push	edi
	call	_free
	add	esp, 4
; Line 370
	xor	eax, eax
	pop	ebp
	pop	edi
; Line 375
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN25@copyConten:
; Line 332
	call	_closeDslFile
	add	esp, 4
$LN18@copyConten:
; Line 369
	push	edi
	call	_free
	add	esp, 4
; Line 370
	xor	eax, eax
	pop	ebp
	pop	edi
; Line 375
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN3@copyConten:
; Line 373
	push	edi
	call	_free
	add	esp, 4
; Line 374
	mov	eax, 1
	pop	ebp
	pop	edi
; Line 375
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
_copyContent ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _addContent
_TEXT	SEGMENT
_size$ = -8						; size = 4
_bytes$ = -4						; size = 4
_bs$ = 8						; size = 4
_dsl$ = 12						; size = 4
_cf$ = 16						; size = 4
_bufsiz$ = 20						; size = 4
_buffer$ = 24						; size = 4
_addContent PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 308
	sub	esp, 8
; Line 316
	lea	eax, DWORD PTR _size$[esp+8]
	push	ebp
	mov	ebp, DWORD PTR _cf$[esp+8]
	push	edi
	push	eax
	push	OFFSET ??_C@_02JDPG@rb@
	lea	eax, DWORD PTR [ebp+4]
	push	eax
	push	DWORD PTR [ebp]
	push	DWORD PTR _dsl$[esp+28]
	call	_openDslFile
	mov	edi, eax
	add	esp, 20					; 00000014H
; Line 317
	test	edi, edi
	jne	SHORT $LN2@addContent
; Line 350
	pop	edi
	pop	ebp
	add	esp, 8
	ret	0
$LN2@addContent:
; Line 319
	mov	ecx, DWORD PTR _size$[esp+16]
	mov	eax, ecx
	push	ebx
	push	esi
	and	eax, -2147481601			; 800007ffH
	jns	SHORT $LN16@addContent
	dec	eax
	or	eax, -2048				; fffff800H
	inc	eax
$LN16@addContent:
; Line 321
	mov	edx, DWORD PTR _bufsiz$[esp+20]
	mov	esi, 2048				; 00000800H
	mov	ebx, DWORD PTR _buffer$[esp+20]
	sub	esi, eax
	test	eax, eax
	cmove	esi, eax
	lea	eax, DWORD PTR [esi+ecx]
	cmp	DWORD PTR [edx], eax
	jae	SHORT $LN12@addContent
; Line 322
	push	eax
	call	_malloc
	mov	edx, eax
	add	esp, 4
; Line 323
	test	edx, edx
	jne	SHORT $LN5@addContent
; Line 324
	mov	eax, DWORD PTR _dsl$[esp+20]
	push	OFFSET ??_C@_0M@FHBJIOOF@copy?5buffer@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
; Line 325
	push	edi
	call	_closeDslFile
	add	esp, 20					; 00000014H
; Line 342
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 350
	pop	ebp
	add	esp, 8
	ret	0
$LN5@addContent:
; Line 328
	mov	ecx, DWORD PTR _size$[esp+24]
	mov	ebp, DWORD PTR _bufsiz$[esp+20]
	lea	eax, DWORD PTR [esi+ecx]
	mov	DWORD PTR [ebp], eax
	mov	ebp, DWORD PTR _cf$[esp+20]
; Line 329
	mov	DWORD PTR [ebx], edx
$LN12@addContent:
; Line 331
	push	ecx
	push	DWORD PTR [ebx]
	push	edi
	call	_readDslFile
	add	esp, 12					; 0000000cH
	push	edi
	cmp	eax, DWORD PTR _size$[esp+28]
	je	SHORT $LN6@addContent
; Line 332
	call	_closeDslFile
	add	esp, 4
; Line 342
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 350
	pop	ebp
	add	esp, 8
	ret	0
$LN6@addContent:
; Line 335
	call	_closeDslFile
	add	esp, 4
; Line 336
	test	esi, esi
	je	SHORT $LN13@addContent
; Line 337
	mov	eax, DWORD PTR [ebx]
	add	eax, DWORD PTR _size$[esp+24]
	push	esi
	push	0
	push	eax
	call	_memset
; Line 338
	mov	eax, DWORD PTR _size$[esp+36]
	add	esp, 12					; 0000000cH
	add	eax, esi
	mov	DWORD PTR _size$[esp+24], eax
	jmp	SHORT $LN7@addContent
$LN13@addContent:
; Line 336
	mov	eax, DWORD PTR _size$[esp+24]
$LN7@addContent:
; Line 340
	mov	esi, DWORD PTR _bs$[esp+20]
	lea	ecx, DWORD PTR _bytes$[esp+24]
	push	0
	push	ecx
	push	eax
	push	DWORD PTR [ebx]
	push	DWORD PTR [esi+4]
	call	DWORD PTR __imp__WriteFile@20
	test	eax, eax
	je	SHORT $LN9@addContent
	mov	eax, DWORD PTR _bytes$[esp+24]
	cmp	eax, DWORD PTR _size$[esp+24]
	jne	SHORT $LN9@addContent
; Line 344
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	inc	eax
	shl	ecx, 5
	add	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], eax
; Line 345
	mov	eax, DWORD PTR [esi+16]
	shr	eax, 11					; 0000000bH
	mov	DWORD PTR [ecx], eax
; Line 346
	mov	eax, DWORD PTR _size$[esp+24]
	cdq
	and	edx, 2047				; 000007ffH
	add	eax, edx
	sar	eax, 11					; 0000000bH
	mov	DWORD PTR [ecx+4], eax
; Line 347
	lea	eax, DWORD PTR [ecx+8]
	push	24					; 00000018H
	push	DWORD PTR [ebp+260]
	push	eax
	call	_strncpy
; Line 348
	mov	eax, DWORD PTR _size$[esp+36]
	add	esp, 12					; 0000000cH
	add	DWORD PTR [esi+16], eax
; Line 349
	mov	eax, 1
	pop	esi
	pop	ebx
	pop	edi
; Line 350
	pop	ebp
	add	esp, 8
	ret	0
$LN9@addContent:
; Line 341
	push	DWORD PTR [ebp+260]
	mov	eax, DWORD PTR _dsl$[esp+24]
	push	OFFSET ??_C@_0BK@EJFHDDOK@failed?5to?5append?5file?3?5?$CFs@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
; Line 342
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 350
	pop	ebp
	add	esp, 8
	ret	0
_addContent ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _copyBaseImg
_TEXT	SEGMENT
_pos$1$ = -24						; size = 4
_dirs$1$ = -20						; size = 4
_index$1$ = -16						; size = 4
_buffer$1$ = -12					; size = 4
_file$2$ = -8						; size = 4
_count$1$ = -4						; size = 4
_bytes$ = 8						; size = 4
_bs$ = 8						; size = 4
_dsl$ = 12						; size = 4
_name$ = 16						; size = 4
_copyBaseImg PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 257
	sub	esp, 24					; 00000018H
	push	ebx
; Line 267
	mov	ebx, DWORD PTR _bs$[esp+24]
	push	ebp
	push	DWORD PTR [ebx]
	call	DWORD PTR __imp__CloseHandle@4
; Line 268
	mov	ebp, DWORD PTR _name$[esp+28]
	push	0
	push	128					; 00000080H
	push	3
	push	0
	push	0
	push	-2147483648				; 80000000H
	push	ebp
	call	DWORD PTR __imp__CreateFileA@28
	mov	DWORD PTR [ebx], eax
; Line 269
	cmp	eax, -1
	jne	SHORT $LN8@copyBaseIm
; Line 270
	mov	eax, DWORD PTR _dsl$[esp+28]
	push	ebp
	push	OFFSET ??_C@_0BI@PLEFIACD@failed?5to?5open?5file?3?5?$CFs@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
; Line 271
	xor	eax, eax
	pop	ebp
; Line 307
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN8@copyBaseIm:
; Line 275
	mov	edx, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [ebx+12]
	push	edi
	mov	edi, 64					; 00000040H
	test	edx, edx
	je	SHORT $LN3@copyBaseIm
; Line 273
	add	ecx, 4
$LL4@copyBaseIm:
; Line 276
	mov	eax, edi
	lea	ecx, DWORD PTR [ecx+32]
	mov	edi, DWORD PTR [ecx-32]
	cmp	edi, eax
	cmovbe	edi, eax
	sub	edx, 1
	jne	SHORT $LL4@copyBaseIm
$LN3@copyBaseIm:
	push	esi
; Line 278
	shl	edi, 11					; 0000000bH
; Line 279
	push	edi
	call	_malloc
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _buffer$1$[esp+40], esi
; Line 280
	test	esi, esi
	jne	SHORT $LN10@copyBaseIm
; Line 281
	mov	eax, DWORD PTR _dsl$[esp+36]
	push	OFFSET ??_C@_0L@EGGABOGG@img?5buffer@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
; Line 282
	push	esi
	call	_free
	add	esp, 20					; 00000014H
; Line 283
	xor	eax, eax
	pop	esi
	pop	edi
	pop	ebp
; Line 307
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN10@copyBaseIm:
; Line 286
	mov	eax, DWORD PTR [ebx+8]
	xor	edx, edx
	xor	ecx, ecx
	mov	DWORD PTR [ebx+16], 0
	mov	DWORD PTR _pos$1$[esp+40], edx
	mov	DWORD PTR _index$1$[esp+40], ecx
	test	eax, eax
	je	$LN6@copyBaseIm
; Line 277
	xor	ebp, ebp
	npad	5
$LL7@copyBaseIm:
; Line 287
	shl	ecx, 5
	add	ecx, DWORD PTR [ebx+12]
	mov	DWORD PTR _file$2$[esp+40], ecx
; Line 288
	mov	esi, DWORD PTR [ecx]
	shl	esi, 11					; 0000000bH
	mov	ecx, esi
	sub	ecx, edx
	je	SHORT $LN11@copyBaseIm
; Line 289
	push	1
	push	0
	push	ecx
	push	DWORD PTR [ebx]
	call	DWORD PTR __imp__SetFilePointer@16
	cmp	eax, -1
	jne	SHORT $LN12@copyBaseIm
	mov	ebp, DWORD PTR __imp__GetLastError@0
	call	ebp
	test	eax, eax
	jne	$LN27@copyBaseIm
$LN12@copyBaseIm:
; Line 294
	mov	ebp, DWORD PTR [ebx+16]
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR _pos$1$[esp+40], esi
$LN11@copyBaseIm:
; Line 296
	sub	eax, DWORD PTR _index$1$[esp+40]
	mov	edx, DWORD PTR _file$2$[esp+40]
	mov	DWORD PTR _count$1$[esp+40], eax
; Line 245
	xor	eax, eax
	mov	DWORD PTR _dirs$1$[esp+40], eax
; Line 246
	xor	esi, esi
$LL19@copyBaseIm:
; Line 248
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 11					; 0000000bH
	add	eax, esi
; Line 249
	cmp	eax, edi
	ja	SHORT $LN18@copyBaseIm
; Line 251
	lea	ecx, DWORD PTR [esi+ebp]
; Line 252
	mov	esi, eax
	shr	ecx, 11					; 0000000bH
	mov	DWORD PTR [edx], ecx
; Line 253
	add	edx, 32					; 00000020H
	mov	ecx, DWORD PTR _dirs$1$[esp+40]
	inc	ecx
	mov	DWORD PTR _dirs$1$[esp+40], ecx
	cmp	ecx, DWORD PTR _count$1$[esp+40]
	jae	SHORT $LN18@copyBaseIm
	mov	ecx, DWORD PTR [edx]
	shl	ecx, 11					; 0000000bH
	sub	ecx, ebp
	sub	ecx, eax
	je	SHORT $LL19@copyBaseIm
$LN18@copyBaseIm:
; Line 297
	mov	ebp, DWORD PTR _buffer$1$[esp+40]
	lea	eax, DWORD PTR _bytes$[esp+36]
	push	0
	push	eax
	push	esi
	push	ebp
	push	DWORD PTR [ebx]
	call	DWORD PTR __imp__ReadFile@20
	test	eax, eax
	je	$LN28@copyBaseIm
	cmp	DWORD PTR _bytes$[esp+36], esi
	jne	$LN28@copyBaseIm
	push	0
	lea	eax, DWORD PTR _bytes$[esp+40]
	push	eax
	push	esi
	push	ebp
	push	DWORD PTR [ebx+4]
	call	DWORD PTR __imp__WriteFile@20
	test	eax, eax
	je	$LN28@copyBaseIm
	cmp	DWORD PTR _bytes$[esp+36], esi
	jne	SHORT $LN28@copyBaseIm
; Line 302
	mov	ecx, DWORD PTR _index$1$[esp+40]
	add	DWORD PTR [ebx+16], esi
; Line 303
	mov	edx, DWORD PTR _pos$1$[esp+40]
	add	ecx, DWORD PTR _dirs$1$[esp+40]
	add	edx, esi
	mov	eax, DWORD PTR [ebx+8]
	mov	ebp, DWORD PTR [ebx+16]
	mov	DWORD PTR _pos$1$[esp+40], edx
	mov	DWORD PTR _index$1$[esp+40], ecx
	cmp	ecx, eax
	jb	$LL7@copyBaseIm
; Line 297
	mov	esi, DWORD PTR _buffer$1$[esp+40]
$LN6@copyBaseIm:
; Line 305
	push	esi
	call	_free
	add	esp, 4
; Line 306
	mov	eax, 1
	pop	esi
	pop	edi
	pop	ebp
; Line 307
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN27@copyBaseIm:
; Line 290
	call	ebp
	push	eax
	mov	eax, DWORD PTR _file$2$[esp+44]
	add	eax, 8
	push	eax
	mov	eax, DWORD PTR _name$[esp+44]
	push	24					; 00000018H
	push	eax
	mov	eax, DWORD PTR _dsl$[esp+52]
	push	OFFSET ??_C@_0DC@GPNPADIA@failed?5to?5seek?5file?3?5?$CFs?5?$CItarget@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
; Line 291
	mov	esi, DWORD PTR _buffer$1$[esp+68]
	push	esi
	call	_free
	add	esp, 32					; 00000020H
; Line 292
	xor	eax, eax
	pop	esi
	pop	edi
	pop	ebp
; Line 307
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN28@copyBaseIm:
; Line 298
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	mov	eax, DWORD PTR _file$2$[esp+44]
	push	esi
	push	DWORD PTR _bytes$[esp+44]
	add	eax, 8
	push	edi
	push	eax
	mov	eax, DWORD PTR _name$[esp+56]
	push	24					; 00000018H
	push	eax
	mov	eax, DWORD PTR _dsl$[esp+64]
	push	OFFSET ??_C@_0FB@MGBPKGHP@failed?5to?5copy?5file?3?5?$CFs?5?$CItarget@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
; Line 299
	push	ebp
	call	_free
	add	esp, 44					; 0000002cH
; Line 300
	xor	eax, eax
	pop	esi
	pop	edi
	pop	ebp
; Line 307
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
_copyBaseImg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _preImgCopy
_TEXT	SEGMENT
_files$ = 8						; size = 4
_count$ = 12						; size = 4
_base$ = 16						; size = 4
_limit$ = 20						; size = 4
_result$ = 24						; size = 4
_preImgCopy PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 240
	push	ebx
	push	ebp
; Line 246
	mov	ebp, DWORD PTR _base$[esp+4]
	xor	ebx, ebx
	push	esi
	mov	esi, DWORD PTR _files$[esp+8]
	push	edi
	xor	edi, edi
$LL4@preImgCopy:
; Line 248
	mov	ecx, DWORD PTR [esi+4]
	shl	ecx, 11					; 0000000bH
	add	ecx, edi
; Line 249
	cmp	ecx, DWORD PTR _limit$[esp+12]
	ja	SHORT $LN12@preImgCopy
; Line 251
	lea	eax, DWORD PTR [edi+ebp]
; Line 253
	inc	ebx
	shr	eax, 11					; 0000000bH
	mov	edi, ecx
	mov	DWORD PTR [esi], eax
	add	esi, 32					; 00000020H
	cmp	ebx, DWORD PTR _count$[esp+12]
	jae	SHORT $LN6@preImgCopy
	mov	edx, DWORD PTR [esi]
	shl	edx, 11					; 0000000bH
	sub	edx, ecx
	sub	edx, ebp
	je	SHORT $LL4@preImgCopy
$LN6@preImgCopy:
; Line 254
	mov	ecx, DWORD PTR _result$[esp+12]
; Line 256
	mov	eax, ebx
	mov	DWORD PTR [ecx], edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
$LN12@preImgCopy:
; Line 254
	mov	eax, DWORD PTR _result$[esp+12]
	mov	DWORD PTR [eax], edi
; Line 256
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
_preImgCopy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sortDirFiles
_TEXT	SEGMENT
_count$1$ = -12						; size = 4
_index$1$ = -8						; size = 4
_files$1$ = -4						; size = 4
_bs$ = 8						; size = 4
_dsl$ = 12						; size = 4
_name$ = 16						; size = 4
_sortDirFiles PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 220
	sub	esp, 12					; 0000000cH
	push	ebx
; Line 226
	mov	ebx, DWORD PTR _bs$[esp+12]
	push	ebp
; Line 227
	mov	eax, DWORD PTR [ebx+20]
	mov	ebp, DWORD PTR [ebx+12]
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR [ebx+8]
	shl	eax, 5
	push	eax
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _files$1$[esp+20], eax
; Line 228
	test	eax, eax
	jne	SHORT $LN5@sortDirFil
; Line 229
	mov	eax, DWORD PTR _dsl$[esp+16]
	push	OFFSET ??_C@_0L@GONMOMPE@dir?5sorter@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
; Line 230
	xor	eax, eax
	pop	ebp
; Line 239
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	0
$LN5@sortDirFil:
	push	edi
; Line 232
	xor	edi, edi
	mov	DWORD PTR _index$1$[esp+24], 0
	mov	DWORD PTR _count$1$[esp+24], edi
	cmp	DWORD PTR [ebx+8], edi
	jbe	$LN3@sortDirFil
	push	esi
$LL4@sortDirFil:
; Line 233
	mov	eax, DWORD PTR [ebx+20]
; Line 77
	mov	esi, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
; Line 78
	test	esi, esi
	je	SHORT $LN36@sortDirFil
; Line 233
	imul	edi, esi, 264
	lea	ebx, DWORD PTR [ebp+8]
	add	edi, ecx
	npad	4
$LL9@sortDirFil:
; Line 79
	sub	edi, 264				; 00000108H
	dec	esi
	push	24					; 00000018H
	push	ebx
	push	DWORD PTR [edi+260]
	call	_dslstrncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN8@sortDirFil
; Line 78
	test	esi, esi
	jne	SHORT $LL9@sortDirFil
; Line 79
	jmp	SHORT $LN38@sortDirFil
$LN8@sortDirFil:
; Line 233
	test	edi, edi
	jne	SHORT $LN37@sortDirFil
$LN38@sortDirFil:
; Line 234
	mov	edi, DWORD PTR _count$1$[esp+28]
	mov	ebx, DWORD PTR _bs$[esp+24]
$LN36@sortDirFil:
	mov	esi, DWORD PTR _files$1$[esp+28]
	mov	eax, edi
; Line 212
	test	edi, edi
	je	SHORT $LN17@sortDirFil
	mov	ecx, DWORD PTR [ebp]
	npad	5
$LL14@sortDirFil:
	cmp	ecx, DWORD PTR [esi]
	jbe	SHORT $LN22@sortDirFil
; Line 213
	add	esi, 32					; 00000020H
	sub	eax, 1
	jne	SHORT $LL14@sortDirFil
; Line 214
	jmp	SHORT $LN17@sortDirFil
$LN22@sortDirFil:
	test	eax, eax
	je	SHORT $LN17@sortDirFil
	mov	edx, eax
	shl	edx, 5
	add	edx, esi
	npad	7
$LL27@sortDirFil:
; Line 216
	movups	xmm0, XMMWORD PTR [edx-32]
	mov	ecx, edx
	sub	edx, 32					; 00000020H
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [ecx+16], xmm0
	sub	eax, 1
	jne	SHORT $LL27@sortDirFil
$LN17@sortDirFil:
; Line 218
	movups	xmm0, XMMWORD PTR [ebp]
; Line 234
	inc	edi
	mov	DWORD PTR _count$1$[esp+28], edi
; Line 218
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [ebp+16]
	movups	XMMWORD PTR [esi+16], xmm0
; Line 233
	jmp	SHORT $LN2@sortDirFil
$LN37@sortDirFil:
	mov	ebx, DWORD PTR _bs$[esp+24]
	mov	edi, DWORD PTR _count$1$[esp+28]
$LN2@sortDirFil:
; Line 232
	mov	edx, DWORD PTR _index$1$[esp+28]
	add	ebp, 32					; 00000020H
	inc	edx
	mov	DWORD PTR _index$1$[esp+28], edx
	cmp	edx, DWORD PTR [ebx+8]
	jb	$LL4@sortDirFil
	pop	esi
$LN3@sortDirFil:
; Line 235
	push	DWORD PTR [ebx+12]
	call	_free
; Line 236
	mov	eax, DWORD PTR _files$1$[esp+28]
	add	esp, 4
; Line 237
	mov	DWORD PTR [ebx+8], edi
	mov	DWORD PTR [ebx+12], eax
; Line 238
	mov	eax, 1
	pop	edi
	pop	ebp
; Line 239
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	0
_sortDirFiles ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _insertDirFile
_TEXT	SEGMENT
_files$ = 8						; size = 4
_file$ = 12						; size = 4
_count$ = 16						; size = 4
_insertDirFile PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 212
	mov	eax, DWORD PTR _count$[esp-4]
	mov	edx, DWORD PTR _files$[esp-4]
	push	edi
	mov	edi, DWORD PTR _file$[esp]
	test	eax, eax
	je	SHORT $LN5@insertDirF
	mov	ecx, DWORD PTR [edi]
$LL2@insertDirF:
	cmp	ecx, DWORD PTR [edx]
	jbe	SHORT $LN8@insertDirF
; Line 213
	add	edx, 32					; 00000020H
	sub	eax, 1
	jne	SHORT $LL2@insertDirF
; Line 218
	movups	xmm0, XMMWORD PTR [edi]
	movups	XMMWORD PTR [edx], xmm0
	movups	xmm0, XMMWORD PTR [edi+16]
	pop	edi
	movups	XMMWORD PTR [edx+16], xmm0
; Line 219
	ret	0
$LN8@insertDirF:
; Line 214
	test	eax, eax
	je	SHORT $LN5@insertDirF
	push	esi
	mov	esi, eax
	shl	esi, 5
	add	esi, edx
	npad	5
$LL11@insertDirF:
; Line 216
	movups	xmm0, XMMWORD PTR [esi-32]
	mov	ecx, esi
	sub	esi, 32					; 00000020H
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [esi+16]
	movups	XMMWORD PTR [ecx+16], xmm0
	sub	eax, 1
	jne	SHORT $LL11@insertDirF
; Line 212
	pop	esi
$LN5@insertDirF:
; Line 218
	movups	xmm0, XMMWORD PTR [edi]
	movups	XMMWORD PTR [edx], xmm0
	movups	xmm0, XMMWORD PTR [edi+16]
	pop	edi
	movups	XMMWORD PTR [edx+16], xmm0
; Line 219
	ret	0
_insertDirFile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _loadDirFiles
_TEXT	SEGMENT
_read$ = 8						; size = 4
_bs$ = 8						; size = 4
_dsl$ = 12						; size = 4
_name$ = 16						; size = 4
_loadDirFiles PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 190
	push	ebx
	push	esi
; Line 194
	mov	esi, DWORD PTR _bs$[esp+4]
	push	0
	push	DWORD PTR [esi]
	call	DWORD PTR __imp__GetFileSize@8
	mov	ebx, eax
; Line 195
	test	ebx, ebx
	je	SHORT $LN3@loadDirFil
	cmp	ebx, -1
	je	SHORT $LN3@loadDirFil
	test	bl, 31					; 0000001fH
	jne	SHORT $LN3@loadDirFil
; Line 199
	mov	eax, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [eax+4]
	shl	eax, 5
	add	eax, ebx
	push	eax
	call	_malloc
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR [esi+12], ecx
; Line 200
	test	ecx, ecx
	jne	SHORT $LN4@loadDirFil
; Line 201
	push	OFFSET ??_C@_09GEAADJDD@dir?5files@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
; Line 202
	jmp	SHORT $LN8@loadDirFil
$LN4@loadDirFil:
; Line 204
	mov	eax, ebx
	shr	eax, 5
; Line 205
	push	0
	mov	DWORD PTR [esi+8], eax
	lea	eax, DWORD PTR _read$[esp+8]
	push	eax
	push	ebx
	push	ecx
	push	DWORD PTR [esi]
	call	DWORD PTR __imp__ReadFile@20
	test	eax, eax
	je	SHORT $LN6@loadDirFil
	cmp	DWORD PTR _read$[esp+4], ebx
	jne	SHORT $LN6@loadDirFil
; Line 209
	pop	esi
	mov	eax, 1
; Line 210
	pop	ebx
	ret	0
$LN6@loadDirFil:
; Line 206
	push	DWORD PTR _name$[esp+4]
	push	OFFSET ??_C@_0BI@GCIMLKCG@failed?5to?5read?5file?3?5?$CFs@
; Line 207
	jmp	SHORT $LN8@loadDirFil
$LN3@loadDirFil:
; Line 196
	push	DWORD PTR _name$[esp+4]
	push	OFFSET ??_C@_0BG@KJLCGAPN@invalid?5file?5size?3?5?$CFs@
$LN8@loadDirFil:
; Line 210
	mov	eax, DWORD PTR _dsl$[esp+12]
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
	xor	eax, eax
	pop	esi
	pop	ebx
	ret	0
_loadDirFiles ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _setupBuild
_TEXT	SEGMENT
_dsl$ = 8						; size = 4
_spath$ = 12						; size = 4
_dpath$ = 16						; size = 4
_setupBuild PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 170
	push	edi
; Line 173
	push	24					; 00000018H
	call	_malloc
	mov	edi, eax
	add	esp, 4
; Line 174
	test	edi, edi
	jne	SHORT $LN2@setupBuild
; Line 175
	mov	eax, DWORD PTR _dsl$[esp]
	push	OFFSET ??_C@_0BA@FPIGCIAC@content?5builder@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
; Line 176
	xor	eax, eax
	pop	edi
; Line 187
	ret	0
$LN2@setupBuild:
	push	ebx
	push	ebp
; Line 179
	mov	ebp, DWORD PTR _spath$[esp+8]
	push	esi
	mov	esi, DWORD PTR __imp__CreateFileA@28
	push	0
	push	128					; 00000080H
	push	3
	push	0
	push	0
	push	-2147483648				; 80000000H
	push	ebp
	mov	DWORD PTR [edi+8], 0
	call	esi
; Line 180
	push	0
	push	128					; 00000080H
	push	2
	push	0
	push	0
	push	1073741824				; 40000000H
	push	DWORD PTR _dpath$[esp+36]
	mov	ebx, eax
	mov	DWORD PTR [edi], ebx
	call	esi
	mov	esi, eax
	mov	DWORD PTR [edi+4], esi
; Line 181
	cmp	ebx, -1
	je	SHORT $LN11@setupBuild
	cmp	esi, -1
	je	SHORT $LN11@setupBuild
; Line 186
	pop	esi
	pop	ebp
	pop	ebx
	mov	eax, edi
	pop	edi
; Line 187
	ret	0
$LN11@setupBuild:
; Line 182
	mov	eax, DWORD PTR _dsl$[esp+12]
	test	ebx, ebx
	cmovne	ebp, DWORD PTR _dpath$[esp+12]
	push	ebp
	push	OFFSET ??_C@_0BI@PLEFIACD@failed?5to?5open?5file?3?5?$CFs@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
; Line 162
	mov	ebp, DWORD PTR __imp__CloseHandle@4
; Line 182
	add	esp, 16					; 00000010H
; Line 162
	cmp	ebx, -1
	je	SHORT $LN7@setupBuild
; Line 163
	push	ebx
	call	ebp
$LN7@setupBuild:
; Line 164
	cmp	esi, -1
	je	SHORT $LN8@setupBuild
; Line 165
	push	esi
	call	ebp
$LN8@setupBuild:
; Line 168
	push	edi
	call	_free
	add	esp, 4
; Line 184
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi
; Line 187
	ret	0
_setupBuild ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cleanupBuild
_TEXT	SEGMENT
_bs$ = 8						; size = 4
_cleanupBuild PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 161
	push	esi
; Line 162
	mov	esi, DWORD PTR _bs$[esp]
	mov	eax, DWORD PTR [esi]
	cmp	eax, -1
	je	SHORT $LN2@cleanupBui
; Line 163
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
$LN2@cleanupBui:
; Line 164
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	je	SHORT $LN3@cleanupBui
; Line 165
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
$LN3@cleanupBui:
; Line 166
	cmp	DWORD PTR [esi+8], 0
	je	SHORT $LN4@cleanupBui
; Line 167
	push	DWORD PTR [esi+12]
	call	_free
	add	esp, 4
$LN4@cleanupBui:
; Line 168
	push	esi
	call	_free
	add	esp, 4
	pop	esi
; Line 169
	ret	0
_cleanupBuild ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _addContentFromCollection
_TEXT	SEGMENT
_index$1$ = -16						; size = 4
_count$1$ = -12						; size = 4
_block$1$ = -8						; size = 4
_cfg$1$ = -4						; size = 4
_dsl$ = 8						; size = 4
_lc$ = 12						; size = 4
_type$ = 16						; size = 4
_key$ = 20						; size = 4
_addContentFromCollection PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 122
	sub	esp, 16					; 00000010H
; Line 127
	mov	eax, DWORD PTR _lc$[esp+12]
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _cfg$1$[esp+16], eax
	test	eax, eax
	je	$LN3@addContent
; Line 128
	push	ebx
	push	esi
	xor	ebx, ebx
	push	ebx
	push	DWORD PTR _key$[esp+24]
	mov	DWORD PTR _index$1$[esp+32], ebx
	push	eax
	call	_getConfigStringArray
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	$LN73@addContent
	mov	ecx, DWORD PTR _type$[esp+20]
	shl	ecx, 4
	push	ebp
	mov	DWORD PTR _type$[esp+24], ecx
	push	edi
$LL4@addContent:
; Line 97
	mov	eax, DWORD PTR _dsl$[esp+28]
	mov	ebp, DWORD PTR [eax+16]
	add	ebp, ecx
; Line 98
	cmp	DWORD PTR [ebp+4], 0
	je	SHORT $LN69@addContent
	cmp	DWORD PTR [ebp], 0
	je	$LN11@addContent
$LN69@addContent:
; Line 100
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL70@addContent:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL70@addContent
	sub	ecx, edx
	cmp	ecx, 256				; 00000100H
	jae	$LN11@addContent
; Line 21
	mov	al, BYTE PTR [esi]
; Line 100
	mov	ecx, esi
; Line 21
	mov	edx, esi
	test	al, al
	je	SHORT $LN22@addContent
$LL23@addContent:
; Line 22
	cmp	al, 47					; 0000002fH
	je	SHORT $LN55@addContent
	cmp	al, 92					; 0000005cH
	jne	SHORT $LN21@addContent
$LN55@addContent:
; Line 23
	lea	edx, DWORD PTR [ecx+1]
$LN21@addContent:
; Line 21
	mov	al, BYTE PTR [ecx+1]
	inc	ecx
	test	al, al
	jne	SHORT $LL23@addContent
$LN22@addContent:
; Line 100
	mov	ecx, edx
	lea	edi, DWORD PTR [ecx+1]
$LL71@addContent:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL71@addContent
	sub	ecx, edi
	cmp	ecx, 24					; 00000018H
	ja	$LN11@addContent
; Line 102
	push	edx
	push	ebp
	call	_getContent
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN12@addContent
; Line 103
	mov	eax, DWORD PTR _lc$[esp+28]
; Line 104
	lea	edx, DWORD PTR [edi+4]
	mov	ecx, edx
	mov	DWORD PTR [edi], eax
	sub	ecx, esi
$LL16@addContent:
	mov	al, BYTE PTR [esi]
	lea	esi, DWORD PTR [esi+1]
	mov	BYTE PTR [ecx+esi-1], al
	test	al, al
	jne	SHORT $LL16@addContent
	push	edx
	call	_getFileName
	add	esp, 4
	mov	DWORD PTR [edi+260], eax
; Line 105
	jmp	$LN2@addContent
$LN12@addContent:
; Line 107
	mov	ebx, DWORD PTR [ebp+4]
	mov	eax, DWORD PTR [ebp+8]
	cmp	ebx, eax
	jne	$LN67@addContent
; Line 108
	test	eax, eax
	je	SHORT $LN17@addContent
	add	eax, eax
	jmp	SHORT $LN76@addContent
$LN17@addContent:
	mov	eax, 4
$LN76@addContent:
; Line 109
	mov	DWORD PTR _count$1$[esp+32], eax
	imul	eax, eax, 264
	push	eax
	push	DWORD PTR [ebp]
	call	_realloc
	add	esp, 8
	mov	DWORD PTR _block$1$[esp+32], eax
; Line 110
	test	eax, eax
	je	$LN72@addContent
; Line 112
	mov	ebx, DWORD PTR [ebp+4]
; Line 86
	test	ebx, ebx
	je	SHORT $LN29@addContent
; Line 112
	lea	edi, DWORD PTR [eax+4]
	npad	1
$LL30@addContent:
; Line 21
	mov	al, BYTE PTR [edi]
; Line 87
	mov	ecx, edi
; Line 21
	mov	edx, edi
	test	al, al
	je	SHORT $LN34@addContent
	npad	6
$LL35@addContent:
; Line 22
	cmp	al, 47					; 0000002fH
	je	SHORT $LN58@addContent
	cmp	al, 92					; 0000005cH
	jne	SHORT $LN33@addContent
$LN58@addContent:
; Line 23
	lea	edx, DWORD PTR [ecx+1]
$LN33@addContent:
; Line 21
	mov	al, BYTE PTR [ecx+1]
	inc	ecx
	test	al, al
	jne	SHORT $LL35@addContent
$LN34@addContent:
; Line 87
	mov	DWORD PTR [edi+256], edx
; Line 88
	add	edi, 264				; 00000108H
	sub	ebx, 1
	jne	SHORT $LL30@addContent
; Line 22
	mov	ebx, DWORD PTR [ebp+4]
$LN29@addContent:
; Line 113
	mov	eax, DWORD PTR _count$1$[esp+32]
	mov	DWORD PTR [ebp+8], eax
; Line 114
	mov	eax, DWORD PTR _block$1$[esp+32]
	mov	DWORD PTR [ebp], eax
$LN67@addContent:
; Line 117
	mov	eax, DWORD PTR _lc$[esp+28]
	imul	edi, ebx, 264
	add	edi, DWORD PTR [ebp]
; Line 118
	lea	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [edi], eax
	mov	ecx, edx
	sub	ecx, esi
	npad	5
$LL19@addContent:
	mov	al, BYTE PTR [esi]
	lea	esi, DWORD PTR [esi+1]
	mov	BYTE PTR [ecx+esi-1], al
	test	al, al
	jne	SHORT $LL19@addContent
	push	edx
	call	_getFileName
; Line 120
	mov	ebx, DWORD PTR _index$1$[esp+36]
	add	esp, 4
	mov	DWORD PTR [edi+260], eax
	inc	DWORD PTR [ebp+4]
	jmp	SHORT $LN2@addContent
$LN72@addContent:
; Line 110
	mov	ebx, DWORD PTR _index$1$[esp+32]
$LN11@addContent:
; Line 130
	mov	eax, DWORD PTR _lc$[esp+28]
	push	esi
	push	DWORD PTR _key$[esp+32]
	add	eax, 292				; 00000124H
	push	eax
	mov	eax, DWORD PTR _dsl$[esp+40]
	push	OFFSET ??_C@_0CI@CDJOBGGC@?$FL?$CFs?$FN?5failed?5to?5register?5content@
	push	1
	push	DWORD PTR [eax+24]
	call	_printConsoleFormatted
	add	esp, 24					; 00000018H
$LN2@addContent:
; Line 128
	inc	ebx
	push	ebx
	push	DWORD PTR _key$[esp+32]
	mov	DWORD PTR _index$1$[esp+40], ebx
	push	DWORD PTR _cfg$1$[esp+40]
	call	_getConfigStringArray
	mov	ecx, DWORD PTR _type$[esp+40]
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	$LL4@addContent
	pop	edi
	pop	ebp
$LN73@addContent:
	pop	esi
	pop	ebx
$LN3@addContent:
; Line 131
	add	esp, 16					; 00000010H
	ret	0
_addContentFromCollection ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fixContentNames
_TEXT	SEGMENT
_f$ = 8							; size = 4
_count$ = 12						; size = 4
_fixContentNames PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 85
	push	edi
; Line 86
	mov	edi, DWORD PTR _count$[esp]
	test	edi, edi
	je	SHORT $LN3@fixContent
	mov	edx, DWORD PTR _f$[esp]
	add	edx, 4
	push	esi
$LL4@fixContent:
; Line 21
	mov	al, BYTE PTR [edx]
; Line 87
	mov	ecx, edx
; Line 21
	mov	esi, edx
	test	al, al
	je	SHORT $LN8@fixContent
	npad	5
$LL9@fixContent:
; Line 22
	cmp	al, 47					; 0000002fH
	je	SHORT $LN19@fixContent
	cmp	al, 92					; 0000005cH
	jne	SHORT $LN7@fixContent
$LN19@fixContent:
; Line 23
	lea	esi, DWORD PTR [ecx+1]
$LN7@fixContent:
; Line 21
	mov	al, BYTE PTR [ecx+1]
	inc	ecx
	test	al, al
	jne	SHORT $LL9@fixContent
$LN8@fixContent:
; Line 87
	mov	DWORD PTR [edx+256], esi
; Line 88
	add	edx, 264				; 00000108H
	sub	edi, 1
	jne	SHORT $LL4@fixContent
	pop	esi
$LN3@fixContent:
	pop	edi
; Line 90
	ret	0
_fixContentNames ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _getContent
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_name$ = 12						; size = 4
_getContent PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 76
	mov	eax, DWORD PTR _sc$[esp-4]
	push	ebx
	push	esi
	push	edi
; Line 77
	mov	esi, DWORD PTR [eax+4]
; Line 78
	test	esi, esi
	je	SHORT $LN3@getContent
; Line 76
	mov	ebx, DWORD PTR _name$[esp+8]
	imul	edi, esi, 264
	add	edi, DWORD PTR [eax]
	npad	6
$LL2@getContent:
; Line 79
	sub	edi, 264				; 00000108H
	dec	esi
	push	24					; 00000018H
	push	ebx
	push	DWORD PTR [edi+260]
	call	_dslstrncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN7@getContent
; Line 78
	test	esi, esi
	jne	SHORT $LL2@getContent
$LN3@getContent:
	pop	edi
; Line 82
	pop	esi
	xor	eax, eax
	pop	ebx
	ret	0
$LN7@getContent:
; Line 80
	mov	eax, edi
	pop	edi
; Line 82
	pop	esi
	pop	ebx
	ret	0
_getContent ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _getFileName
_TEXT	SEGMENT
_path$ = 8						; size = 4
_getFileName PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 21
	mov	ecx, DWORD PTR _path$[esp-4]
	mov	edx, ecx
	mov	al, BYTE PTR [ecx]
	test	al, al
	je	SHORT $LN13@getFileNam
	npad	4
$LL4@getFileNam:
; Line 22
	cmp	al, 47					; 0000002fH
	je	SHORT $LN11@getFileNam
	cmp	al, 92					; 0000005cH
	jne	SHORT $LN2@getFileNam
$LN11@getFileNam:
; Line 23
	lea	edx, DWORD PTR [ecx+1]
$LN2@getFileNam:
; Line 21
	mov	al, BYTE PTR [ecx+1]
	inc	ecx
	test	al, al
	jne	SHORT $LL4@getFileNam
$LN13@getFileNam:
; Line 25
	mov	eax, edx
	ret	0
_getFileName ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _makeArchiveWithContent
_TEXT	SEGMENT
_files$1$ = -128					; size = 4
_wrote$1 = -128						; size = 4
_read$2 = -128						; size = 4
_dsl$GSCopy$1$ = -124					; size = 4
_count$1$ = -120					; size = 4
_source$1$ = -116					; size = 4
_index$1$ = -112					; size = 4
_sc$1$ = -108						; size = 4
_timer$1$ = -104					; size = 4
_spath$ = -100						; size = 32
_dpath$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_dsl$ = 8						; size = 4
_type$ = 12						; size = 4
_source$ = 16						; size = 4
_destination$ = 20					; size = 4
_makeArchiveWithContent PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 395
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+128], eax
	mov	eax, DWORD PTR _type$[esp+124]
	push	ebx
	mov	ebx, DWORD PTR _dsl$[esp+128]
; Line 402
	shl	eax, 4
	push	ebp
	push	esi
	add	eax, DWORD PTR [ebx+16]
	push	edi
	mov	DWORD PTR _dsl$GSCopy$1$[esp+144], ebx
	mov	DWORD PTR _sc$1$[esp+144], eax
; Line 403
	cmp	DWORD PTR [eax+4], 0
	je	$LN75@makeArchiv
; Line 405
	call	DWORD PTR __imp__GetTickCount@0
; Line 406
	mov	edx, DWORD PTR _source$[esp+140]
	lea	esi, DWORD PTR _spath$[esp+144]
	mov	DWORD PTR _timer$1$[esp+144], eax
	sub	esi, edx
$LL10@makeArchiv:
	mov	cl, BYTE PTR [edx]
	lea	edx, DWORD PTR [edx+1]
	mov	BYTE PTR [esi+edx-1], cl
	test	cl, cl
	jne	SHORT $LL10@makeArchiv
; Line 407
	mov	ecx, DWORD PTR _destination$[esp+140]
	lea	edx, DWORD PTR _dpath$[esp+144]
	sub	edx, ecx
	npad	4
$LL11@makeArchiv:
	mov	al, BYTE PTR [ecx]
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR [edx+ecx-1], al
	test	al, al
	jne	SHORT $LL11@makeArchiv
; Line 408
	lea	ecx, DWORD PTR _spath$[esp+144]
	lea	edx, DWORD PTR [ecx+1]
$LL80@makeArchiv:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL80@makeArchiv
	sub	ecx, edx
; Line 173
	push	24					; 00000018H
; Line 408
	mov	DWORD PTR _spath$[esp+ecx+145], 7498084	; 00726964H
; Line 173
	call	_malloc
	mov	ebp, eax
	add	esp, 4
; Line 174
	test	ebp, ebp
	jne	SHORT $LN13@makeArchiv
; Line 175
	push	OFFSET ??_C@_0BA@FPIGCIAC@content?5builder@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
	push	1
	push	DWORD PTR [ebx+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
; Line 176
	jmp	$LN75@makeArchiv
$LN13@makeArchiv:
; Line 179
	mov	edi, DWORD PTR __imp__CreateFileA@28
	lea	eax, DWORD PTR _spath$[esp+144]
	push	0
	push	128					; 00000080H
	push	3
	push	0
	push	0
	push	-2147483648				; 80000000H
	push	eax
	mov	DWORD PTR [ebp+8], 0
	call	edi
; Line 180
	push	0
	push	128					; 00000080H
	push	2
	push	0
	push	0
	mov	esi, eax
	lea	eax, DWORD PTR _dpath$[esp+164]
	push	1073741824				; 40000000H
	push	eax
	mov	DWORD PTR [ebp], esi
	call	edi
	mov	edi, eax
	mov	DWORD PTR [ebp+4], edi
; Line 181
	cmp	esi, -1
	je	$LN15@makeArchiv
	cmp	edi, -1
	je	$LN15@makeArchiv
; Line 412
	mov	eax, DWORD PTR _sc$1$[esp+144]
; Line 194
	push	0
	push	esi
; Line 412
	mov	DWORD PTR [ebp+20], eax
; Line 194
	call	DWORD PTR __imp__GetFileSize@8
	mov	ebx, eax
; Line 195
	test	ebx, ebx
	je	$LN24@makeArchiv
	cmp	ebx, -1
	je	$LN24@makeArchiv
	test	bl, 31					; 0000001fH
	jne	$LN24@makeArchiv
; Line 199
	mov	eax, DWORD PTR [ebp+20]
	mov	eax, DWORD PTR [eax+4]
	shl	eax, 5
	add	eax, ebx
	push	eax
	call	_malloc
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR [ebp+12], ecx
; Line 200
	test	ecx, ecx
	jne	SHORT $LN25@makeArchiv
; Line 201
	push	OFFSET ??_C@_09GEAADJDD@dir?5files@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
; Line 202
	jmp	$LN85@makeArchiv
$LN25@makeArchiv:
; Line 204
	mov	eax, ebx
	shr	eax, 5
; Line 205
	push	0
	mov	DWORD PTR [ebp+8], eax
	lea	eax, DWORD PTR _read$2[esp+148]
	push	eax
	push	ebx
	push	ecx
	push	DWORD PTR [ebp]
	call	DWORD PTR __imp__ReadFile@20
	test	eax, eax
	je	$LN27@makeArchiv
	cmp	DWORD PTR _read$2[esp+144], ebx
	jne	$LN27@makeArchiv
; Line 227
	mov	eax, DWORD PTR [ebp+20]
	mov	ebx, DWORD PTR [ebp+12]
	mov	DWORD PTR _source$1$[esp+144], ebx
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR [ebp+8]
	shl	eax, 5
	push	eax
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _files$1$[esp+144], eax
; Line 228
	test	eax, eax
	jne	SHORT $LN33@makeArchiv
; Line 229
	push	OFFSET ??_C@_0L@GONMOMPE@dir?5sorter@
	push	OFFSET ??_C@_0CB@POMNIGMM@failed?5to?5allocate?5memory?5for?5?$CF@
; Line 230
	jmp	$LN85@makeArchiv
$LN33@makeArchiv:
; Line 232
	xor	edi, edi
	mov	DWORD PTR _index$1$[esp+144], 0
	mov	DWORD PTR _count$1$[esp+144], edi
	cmp	DWORD PTR [ebp+8], edi
	jbe	$LN31@makeArchiv
	npad	6
$LL32@makeArchiv:
; Line 233
	mov	eax, DWORD PTR [ebp+20]
; Line 77
	mov	esi, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
; Line 78
	test	esi, esi
	je	SHORT $LN76@makeArchiv
; Line 233
	imul	edi, esi, 264
	add	ebx, 8
	add	edi, ecx
$LL37@makeArchiv:
; Line 79
	sub	edi, 264				; 00000108H
	dec	esi
	push	24					; 00000018H
	push	ebx
	push	DWORD PTR [edi+260]
	call	_dslstrncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN36@makeArchiv
; Line 78
	test	esi, esi
	jne	SHORT $LL37@makeArchiv
; Line 79
	jmp	SHORT $LN86@makeArchiv
$LN36@makeArchiv:
; Line 233
	test	edi, edi
	jne	SHORT $LN84@makeArchiv
$LN86@makeArchiv:
; Line 234
	mov	edi, DWORD PTR _count$1$[esp+144]
	mov	ebx, DWORD PTR _source$1$[esp+144]
$LN76@makeArchiv:
	mov	esi, DWORD PTR _files$1$[esp+144]
	mov	ecx, edi
; Line 212
	test	edi, edi
	je	SHORT $LN45@makeArchiv
	mov	eax, DWORD PTR [ebx]
$LL42@makeArchiv:
	cmp	eax, DWORD PTR [esi]
	jbe	SHORT $LN57@makeArchiv
; Line 213
	add	esi, 32					; 00000020H
	sub	ecx, 1
	jne	SHORT $LL42@makeArchiv
; Line 214
	jmp	SHORT $LN45@makeArchiv
$LN57@makeArchiv:
	test	ecx, ecx
	je	SHORT $LN45@makeArchiv
	mov	edx, ecx
	shl	edx, 5
	add	edx, esi
	npad	6
$LL62@makeArchiv:
; Line 216
	movups	xmm0, XMMWORD PTR [edx-32]
	mov	eax, edx
	sub	edx, 32					; 00000020H
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	sub	ecx, 1
	jne	SHORT $LL62@makeArchiv
$LN45@makeArchiv:
; Line 218
	movups	xmm0, XMMWORD PTR [ebx]
; Line 234
	inc	edi
	mov	DWORD PTR _count$1$[esp+144], edi
; Line 218
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [ebx+16]
	movups	XMMWORD PTR [esi+16], xmm0
; Line 233
	jmp	SHORT $LN30@makeArchiv
$LN84@makeArchiv:
	mov	ebx, DWORD PTR _source$1$[esp+144]
	mov	edi, DWORD PTR _count$1$[esp+144]
$LN30@makeArchiv:
; Line 232
	mov	edx, DWORD PTR _index$1$[esp+144]
	add	ebx, 32					; 00000020H
	inc	edx
	mov	DWORD PTR _source$1$[esp+144], ebx
	mov	DWORD PTR _index$1$[esp+144], edx
	cmp	edx, DWORD PTR [ebp+8]
	jb	$LL32@makeArchiv
$LN31@makeArchiv:
; Line 235
	push	DWORD PTR [ebp+12]
	call	_free
; Line 236
	mov	eax, DWORD PTR _files$1$[esp+148]
; Line 417
	lea	ecx, DWORD PTR _spath$[esp+148]
; Line 235
	add	esp, 4
; Line 236
	mov	DWORD PTR [ebp+12], eax
; Line 237
	mov	DWORD PTR [ebp+8], edi
; Line 417
	lea	edx, DWORD PTR [ecx+1]
	npad	5
$LL81@makeArchiv:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL81@makeArchiv
; Line 418
	mov	edi, DWORD PTR _dsl$GSCopy$1$[esp+144]
	lea	eax, DWORD PTR _spath$[esp+144]
	push	eax
	sub	ecx, edx
	push	edi
	push	ebp
	mov	DWORD PTR _spath$[esp+ecx+153], 6778217	; 00676d69H
	call	_copyBaseImg
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN5@makeArchiv
	push	edi
	push	ebp
	call	_copyContent
	add	esp, 8
	test	eax, eax
	je	$LN5@makeArchiv
; Line 422
	lea	ecx, DWORD PTR _dpath$[esp+144]
	lea	edx, DWORD PTR [ecx+1]
$LL82@makeArchiv:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL82@makeArchiv
	sub	ecx, edx
	mov	DWORD PTR _dpath$[esp+ecx+141], 7498084	; 00726964H
; Line 380
	push	DWORD PTR [ebp+4]
	call	DWORD PTR __imp__CloseHandle@4
; Line 381
	push	0
	push	128					; 00000080H
	push	2
	push	0
	push	0
	push	1073741824				; 40000000H
	lea	eax, DWORD PTR _dpath$[esp+168]
	push	eax
	call	DWORD PTR __imp__CreateFileA@28
	mov	DWORD PTR [ebp+4], eax
; Line 382
	cmp	eax, -1
	jne	SHORT $LN48@makeArchiv
; Line 383
	mov	eax, OFFSET ??_C@_0BI@PLEFIACD@failed?5to?5open?5file?3?5?$CFs@
; Line 384
	jmp	$LN79@makeArchiv
$LN48@makeArchiv:
; Line 386
	mov	esi, DWORD PTR [ebp+8]
; Line 387
	lea	ecx, DWORD PTR _wrote$1[esp+144]
	push	0
	push	ecx
	shl	esi, 5
	push	esi
	push	DWORD PTR [ebp+12]
	push	eax
	call	DWORD PTR __imp__WriteFile@20
	test	eax, eax
	je	SHORT $LN50@makeArchiv
	cmp	DWORD PTR _wrote$1[esp+144], esi
	jne	SHORT $LN50@makeArchiv
; Line 428
	mov	eax, DWORD PTR _sc$1$[esp+144]
	push	ebp
	mov	DWORD PTR [eax+12], 1
	call	_cleanupBuild
; Line 429
	lea	esi, DWORD PTR _dpath$[esp+148]
	add	esp, 4
	lea	ecx, DWORD PTR [esi+1]
	npad	5
$LL83@makeArchiv:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL83@makeArchiv
	sub	esi, ecx
	call	DWORD PTR __imp__GetTickCount@0
	sub	eax, DWORD PTR _timer$1$[esp+144]
	push	eax
	lea	eax, DWORD PTR _dpath$[esp+148]
	push	eax
	lea	eax, DWORD PTR [esi-4]
	push	eax
	push	OFFSET ??_C@_0BJ@MMHCDFAD@built?5?$CF?4?$CKs?4img?5in?5?$CFlu?5ms@
	push	0
	push	DWORD PTR [edi+24]
	call	_printConsoleFormatted
	add	esp, 24					; 00000018H
; Line 430
	mov	eax, 1
	jmp	$LN1@makeArchiv
$LN50@makeArchiv:
; Line 388
	mov	eax, OFFSET ??_C@_0BJ@OIDOENJ@failed?5to?5write?5file?3?5?$CFs@
$LN79@makeArchiv:
; Line 424
	lea	ecx, DWORD PTR _dpath$[esp+144]
	push	ecx
	push	eax
	mov	eax, DWORD PTR [edi+24]
	push	1
	push	eax
	call	_printConsoleFormatted
	push	ebp
	call	_cleanupBuild
	add	esp, 20					; 00000014H
; Line 425
	jmp	SHORT $LN75@makeArchiv
$LN27@makeArchiv:
; Line 206
	lea	eax, DWORD PTR _spath$[esp+144]
	push	eax
	push	OFFSET ??_C@_0BI@GCIMLKCG@failed?5to?5read?5file?3?5?$CFs@
; Line 207
	jmp	SHORT $LN85@makeArchiv
$LN24@makeArchiv:
; Line 196
	lea	eax, DWORD PTR _spath$[esp+144]
	push	eax
	push	OFFSET ??_C@_0BG@KJLCGAPN@invalid?5file?5size?3?5?$CFs@
$LN85@makeArchiv:
; Line 414
	mov	edi, DWORD PTR _dsl$GSCopy$1$[esp+152]
	push	1
	push	DWORD PTR [edi+24]
	call	_printConsoleFormatted
	add	esp, 16					; 00000010H
$LN5@makeArchiv:
	push	ebp
	call	_cleanupBuild
; Line 415
	jmp	SHORT $LN87@makeArchiv
$LN15@makeArchiv:
; Line 182
	lea	ecx, DWORD PTR _spath$[esp+144]
	test	esi, esi
	lea	eax, DWORD PTR _dpath$[esp+144]
	cmove	eax, ecx
	push	eax
	push	OFFSET ??_C@_0BI@PLEFIACD@failed?5to?5open?5file?3?5?$CFs@
	push	1
	push	DWORD PTR [ebx+24]
	call	_printConsoleFormatted
; Line 162
	mov	ebx, DWORD PTR __imp__CloseHandle@4
; Line 182
	add	esp, 16					; 00000010H
; Line 162
	cmp	esi, -1
	je	SHORT $LN18@makeArchiv
; Line 163
	push	esi
	call	ebx
$LN18@makeArchiv:
; Line 164
	cmp	edi, -1
	je	SHORT $LN19@makeArchiv
; Line 165
	push	edi
	call	ebx
$LN19@makeArchiv:
; Line 168
	push	ebp
	call	_free
$LN87@makeArchiv:
; Line 431
	add	esp, 4
$LN75@makeArchiv:
	xor	eax, eax
$LN1@makeArchiv:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+144]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 128				; 00000080H
	ret	0
_makeArchiveWithContent ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _addContentUsingLoader
_TEXT	SEGMENT
_cfg$1$ = 8						; size = 4
_cfg$1$ = 8						; size = 4
_dsl$ = 8						; size = 4
_addContentUsingLoader PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 132
	push	esi
	push	edi
; Line 135
	mov	edi, DWORD PTR _dsl$[esp+4]
	mov	esi, DWORD PTR [edi+36]
	mov	esi, DWORD PTR [esi]
	test	esi, esi
	je	$LN3@addContent
	push	ebx
	push	ebp
$LL4@addContent:
; Line 127
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR _cfg$1$[esp+12], eax
	test	eax, eax
	je	SHORT $LN8@addContent
; Line 128
	xor	ebp, ebp
	push	ebp
	push	OFFSET ??_C@_08OAGOAADG@act_file@
	push	eax
	call	_getConfigStringArray
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	je	SHORT $LN8@addContent
$LL9@addContent:
; Line 129
	push	ebx
	push	0
	push	esi
	push	DWORD PTR [edi+16]
	call	_addContentFile
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN7@addContent
; Line 130
	push	ebx
	push	OFFSET ??_C@_08OAGOAADG@act_file@
	lea	eax, DWORD PTR [esi+292]
	push	eax
	push	OFFSET ??_C@_0CI@CDJOBGGC@?$FL?$CFs?$FN?5failed?5to?5register?5content@
	push	1
	push	DWORD PTR [edi+24]
	call	_printConsoleFormatted
	add	esp, 24					; 00000018H
$LN7@addContent:
; Line 128
	inc	ebp
	push	ebp
	push	OFFSET ??_C@_08OAGOAADG@act_file@
	push	DWORD PTR _cfg$1$[esp+20]
	call	_getConfigStringArray
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	SHORT $LL9@addContent
$LN8@addContent:
; Line 127
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR _cfg$1$[esp+12], eax
	test	eax, eax
	je	SHORT $LN15@addContent
; Line 128
	xor	ebp, ebp
	push	ebp
	push	OFFSET ??_C@_09JNMINGFM@cuts_file@
	push	eax
	call	_getConfigStringArray
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	je	SHORT $LN15@addContent
$LL16@addContent:
; Line 129
	push	ebx
	push	1
	push	esi
	push	DWORD PTR [edi+16]
	call	_addContentFile
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN14@addContent
; Line 130
	push	ebx
	push	OFFSET ??_C@_09JNMINGFM@cuts_file@
	lea	eax, DWORD PTR [esi+292]
	push	eax
	push	OFFSET ??_C@_0CI@CDJOBGGC@?$FL?$CFs?$FN?5failed?5to?5register?5content@
	push	1
	push	DWORD PTR [edi+24]
	call	_printConsoleFormatted
	add	esp, 24					; 00000018H
$LN14@addContent:
; Line 128
	inc	ebp
	push	ebp
	push	OFFSET ??_C@_09JNMINGFM@cuts_file@
	push	DWORD PTR _cfg$1$[esp+20]
	call	_getConfigStringArray
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	SHORT $LL16@addContent
$LN15@addContent:
; Line 138
	push	OFFSET ??_C@_0N@HFCIKJOA@trigger_file@
	push	2
	push	esi
	push	edi
	call	_addContentFromCollection
; Line 139
	push	OFFSET ??_C@_08JANKDMEN@ide_file@
	push	3
	push	esi
	push	edi
	call	_addContentFromCollection
; Line 140
	push	OFFSET ??_C@_0N@NCDPGIKO@scripts_file@
	push	4
	push	esi
	push	edi
	call	_addContentFromCollection
; Line 141
	push	OFFSET ??_C@_0L@LBKGENCP@world_file@
	push	5
	push	esi
	push	edi
	call	_addContentFromCollection
	mov	esi, DWORD PTR [esi]
	add	esp, 64					; 00000040H
	test	esi, esi
	jne	$LL4@addContent
	pop	ebp
	pop	ebx
$LN3@addContent:
	pop	edi
; Line 143
	pop	esi
	ret	0
_addContentUsingLoader ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _addContentFile
_TEXT	SEGMENT
_block$1$ = 8						; size = 4
_sc$ = 8						; size = 4
_lc$ = 12						; size = 4
_count$1$ = 16						; size = 4
_type$ = 16						; size = 4
_path$ = 20						; size = 4
_addContentFile PROC					; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 91
	push	ebx
	push	ebp
; Line 97
	mov	ebp, DWORD PTR _type$[esp+4]
	shl	ebp, 4
	add	ebp, DWORD PTR _sc$[esp+4]
	push	esi
	push	edi
; Line 98
	cmp	DWORD PTR [ebp+4], 0
	je	SHORT $LN56@addContent
	cmp	DWORD PTR [ebp], 0
	je	$LN4@addContent
$LN56@addContent:
; Line 100
	mov	esi, DWORD PTR _path$[esp+12]
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL58@addContent:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL58@addContent
	sub	ecx, edx
	cmp	ecx, 256				; 00000100H
	jae	$LN4@addContent
; Line 21
	mov	al, BYTE PTR [esi]
; Line 100
	mov	ecx, esi
; Line 21
	mov	edx, esi
	test	al, al
	je	SHORT $LN15@addContent
$LL16@addContent:
; Line 22
	cmp	al, 47					; 0000002fH
	je	SHORT $LN45@addContent
	cmp	al, 92					; 0000005cH
	jne	SHORT $LN14@addContent
$LN45@addContent:
; Line 23
	lea	edx, DWORD PTR [ecx+1]
$LN14@addContent:
; Line 21
	mov	al, BYTE PTR [ecx+1]
	inc	ecx
	test	al, al
	jne	SHORT $LL16@addContent
$LN15@addContent:
; Line 100
	mov	ecx, edx
	lea	edi, DWORD PTR [ecx+1]
	npad	1
$LL59@addContent:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL59@addContent
	sub	ecx, edi
	cmp	ecx, 24					; 00000018H
	ja	$LN4@addContent
; Line 102
	push	edx
	push	ebp
	call	_getContent
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@addContent
; Line 103
	mov	ecx, DWORD PTR _lc$[esp+12]
; Line 104
	lea	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [edi], ecx
	mov	ecx, edx
	sub	ecx, esi
	npad	1
$LL9@addContent:
	mov	al, BYTE PTR [esi]
	lea	esi, DWORD PTR [esi+1]
	mov	BYTE PTR [ecx+esi-1], al
	test	al, al
	jne	SHORT $LL9@addContent
	push	edx
	call	_getFileName
	add	esp, 4
	mov	DWORD PTR [edi+260], eax
; Line 105
	mov	eax, 1
	pop	edi
; Line 121
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
$LN5@addContent:
; Line 107
	mov	ebx, DWORD PTR [ebp+4]
	mov	eax, DWORD PTR [ebp+8]
	cmp	ebx, eax
	jne	$LN57@addContent
; Line 108
	test	eax, eax
	je	SHORT $LN10@addContent
	add	eax, eax
	jmp	SHORT $LN60@addContent
$LN10@addContent:
	mov	eax, 4
$LN60@addContent:
; Line 109
	mov	DWORD PTR _count$1$[esp+12], eax
	imul	eax, eax, 264
	push	eax
	push	DWORD PTR [ebp]
	call	_realloc
	add	esp, 8
	mov	DWORD PTR _block$1$[esp+12], eax
; Line 110
	test	eax, eax
	je	$LN4@addContent
; Line 112
	mov	ebx, DWORD PTR [ebp+4]
; Line 86
	test	ebx, ebx
	je	SHORT $LN22@addContent
; Line 112
	lea	edi, DWORD PTR [eax+4]
	npad	3
$LL23@addContent:
; Line 21
	mov	al, BYTE PTR [edi]
; Line 87
	mov	ecx, edi
; Line 21
	mov	edx, edi
	test	al, al
	je	SHORT $LN27@addContent
	npad	6
$LL28@addContent:
; Line 22
	cmp	al, 47					; 0000002fH
	je	SHORT $LN48@addContent
	cmp	al, 92					; 0000005cH
	jne	SHORT $LN26@addContent
$LN48@addContent:
; Line 23
	lea	edx, DWORD PTR [ecx+1]
$LN26@addContent:
; Line 21
	mov	al, BYTE PTR [ecx+1]
	inc	ecx
	test	al, al
	jne	SHORT $LL28@addContent
$LN27@addContent:
; Line 87
	mov	DWORD PTR [edi+256], edx
; Line 88
	add	edi, 264				; 00000108H
	sub	ebx, 1
	jne	SHORT $LL23@addContent
; Line 22
	mov	ebx, DWORD PTR [ebp+4]
$LN22@addContent:
; Line 113
	mov	eax, DWORD PTR _count$1$[esp+12]
	mov	DWORD PTR [ebp+8], eax
; Line 114
	mov	eax, DWORD PTR _block$1$[esp+12]
	mov	DWORD PTR [ebp], eax
$LN57@addContent:
; Line 117
	mov	eax, DWORD PTR _lc$[esp+12]
	imul	edi, ebx, 264
	add	edi, DWORD PTR [ebp]
; Line 118
	lea	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [edi], eax
	mov	ecx, edx
	sub	ecx, esi
	npad	5
$LL12@addContent:
	mov	al, BYTE PTR [esi]
	lea	esi, DWORD PTR [esi+1]
	mov	BYTE PTR [ecx+esi-1], al
	test	al, al
	jne	SHORT $LL12@addContent
	push	edx
	call	_getFileName
	add	esp, 4
	mov	DWORD PTR [edi+260], eax
; Line 119
	inc	DWORD PTR [ebp+4]
; Line 120
	mov	eax, 1
	pop	edi
; Line 121
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
$LN4@addContent:
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
	ret	0
_addContentFile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _wasContentReplaced
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_type$ = 12						; size = 4
_wasContentReplaced PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 68
	mov	ecx, DWORD PTR _type$[esp-4]
	mov	eax, DWORD PTR _sc$[esp-4]
	add	ecx, ecx
	mov	eax, DWORD PTR [eax+ecx*8+12]
; Line 69
	ret	0
_wasContentReplaced ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _freeContentListings
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_freeContentListings PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 57
	push	esi
; Line 60
	mov	esi, DWORD PTR _sc$[esp]
	push	edi
	mov	edi, 6
	npad	5
$LL4@freeConten:
; Line 61
	push	DWORD PTR [esi]
	call	_free
	add	esp, 4
; Line 62
	mov	DWORD PTR [esi], 0
; Line 63
	mov	DWORD PTR [esi+4], 1
; Line 64
	lea	esi, DWORD PTR [esi+16]
	sub	edi, 1
	jne	SHORT $LL4@freeConten
; Line 66
	pop	edi
	pop	esi
	ret	0
_freeContentListings ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _destroyContentManager
_TEXT	SEGMENT
_sc$ = 8						; size = 4
_destroyContentManager PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 49
	push	esi
; Line 52
	mov	esi, DWORD PTR _sc$[esp]
	push	edi
	mov	edi, 6
	npad	5
$LL4@destroyCon:
; Line 53
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@destroyCon
; Line 54
	push	eax
	call	_free
	add	esp, 4
$LN2@destroyCon:
; Line 52
	add	esi, 16					; 00000010H
	sub	edi, 1
	jne	SHORT $LL4@destroyCon
; Line 55
	pop	edi
	pop	esi
	jmp	_free
_destroyContentManager ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _createContentManager
_TEXT	SEGMENT
_dsl$ = 8						; size = 4
_createContentManager PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\content.c
; Line 44
	push	16					; 00000010H
	push	6
	call	_calloc
	add	esp, 8
; Line 48
	ret	0
_createContentManager ENDP
_TEXT	ENDS
END
