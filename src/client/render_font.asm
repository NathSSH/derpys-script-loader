; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28107.0 

	TITLE	C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_c_l
PUBLIC	_swprintf
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??0IDWritePixelSnapping@@QAE@XZ			; IDWritePixelSnapping::IDWritePixelSnapping
PUBLIC	??0IDWriteTextRenderer@@QAE@XZ			; IDWriteTextRenderer::IDWriteTextRenderer
PUBLIC	?GetCurrentTransform@font_renderer@@UAGJPAXPAUDWRITE_MATRIX@@@Z ; font_renderer::GetCurrentTransform
PUBLIC	?GetPixelsPerDip@font_renderer@@UAGJPAXPAM@Z	; font_renderer::GetPixelsPerDip
PUBLIC	?IsPixelSnappingDisabled@font_renderer@@UAGJPAXPAH@Z ; font_renderer::IsPixelSnappingDisabled
PUBLIC	?DrawGlyphRun@font_renderer@@UAGJPAXMMW4DWRITE_MEASURING_MODE@@PBUDWRITE_GLYPH_RUN@@PBUDWRITE_GLYPH_RUN_DESCRIPTION@@PAUIUnknown@@@Z ; font_renderer::DrawGlyphRun
PUBLIC	?DrawInlineObject@font_renderer@@UAGJPAXMMPAUIDWriteInlineObject@@HHPAUIUnknown@@@Z ; font_renderer::DrawInlineObject
PUBLIC	?DrawStrikethrough@font_renderer@@UAGJPAXMMPBUDWRITE_STRIKETHROUGH@@PAUIUnknown@@@Z ; font_renderer::DrawStrikethrough
PUBLIC	?DrawUnderline@font_renderer@@UAGJPAXMMPBUDWRITE_UNDERLINE@@PAUIUnknown@@@Z ; font_renderer::DrawUnderline
PUBLIC	?QueryInterface@font_renderer@@UAGJABU_GUID@@PAPAX@Z ; font_renderer::QueryInterface
PUBLIC	?AddRef@font_renderer@@UAGKXZ			; font_renderer::AddRef
PUBLIC	?Release@font_renderer@@UAGKXZ			; font_renderer::Release
PUBLIC	??0font_renderer@@QAE@XZ			; font_renderer::font_renderer
PUBLIC	_startFontRendererCycle
PUBLIC	_finishFontRendererCycle
PUBLIC	_drawFontRendererTexture
PUBLIC	_createFontRendererFont
PUBLIC	_destroyFontRendererFont
PUBLIC	_createFontRenderer
PUBLIC	_destroyFontRenderer
PUBLIC	_getFontRendererCacheCount
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7font_renderer@@6B@				; font_renderer::`vftable'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1M@BMHNFIME@?$AAe?$AAn?$AA?9?$AAU?$AAS@	; `string'
PUBLIC	__GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIDWriteTextRenderer@@@8			; IDWriteTextRenderer `RTTI Type Descriptor'
PUBLIC	??_R3IDWriteTextRenderer@@8			; IDWriteTextRenderer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDWriteTextRenderer@@8			; IDWriteTextRenderer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDWriteTextRenderer@@8		; IDWriteTextRenderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IDWritePixelSnapping@@8		; IDWritePixelSnapping::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIDWritePixelSnapping@@@8		; IDWritePixelSnapping `RTTI Type Descriptor'
PUBLIC	??_R3IDWritePixelSnapping@@8			; IDWritePixelSnapping::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDWritePixelSnapping@@8			; IDWritePixelSnapping::`RTTI Base Class Array'
PUBLIC	??_R4font_renderer@@6B@				; font_renderer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVfont_renderer@@@8			; font_renderer `RTTI Type Descriptor'
PUBLIC	??_R3font_renderer@@8				; font_renderer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2font_renderer@@8				; font_renderer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@font_renderer@@8			; font_renderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@3faaaaab
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___stdio_common_vswprintf:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	_strncmp:PROC
EXTRN	__imp__GetCurrentObject@8:PROC
EXTRN	__imp__GetObjectA@12:PROC
EXTRN	__imp__EnumDisplayMonitors@16:PROC
EXTRN	__imp__DWriteCreateFactory@12:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@3faaaaab
CONST	SEGMENT
__real@3faaaaab DD 03faaaaabr			; 1.33333
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@font_renderer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@font_renderer@@8 DD FLAT:??_R0?AVfont_renderer@@@8 ; font_renderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3font_renderer@@8
rdata$r	ENDS
;	COMDAT ??_R2font_renderer@@8
rdata$r	SEGMENT
??_R2font_renderer@@8 DD FLAT:??_R1A@?0A@EA@font_renderer@@8 ; font_renderer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IDWriteTextRenderer@@8
	DD	FLAT:??_R1A@?0A@EA@IDWritePixelSnapping@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3font_renderer@@8
rdata$r	SEGMENT
??_R3font_renderer@@8 DD 00H				; font_renderer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2font_renderer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVfont_renderer@@@8
data$r	SEGMENT
??_R0?AVfont_renderer@@@8 DD FLAT:??_7type_info@@6B@	; font_renderer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVfont_renderer@@', 00H
data$r	ENDS
;	COMDAT ??_R4font_renderer@@6B@
rdata$r	SEGMENT
??_R4font_renderer@@6B@ DD 00H				; font_renderer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVfont_renderer@@@8
	DD	FLAT:??_R3font_renderer@@8
rdata$r	ENDS
;	COMDAT ??_R2IDWritePixelSnapping@@8
rdata$r	SEGMENT
??_R2IDWritePixelSnapping@@8 DD FLAT:??_R1A@?0A@EA@IDWritePixelSnapping@@8 ; IDWritePixelSnapping::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDWritePixelSnapping@@8
rdata$r	SEGMENT
??_R3IDWritePixelSnapping@@8 DD 00H			; IDWritePixelSnapping::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IDWritePixelSnapping@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDWritePixelSnapping@@@8
data$r	SEGMENT
??_R0?AUIDWritePixelSnapping@@@8 DD FLAT:??_7type_info@@6B@ ; IDWritePixelSnapping `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDWritePixelSnapping@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDWritePixelSnapping@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDWritePixelSnapping@@8 DD FLAT:??_R0?AUIDWritePixelSnapping@@@8 ; IDWritePixelSnapping::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDWritePixelSnapping@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDWriteTextRenderer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDWriteTextRenderer@@8 DD FLAT:??_R0?AUIDWriteTextRenderer@@@8 ; IDWriteTextRenderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDWriteTextRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R2IDWriteTextRenderer@@8
rdata$r	SEGMENT
??_R2IDWriteTextRenderer@@8 DD FLAT:??_R1A@?0A@EA@IDWriteTextRenderer@@8 ; IDWriteTextRenderer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IDWritePixelSnapping@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDWriteTextRenderer@@8
rdata$r	SEGMENT
??_R3IDWriteTextRenderer@@8 DD 00H			; IDWriteTextRenderer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IDWriteTextRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDWriteTextRenderer@@@8
data$r	SEGMENT
??_R0?AUIDWriteTextRenderer@@@8 DD FLAT:??_7type_info@@6B@ ; IDWriteTextRenderer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDWriteTextRenderer@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
data$r	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
data$r	ENDS
;	COMDAT __GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
CONST	SEGMENT
__GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48 DD 0b859ee5aH
	DW	0d838H
	DW	04b5bH
	DB	0a2H
	DB	0e8H
	DB	01aH
	DB	0dcH
	DB	07dH
	DB	093H
	DB	0dbH
	DB	048H
CONST	ENDS
;	COMDAT ??_C@_1M@BMHNFIME@?$AAe?$AAn?$AA?9?$AAU?$AAS@
CONST	SEGMENT
??_C@_1M@BMHNFIME@?$AAe?$AAn?$AA?9?$AAU?$AAS@ DB 'e', 00H, 'n', 00H, '-', 00H
	DB	'U', 00H, 'S', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7font_renderer@@6B@
CONST	SEGMENT
??_7font_renderer@@6B@ DD FLAT:??_R4font_renderer@@6B@	; font_renderer::`vftable'
	DD	FLAT:?QueryInterface@font_renderer@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@font_renderer@@UAGKXZ
	DD	FLAT:?Release@font_renderer@@UAGKXZ
	DD	FLAT:?IsPixelSnappingDisabled@font_renderer@@UAGJPAXPAH@Z
	DD	FLAT:?GetCurrentTransform@font_renderer@@UAGJPAXPAUDWRITE_MATRIX@@@Z
	DD	FLAT:?GetPixelsPerDip@font_renderer@@UAGJPAXPAM@Z
	DD	FLAT:?DrawGlyphRun@font_renderer@@UAGJPAXMMW4DWRITE_MEASURING_MODE@@PBUDWRITE_GLYPH_RUN@@PBUDWRITE_GLYPH_RUN_DESCRIPTION@@PAUIUnknown@@@Z
	DD	FLAT:?DrawUnderline@font_renderer@@UAGJPAXMMPBUDWRITE_UNDERLINE@@PAUIUnknown@@@Z
	DD	FLAT:?DrawStrikethrough@font_renderer@@UAGJPAXMMPBUDWRITE_STRIKETHROUGH@@PAUIUnknown@@@Z
	DD	FLAT:?DrawInlineObject@font_renderer@@UAGJPAXMMPAUIDWriteInlineObject@@HHPAUIUnknown@@@Z
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _getFontRendererCacheCount
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_created$ = 12						; size = 4
_getFontRendererCacheCount PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 675
	mov	edx, DWORD PTR _fr$[esp-4]
	mov	eax, DWORD PTR _created$[esp-4]
	mov	ecx, DWORD PTR [edx+52]
	mov	DWORD PTR [eax], ecx
; Line 361
	xor	eax, eax
; Line 362
	mov	ecx, DWORD PTR [edx+44]
	test	ecx, ecx
	je	SHORT $LN5@getFontRen
$LL6@getFontRen:
	mov	ecx, DWORD PTR [ecx+64]
; Line 363
	inc	eax
	test	ecx, ecx
	jne	SHORT $LL6@getFontRen
$LN5@getFontRen:
; Line 677
	ret	0
_getFontRendererCacheCount ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _destroyFontRenderer
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_destroyFontRenderer PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 656
	push	ebx
; Line 660
	mov	ebx, DWORD PTR _fr$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebx+44]
	test	edi, edi
	je	SHORT $LN3@destroyFon
	npad	2
$LL2@destroyFon:
; Line 661
	mov	esi, DWORD PTR [edi+64]
; Line 503
	dec	DWORD PTR [ebx+52]
; Line 504
	mov	eax, DWORD PTR [edi+60]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
; Line 505
	push	DWORD PTR [edi+8]
	call	_free
; Line 506
	push	edi
	call	_free
	add	esp, 8
; Line 660
	mov	edi, esi
	test	esi, esi
	jne	SHORT $LL2@destroyFon
$LN3@destroyFon:
; Line 664
	mov	esi, DWORD PTR [ebx+40]
	test	esi, esi
	je	SHORT $LN6@destroyFon
	npad	3
$LL5@destroyFon:
; Line 596
	mov	ecx, DWORD PTR [ebx+40]
; Line 665
	mov	edi, DWORD PTR [esi+24]
; Line 597
	cmp	ecx, esi
	jne	SHORT $LN16@destroyFon
; Line 598
	mov	DWORD PTR [ebx+40], edi
	jmp	SHORT $LN14@destroyFon
$LN16@destroyFon:
; Line 600
	mov	eax, DWORD PTR [ecx+24]
	test	eax, eax
	je	SHORT $LN14@destroyFon
$LL15@destroyFon:
; Line 601
	cmp	eax, esi
	je	SHORT $LN25@destroyFon
; Line 600
	mov	ecx, eax
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	jne	SHORT $LL15@destroyFon
; Line 601
	jmp	SHORT $LN14@destroyFon
$LN25@destroyFon:
; Line 602
	mov	DWORD PTR [ecx+24], edi
$LN14@destroyFon:
; Line 606
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN19@destroyFon
; Line 607
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN19@destroyFon:
; Line 608
	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	je	SHORT $LN20@destroyFon
; Line 609
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN20@destroyFon:
; Line 610
	push	DWORD PTR [esi+8]
	call	_free
; Line 611
	push	esi
	call	_free
	add	esp, 8
; Line 664
	mov	esi, edi
	test	edi, edi
	jne	SHORT $LL5@destroyFon
$LN6@destroyFon:
; Line 668
	mov	ecx, DWORD PTR [ebx+28]
	test	ecx, ecx
	je	SHORT $LN8@destroyFon
; Line 669
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN8@destroyFon:
; Line 670
	mov	eax, DWORD PTR [ebx+20]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
; Line 671
	mov	eax, DWORD PTR [ebx+16]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
; Line 672
	push	56					; 00000038H
	push	ebx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
; Line 673
	ret	0
_destroyFontRenderer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _createFontRenderer
_TEXT	SEGMENT
_factory$ = -12						; size = 4
_monitor$ = -8						; size = 4
_params$ = -4						; size = 4
_device$ = 8						; size = 4
_failcode$ = 12						; size = 4
_createFontRenderer PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 613
	sub	esp, 12					; 0000000cH
; Line 620
	lea	eax, DWORD PTR _factory$[esp+12]
	push	eax
	push	OFFSET __GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
	push	1
	call	DWORD PTR __imp__DWriteCreateFactory@12
	test	eax, eax
	je	SHORT $LN2@createFont
; Line 621
	mov	eax, DWORD PTR _failcode$[esp+8]
	test	eax, eax
	je	$LN3@createFont
; Line 622
	mov	DWORD PTR [eax], 18			; 00000012H
; Line 655
	xor	eax, eax
	add	esp, 12					; 0000000cH
	ret	0
$LN2@createFont:
; Line 626
	lea	eax, DWORD PTR _monitor$[esp+12]
	mov	DWORD PTR _monitor$[esp+12], 0
	push	eax
	push	OFFSET ?procMonitorEnum@@YGHPAUHMONITOR__@@PAUHDC__@@PAUtagRECT@@J@Z ; procMonitorEnum
	push	0
	push	0
	call	DWORD PTR __imp__EnumDisplayMonitors@16
; Line 627
	mov	edx, DWORD PTR _monitor$[esp+12]
	test	edx, edx
	je	$LN5@createFont
	mov	eax, DWORD PTR _factory$[esp+12]
	push	esi
	lea	esi, DWORD PTR _params$[esp+16]
	push	esi
	mov	ecx, DWORD PTR [eax]
	push	edx
	push	eax
	call	DWORD PTR [ecx+44]
	pop	esi
	test	eax, eax
	jne	$LN5@createFont
; Line 633
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	mov	edx, eax
	add	esp, 4
	test	edx, edx
	je	SHORT $LN14@createFont
; Line 643
	mov	ecx, DWORD PTR _device$[esp+8]
	mov	DWORD PTR [edx], OFFSET ??_7font_renderer@@6B@
	mov	DWORD PTR [edx+4], 0
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR [edx+12], ecx
; Line 644
	mov	ecx, DWORD PTR _factory$[esp+12]
	mov	DWORD PTR [edx+16], ecx
; Line 645
	mov	eax, DWORD PTR _params$[esp+12]
	mov	DWORD PTR [edx+20], eax
; Line 654
	mov	eax, edx
	mov	DWORD PTR [edx+24], 0
	mov	DWORD PTR [edx+28], 0
	mov	DWORD PTR [edx+32], 0
	mov	DWORD PTR [edx+36], 0
	mov	DWORD PTR [edx+40], 0
	mov	DWORD PTR [edx+44], 0
	mov	DWORD PTR [edx+48], 0
	mov	DWORD PTR [edx+52], 0
; Line 655
	add	esp, 12					; 0000000cH
	ret	0
$LN14@createFont:
; Line 635
	mov	eax, DWORD PTR _failcode$[esp+8]
	test	eax, eax
	je	SHORT $LN8@createFont
; Line 636
	mov	DWORD PTR [eax], 5
$LN8@createFont:
; Line 637
	mov	eax, DWORD PTR _params$[esp+12]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
; Line 655
	mov	eax, DWORD PTR _factory$[esp+12]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
	xor	eax, eax
	add	esp, 12					; 0000000cH
	ret	0
$LN5@createFont:
; Line 628
	mov	eax, DWORD PTR _failcode$[esp+8]
	test	eax, eax
	je	SHORT $LN6@createFont
; Line 629
	mov	DWORD PTR [eax], 19			; 00000013H
$LN6@createFont:
; Line 655
	mov	eax, DWORD PTR _factory$[esp+12]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
$LN3@createFont:
	xor	eax, eax
	add	esp, 12					; 0000000cH
	ret	0
_createFontRenderer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _destroyFontRendererFont
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_font$ = 12						; size = 4
_destroyFontRendererFont PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 596
	mov	edx, DWORD PTR _fr$[esp-4]
	push	esi
; Line 597
	mov	esi, DWORD PTR _font$[esp]
	mov	ecx, DWORD PTR [edx+40]
	cmp	ecx, esi
	jne	SHORT $LN5@destroyFon
; Line 598
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [edx+40], eax
	jmp	SHORT $LN3@destroyFon
$LN5@destroyFon:
; Line 600
	mov	eax, DWORD PTR [ecx+24]
	test	eax, eax
	je	SHORT $LN3@destroyFon
	npad	1
$LL4@destroyFon:
; Line 601
	cmp	eax, esi
	je	SHORT $LN12@destroyFon
; Line 600
	mov	ecx, eax
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	jne	SHORT $LL4@destroyFon
; Line 601
	jmp	SHORT $LN3@destroyFon
$LN12@destroyFon:
; Line 602
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [ecx+24], eax
$LN3@destroyFon:
; Line 606
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN8@destroyFon
; Line 607
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN8@destroyFon:
; Line 608
	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	je	SHORT $LN9@destroyFon
; Line 609
	mov	eax, DWORD PTR [ecx]
	push	ecx
	call	DWORD PTR [eax+8]
$LN9@destroyFon:
; Line 610
	push	DWORD PTR [esi+8]
	call	_free
; Line 611
	push	esi
	call	_free
	add	esp, 8
	pop	esi
; Line 612
	ret	0
_destroyFontRendererFont ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _createFontRendererFont
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_file$ = 12						; size = 4
_name$ = 16						; size = 4
_failcode$ = 20						; size = 4
_createFontRendererFont PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 169
	mov	ecx, DWORD PTR _name$[esp-4]
	lea	edx, DWORD PTR [ecx+1]
$LL9@createFont:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL9@createFont
	sub	ecx, edx
	push	ebx
	push	esi
	lea	ebx, DWORD PTR [ecx+1]
; Line 170
	lea	eax, DWORD PTR [ebx+ebx]
	push	eax
	call	_malloc
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN8@createFont
; Line 171
	push	DWORD PTR _name$[esp+4]
	push	OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
	push	ebx
	push	esi
	call	_swprintf
; Line 581
	push	28					; 0000001cH
	call	_malloc
	mov	edx, eax
	add	esp, 20					; 00000014H
; Line 582
	test	edx, edx
	jne	SHORT $LN3@createFont
; Line 583
	push	esi
	call	_free
	add	esp, 4
$LN8@createFont:
; Line 592
	mov	eax, DWORD PTR _failcode$[esp+4]
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], 5
	xor	eax, eax
	ret	0
$LN3@createFont:
; Line 589
	mov	ecx, DWORD PTR _fr$[esp+4]
	mov	DWORD PTR [edx+8], esi
	pop	esi
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR [ecx+40]
	mov	DWORD PTR [edx+24], eax
; Line 591
	mov	eax, edx
	mov	DWORD PTR [edx+4], 0
	mov	DWORD PTR [ecx+40], edx
; Line 592
	pop	ebx
	ret	0
_createFontRendererFont ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _drawFontRendererTexture
_TEXT	SEGMENT
_argument$12$ = -100					; size = 4
_argument$9$ = -96					; size = 4
_argument$10$ = -92					; size = 4
_count$1$ = -88						; size = 4
_argument$1$ = -88					; size = 4
_argument$4$ = -84					; size = 4
_argument$5$ = -80					; size = 4
_argument$7$ = -76					; size = 4
_argument$8$ = -72					; size = 4
_argument$ = -68					; size = 68
_fr$ = 8						; size = 4
_font$ = 12						; size = 4
_argument$6$ = 16					; size = 4
_args$ = 16						; size = 4
_width$ = 20						; size = 4
_height$ = 24						; size = 4
_failcode$ = 28						; size = 4
_drawFontRendererTexture PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 371
	mov	eax, DWORD PTR _font$[esp-4]
; Line 537
	sub	esp, 100				; 00000064H
	push	ebp
; Line 370
	mov	ebp, DWORD PTR _args$[esp+100]
	mov	ecx, DWORD PTR [ebp]
; Line 371
	test	eax, eax
	je	$LN60@drawFontRe
; Line 374
	mov	edx, DWORD PTR [ebp+4]
	mov	DWORD PTR _argument$[esp+104], eax
	mov	DWORD PTR _argument$1$[esp+104], edx
	mov	DWORD PTR _argument$[esp+112], edx
	test	edx, edx
; Line 375
	je	$LN60@drawFontRe
; Line 377
	movss	xmm0, DWORD PTR [ebp+20]
	ucomiss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _argument$[esp+116], xmm0
	lahf
	test	ah, 68					; 00000044H
; Line 378
	jnp	$LN60@drawFontRe
; Line 380
	push	edi
	test	cl, 32					; 00000020H
	je	SHORT $LN30@drawFontRe
	mov	edi, DWORD PTR [ebp+8]
	jmp	SHORT $LN69@drawFontRe
$LN30@drawFontRe:
	mov	edi, edx
	lea	edx, DWORD PTR [edi+1]
	npad	6
$LL62@drawFontRe:
	mov	al, BYTE PTR [edi]
	inc	edi
	test	al, al
	jne	SHORT $LL62@drawFontRe
	sub	edi, edx
$LN69@drawFontRe:
; Line 381
	mov	DWORD PTR _argument$[esp+112], edi
	push	ebx
	test	ecx, 131072				; 00020000H
	je	SHORT $LN18@drawFontRe
; Line 382
	mov	ebx, 900				; 00000384H
	jmp	SHORT $LN70@drawFontRe
$LN18@drawFontRe:
; Line 383
	mov	ebx, ecx
	and	ebx, 32768				; 00008000H
	neg	ebx
	sbb	ebx, ebx
	and	ebx, 700				; 000002bcH
$LN70@drawFontRe:
; Line 387
	mov	eax, ecx
	mov	DWORD PTR _argument$[esp+128], ebx
	and	eax, 65536				; 00010000H
	mov	DWORD PTR _argument$4$[esp+112], eax
	mov	DWORD PTR _argument$[esp+132], eax
; Line 388
	mov	eax, ecx
	and	eax, 16					; 00000010H
	mov	DWORD PTR _argument$5$[esp+112], eax
	mov	DWORD PTR _argument$[esp+136], eax
	je	SHORT $LN64@drawFontRe
; Line 389
	movss	xmm0, DWORD PTR [ebp+24]
	movss	DWORD PTR _argument$[esp+144], xmm0
	jmp	SHORT $LN71@drawFontRe
$LN64@drawFontRe:
; Line 388
	movss	xmm0, DWORD PTR _argument$[esp+144]
$LN71@drawFontRe:
; Line 390
	movss	DWORD PTR _argument$12$[esp+112], xmm0
	test	cl, 1
	je	SHORT $LN23@drawFontRe
; Line 391
	mov	eax, 2
	jmp	SHORT $LN72@drawFontRe
$LN23@drawFontRe:
; Line 392
	movzx	eax, cl
	shr	eax, 1
	and	eax, 1
$LN72@drawFontRe:
; Line 396
	mov	DWORD PTR _argument$[esp+140], eax
	mov	DWORD PTR _argument$6$[esp+108], eax
	mov	eax, ecx
	and	eax, 64					; 00000040H
	mov	DWORD PTR _argument$7$[esp+112], eax
	mov	DWORD PTR _argument$[esp+156], eax
; Line 397
	mov	eax, ecx
	and	eax, 128				; 00000080H
	mov	DWORD PTR _argument$8$[esp+112], eax
	mov	DWORD PTR _argument$[esp+160], eax
; Line 398
	test	ecx, 262144				; 00040000H
	je	SHORT $LN27@drawFontRe
; Line 399
	mov	edx, DWORD PTR [ebp+40]
	mov	DWORD PTR _argument$9$[esp+112], edx
	mov	DWORD PTR _argument$[esp+164], edx
; Line 400
	mov	edx, DWORD PTR [ebp+44]
	mov	DWORD PTR _argument$10$[esp+112], edx
	mov	DWORD PTR _argument$[esp+168], edx
; Line 401
	jmp	SHORT $LN5@drawFontRe
$LN27@drawFontRe:
; Line 402
	xor	eax, eax
	mov	DWORD PTR _argument$10$[esp+112], eax
	mov	DWORD PTR _argument$[esp+168], eax
	mov	DWORD PTR _argument$9$[esp+112], eax
	mov	DWORD PTR _argument$[esp+164], eax
$LN5@drawFontRe:
; Line 542
	mov	eax, DWORD PTR _fr$[esp+108]
	push	esi
	mov	esi, DWORD PTR [eax+48]
	test	esi, esi
	je	SHORT $LN61@drawFontRe
	push	ecx
	lea	eax, DWORD PTR _argument$[esp+120]
	push	eax
	push	esi
	call	?doesCacheMatch@@YAHPAUfont_renderer_cache@@0K@Z ; doesCacheMatch
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN65@drawFontRe
; Line 543
	mov	ecx, DWORD PTR _fr$[esp+112]
	mov	eax, DWORD PTR [esi+64]
; Line 544
	movss	xmm1, DWORD PTR _argument$[esp+128]
	mov	DWORD PTR [ecx+48], eax
	movss	xmm3, DWORD PTR [esi+12]
	movss	xmm2, DWORD PTR [esi+36]
	ucomiss	xmm3, xmm1
	lahf
	test	ah, 68					; 00000044H
	mov	eax, DWORD PTR _width$[esp+112]
	jp	$LN10@drawFontRe
; Line 563
	mov	ecx, DWORD PTR _height$[esp+112]
	movss	DWORD PTR [eax], xmm2
	movss	xmm1, DWORD PTR [esi+40]
	movss	DWORD PTR [ecx], xmm1
	mov	eax, DWORD PTR [esi+60]
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 573
	add	esp, 100				; 00000064H
	ret	0
$LN65@drawFontRe:
; Line 542
	mov	eax, DWORD PTR _fr$[esp+112]
$LN61@drawFontRe:
; Line 553
	mov	esi, DWORD PTR [eax+44]
	test	esi, esi
	je	SHORT $LN3@drawFontRe
	npad	5
$LL4@drawFontRe:
; Line 554
	push	DWORD PTR [ebp]
	lea	eax, DWORD PTR _argument$[esp+120]
	push	eax
	push	esi
	call	?doesCacheMatch@@YAHPAUfont_renderer_cache@@0K@Z ; doesCacheMatch
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN50@drawFontRe
; Line 553
	mov	esi, DWORD PTR [esi+64]
	test	esi, esi
	jne	SHORT $LL4@drawFontRe
$LN3@drawFontRe:
; Line 465
	push	68					; 00000044H
	call	_malloc
	mov	esi, eax
	add	esp, 4
; Line 466
	test	esi, esi
	je	$LN73@drawFontRe
; Line 469
	push	edi
	mov	DWORD PTR [esi+4], edi
	call	_malloc
	mov	ebp, eax
	add	esp, 4
	mov	DWORD PTR [esi+8], ebp
; Line 470
	test	ebp, ebp
	jne	$LN41@drawFontRe
; Line 471
	push	esi
	call	_free
; Line 572
	mov	eax, DWORD PTR _failcode$[esp+116]
; Line 471
	add	esp, 4
	pop	esi
	pop	ebx
	pop	edi
; Line 572
	mov	DWORD PTR [eax], 5
	xor	eax, eax
	pop	ebp
; Line 573
	add	esp, 100				; 00000064H
	ret	0
$LN50@drawFontRe:
; Line 444
	mov	edx, DWORD PTR _fr$[esp+112]
	mov	ecx, DWORD PTR [edx+44]
; Line 445
	cmp	ecx, esi
	jne	SHORT $LN36@drawFontRe
; Line 446
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [edx+44], eax
; Line 447
	mov	eax, esi
	jmp	SHORT $LN32@drawFontRe
$LN36@drawFontRe:
; Line 449
	mov	eax, DWORD PTR [ecx+64]
	test	eax, eax
	je	SHORT $LN34@drawFontRe
$LL35@drawFontRe:
; Line 450
	cmp	eax, esi
	je	SHORT $LN51@drawFontRe
; Line 449
	mov	ecx, eax
	mov	eax, DWORD PTR [eax+64]
	test	eax, eax
	jne	SHORT $LL35@drawFontRe
$LN34@drawFontRe:
; Line 455
	xor	eax, eax
$LN32@drawFontRe:
; Line 555
	push	eax
	push	DWORD PTR [edx+48]
	push	edx
	call	?insertCache@@YAXPAVfont_renderer@@PAUfont_renderer_cache@@1@Z ; insertCache
; Line 556
	movss	xmm3, DWORD PTR [esi+12]
	add	esp, 12					; 0000000cH
	movss	xmm1, DWORD PTR _argument$[esp+128]
	movss	xmm2, DWORD PTR [esi+36]
	ucomiss	xmm3, xmm1
	lahf
	test	ah, 68					; 00000044H
	mov	eax, DWORD PTR _width$[esp+112]
	jp	SHORT $LN10@drawFontRe
; Line 563
	mov	ecx, DWORD PTR _height$[esp+112]
	movss	DWORD PTR [eax], xmm2
	movss	xmm1, DWORD PTR [esi+40]
	movss	DWORD PTR [ecx], xmm1
	mov	eax, DWORD PTR [esi+60]
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 573
	add	esp, 100				; 00000064H
	ret	0
$LN51@drawFontRe:
; Line 451
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [ecx+64], eax
; Line 452
	mov	eax, esi
	jmp	SHORT $LN32@drawFontRe
$LN10@drawFontRe:
; Line 560
	movaps	xmm0, xmm1
; Line 563
	mov	ecx, DWORD PTR _height$[esp+112]
	divss	xmm0, xmm3
	mulss	xmm0, xmm2
	movss	DWORD PTR [eax], xmm0
	divss	xmm1, DWORD PTR [esi+12]
	mulss	xmm1, DWORD PTR [esi+40]
	movss	DWORD PTR [ecx], xmm1
	mov	eax, DWORD PTR [esi+60]
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 573
	add	esp, 100				; 00000064H
	ret	0
$LN41@drawFontRe:
; Line 474
	push	edi
	push	DWORD PTR _argument$1$[esp+120]
	push	ebp
	call	_memcpy
; Line 169
	mov	ecx, ebp
; Line 474
	add	esp, 12					; 0000000cH
; Line 169
	lea	edx, DWORD PTR [ecx+1]
	npad	4
$LL63@drawFontRe:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL63@drawFontRe
	sub	ecx, edx
	lea	eax, DWORD PTR [ecx+1]
	mov	DWORD PTR _count$1$[esp+116], eax
; Line 170
	add	eax, eax
	push	eax
	call	_malloc
	add	esp, 4
	mov	edi, eax
	push	ebp
	test	edi, edi
	je	$LN59@drawFontRe
; Line 171
	push	OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
	push	DWORD PTR _count$1$[esp+124]
	push	edi
	call	_swprintf
; Line 482
	mov	eax, DWORD PTR _font$[esp+128]
; Line 492
	push	DWORD PTR _failcode$[esp+128]
	movss	xmm0, DWORD PTR _argument$[esp+148]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR _argument$4$[esp+136]
	mov	DWORD PTR [esi+20], eax
	mov	eax, DWORD PTR _argument$5$[esp+136]
	mov	DWORD PTR [esi+24], eax
	mov	eax, DWORD PTR _argument$6$[esp+132]
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR _argument$7$[esp+136]
	mov	DWORD PTR [esi+44], eax
	mov	eax, DWORD PTR _argument$8$[esp+136]
	mov	DWORD PTR [esi+48], eax
	mov	eax, DWORD PTR _argument$9$[esp+136]
	push	edi
	movss	DWORD PTR [esi+12], xmm0
	movss	xmm0, DWORD PTR _argument$12$[esp+140]
	mov	DWORD PTR [esi+16], ebx
	mov	ebx, DWORD PTR _fr$[esp+136]
	mov	DWORD PTR [esi+52], eax
	mov	eax, DWORD PTR _argument$10$[esp+140]
	push	esi
	push	ebx
	movss	DWORD PTR [esi+32], xmm0
	mov	DWORD PTR [esi+56], eax
	call	?drawCacheTexture@@YAHPAVfont_renderer@@PAUfont_renderer_cache@@PB_WPAH@Z ; drawCacheTexture
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN43@drawFontRe
; Line 493
	inc	DWORD PTR [ebx+52]
; Line 494
	push	edi
	call	_free
; Line 567
	push	esi
	push	DWORD PTR [ebx+48]
	push	ebx
	call	?insertCache@@YAXPAVfont_renderer@@PAUfont_renderer_cache@@1@Z ; insertCache
; Line 568
	mov	eax, DWORD PTR _width$[esp+128]
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR [eax], ecx
; Line 569
	mov	eax, DWORD PTR _height$[esp+112]
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR [esi+60]
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 573
	add	esp, 100				; 00000064H
	ret	0
$LN43@drawFontRe:
; Line 497
	push	DWORD PTR [esi+8]
	call	_free
; Line 498
	push	esi
	call	_free
; Line 499
	push	edi
	call	_free
	add	esp, 12					; 0000000cH
; Line 572
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 573
	add	esp, 100				; 00000064H
	ret	0
$LN59@drawFontRe:
; Line 477
	call	_free
; Line 478
	push	esi
	call	_free
	add	esp, 8
$LN73@drawFontRe:
; Line 572
	mov	eax, DWORD PTR _failcode$[esp+112]
	pop	esi
	pop	ebx
	pop	edi
	mov	DWORD PTR [eax], 5
	xor	eax, eax
	pop	ebp
; Line 573
	add	esp, 100				; 00000064H
	ret	0
$LN60@drawFontRe:
; Line 541
	mov	eax, DWORD PTR _failcode$[esp+100]
	pop	ebp
	mov	DWORD PTR [eax], 11			; 0000000bH
	xor	eax, eax
; Line 573
	add	esp, 100				; 00000064H
	ret	0
_drawFontRendererTexture ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _finishFontRendererCycle
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_finishFontRendererCycle PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 526
	push	ebx
; Line 532
	mov	ebx, DWORD PTR _fr$[esp]
	push	esi
	mov	esi, DWORD PTR [ebx+48]
	test	esi, esi
	je	SHORT $LN3@finishFont
	push	edi
	npad	2
$LL2@finishFont:
; Line 444
	mov	ecx, DWORD PTR [ebx+44]
; Line 533
	mov	edi, DWORD PTR [esi+64]
; Line 445
	cmp	ecx, esi
	jne	SHORT $LN9@finishFont
; Line 446
	mov	DWORD PTR [ebx+44], edi
; Line 447
	jmp	SHORT $LN5@finishFont
$LN9@finishFont:
; Line 449
	mov	eax, DWORD PTR [ecx+64]
	test	eax, eax
	je	SHORT $LN7@finishFont
$LL8@finishFont:
; Line 450
	cmp	eax, esi
	je	SHORT $LN16@finishFont
; Line 449
	mov	ecx, eax
	mov	eax, DWORD PTR [eax+64]
	test	eax, eax
	jne	SHORT $LL8@finishFont
$LN7@finishFont:
; Line 455
	xor	esi, esi
$LN5@finishFont:
; Line 503
	dec	DWORD PTR [ebx+52]
; Line 504
	mov	eax, DWORD PTR [esi+60]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
; Line 505
	push	DWORD PTR [esi+8]
	call	_free
; Line 506
	push	esi
	call	_free
	add	esp, 8
; Line 532
	mov	esi, edi
	test	edi, edi
	jne	SHORT $LL2@finishFont
	pop	edi
$LN3@finishFont:
	pop	esi
; Line 536
	pop	ebx
	ret	0
$LN16@finishFont:
; Line 451
	mov	DWORD PTR [ecx+64], edi
; Line 452
	jmp	SHORT $LN5@finishFont
_finishFontRendererCycle ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _startFontRendererCycle
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_width$ = 12						; size = 4
_height$ = 16						; size = 4
_startFontRendererCycle PROC				; COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 514
	mov	ecx, DWORD PTR _width$[esp-4]
	push	ebp
	mov	ebp, DWORD PTR _height$[esp]
	push	esi
	mov	esi, DWORD PTR _fr$[esp+4]
	cmp	ecx, DWORD PTR [esi+4]
	jne	SHORT $LN6@startFontR
	cmp	ebp, DWORD PTR [esi+8]
	jne	SHORT $LN6@startFontR
; Line 520
	mov	eax, DWORD PTR [esi+44]
; Line 523
	mov	DWORD PTR [esi+8], ebp
	mov	DWORD PTR [esi+4], ecx
; Line 524
	mov	DWORD PTR [esi+48], eax
	pop	esi
	pop	ebp
; Line 525
	ret	0
$LN6@startFontR:
	push	ebx
; Line 516
	mov	ebx, DWORD PTR [esi+44]
	test	ebx, ebx
	je	SHORT $LN3@startFontR
	push	edi
$LL2@startFontR:
; Line 517
	mov	edi, DWORD PTR [ebx+64]
; Line 503
	dec	DWORD PTR [esi+52]
; Line 504
	mov	eax, DWORD PTR [ebx+60]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
; Line 505
	push	DWORD PTR [ebx+8]
	call	_free
; Line 506
	push	ebx
	call	_free
	add	esp, 8
; Line 516
	mov	ebx, edi
	test	edi, edi
	jne	SHORT $LL2@startFontR
	mov	ecx, DWORD PTR _width$[esp+12]
	pop	edi
$LN3@startFontR:
; Line 520
	xor	eax, eax
; Line 523
	mov	DWORD PTR [esi+8], ebp
	pop	ebx
	mov	DWORD PTR [esi+44], 0
	mov	DWORD PTR [esi+4], ecx
; Line 524
	mov	DWORD PTR [esi+48], eax
	pop	esi
	pop	ebp
; Line 525
	ret	0
_startFontRendererCycle ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?destroyCache@@YAXPAVfont_renderer@@PAUfont_renderer_cache@@@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_cache$ = 12						; size = 4
?destroyCache@@YAXPAVfont_renderer@@PAUfont_renderer_cache@@@Z PROC ; destroyCache, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 503
	mov	eax, DWORD PTR _fr$[esp-4]
	push	esi
; Line 504
	mov	esi, DWORD PTR _cache$[esp]
	dec	DWORD PTR [eax+52]
	mov	eax, DWORD PTR [esi+60]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
; Line 505
	push	DWORD PTR [esi+8]
	call	_free
; Line 506
	push	esi
	call	_free
	add	esp, 8
	pop	esi
; Line 507
	ret	0
?destroyCache@@YAXPAVfont_renderer@@PAUfont_renderer_cache@@@Z ENDP ; destroyCache
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?createCache@@YAPAUfont_renderer_cache@@PAVfont_renderer@@PAU1@PAH@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_copy$ = 12						; size = 4
_failcode$ = 16						; size = 4
?createCache@@YAPAUfont_renderer_cache@@PAVfont_renderer@@PAU1@PAH@Z PROC ; createCache, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 457
	push	esi
; Line 465
	push	68					; 00000044H
	call	_malloc
	mov	esi, eax
	add	esp, 4
; Line 466
	test	esi, esi
	jne	SHORT $LN2@createCach
; Line 467
	mov	eax, DWORD PTR _failcode$[esp]
	pop	esi
	mov	DWORD PTR [eax], 5
	xor	eax, eax
; Line 501
	ret	0
$LN2@createCach:
	push	ebx
; Line 468
	mov	ebx, DWORD PTR _copy$[esp+4]
	push	ebp
	push	edi
	mov	ebp, DWORD PTR [ebx+4]
; Line 469
	push	ebp
	mov	DWORD PTR [esi+4], ebp
	call	_malloc
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR [esi+8], edi
; Line 470
	test	edi, edi
	jne	SHORT $LN3@createCach
; Line 471
	push	esi
	call	_free
; Line 472
	mov	eax, DWORD PTR _failcode$[esp+16]
	add	esp, 4
	pop	edi
	pop	ebp
	pop	ebx
	mov	DWORD PTR [eax], 5
; Line 500
	xor	eax, eax
	pop	esi
; Line 501
	ret	0
$LN3@createCach:
; Line 474
	push	ebp
	push	DWORD PTR [ebx+8]
	push	edi
	call	_memcpy
; Line 475
	push	edi
	call	?makeWideCharFromAscii@@YAPA_WPBD@Z	; makeWideCharFromAscii
	mov	ebp, eax
	add	esp, 16					; 00000010H
; Line 476
	test	ebp, ebp
	jne	SHORT $LN4@createCach
; Line 477
	push	edi
	call	_free
; Line 478
	push	esi
	call	_free
; Line 479
	mov	eax, DWORD PTR _failcode$[esp+20]
	add	esp, 8
	pop	edi
	pop	ebp
	pop	ebx
	mov	DWORD PTR [eax], 5
; Line 500
	xor	eax, eax
	pop	esi
; Line 501
	ret	0
$LN4@createCach:
; Line 481
	mov	eax, DWORD PTR [ebx+12]
; Line 492
	push	DWORD PTR _failcode$[esp+12]
	mov	edi, DWORD PTR _fr$[esp+16]
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [ebx+16]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR [ebx+20]
	mov	DWORD PTR [esi+20], eax
	mov	eax, DWORD PTR [ebx+24]
	mov	DWORD PTR [esi+24], eax
	mov	eax, DWORD PTR [ebx+28]
	mov	DWORD PTR [esi+28], eax
	mov	eax, DWORD PTR [ebx+32]
	mov	DWORD PTR [esi+32], eax
	mov	eax, DWORD PTR [ebx+44]
	mov	DWORD PTR [esi+44], eax
	mov	eax, DWORD PTR [ebx+48]
	mov	DWORD PTR [esi+48], eax
	mov	eax, DWORD PTR [ebx+52]
	push	ebp
	mov	DWORD PTR [esi+52], eax
	mov	eax, DWORD PTR [ebx+56]
	push	esi
	push	edi
	mov	DWORD PTR [esi+56], eax
	call	?drawCacheTexture@@YAHPAVfont_renderer@@PAUfont_renderer_cache@@PB_WPAH@Z ; drawCacheTexture
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN5@createCach
; Line 493
	inc	DWORD PTR [edi+52]
; Line 494
	push	ebp
	call	_free
	add	esp, 4
; Line 495
	mov	eax, esi
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 501
	ret	0
$LN5@createCach:
; Line 497
	push	DWORD PTR [esi+8]
	call	_free
; Line 498
	push	esi
	call	_free
; Line 499
	push	ebp
	call	_free
	add	esp, 12					; 0000000cH
; Line 500
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 501
	ret	0
?createCache@@YAPAUfont_renderer_cache@@PAVfont_renderer@@PAU1@PAH@Z ENDP ; createCache
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?removeCache@@YAPAUfont_renderer_cache@@PAVfont_renderer@@PAU1@@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_cache$ = 12						; size = 4
?removeCache@@YAPAUfont_renderer_cache@@PAVfont_renderer@@PAU1@@Z PROC ; removeCache, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 444
	mov	eax, DWORD PTR _fr$[esp-4]
; Line 445
	mov	edx, DWORD PTR _cache$[esp-4]
	mov	ecx, DWORD PTR [eax+44]
	cmp	ecx, edx
	jne	SHORT $LN5@removeCach
; Line 446
	mov	ecx, DWORD PTR [edx+64]
	mov	DWORD PTR [eax+44], ecx
; Line 447
	mov	eax, edx
; Line 456
	ret	0
$LN5@removeCach:
; Line 449
	mov	eax, DWORD PTR [ecx+64]
	test	eax, eax
	je	SHORT $LN3@removeCach
	npad	1
$LL4@removeCach:
; Line 450
	cmp	eax, edx
	je	SHORT $LN9@removeCach
; Line 449
	mov	ecx, eax
	mov	eax, DWORD PTR [eax+64]
	test	eax, eax
	jne	SHORT $LL4@removeCach
$LN3@removeCach:
; Line 455
	xor	eax, eax
; Line 456
	ret	0
$LN9@removeCach:
; Line 451
	mov	eax, DWORD PTR [edx+64]
	mov	DWORD PTR [ecx+64], eax
; Line 452
	mov	eax, edx
; Line 456
	ret	0
?removeCache@@YAPAUfont_renderer_cache@@PAVfont_renderer@@PAU1@@Z ENDP ; removeCache
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?insertCache@@YAXPAVfont_renderer@@PAUfont_renderer_cache@@1@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_before$ = 12						; size = 4
_cache$ = 16						; size = 4
?insertCache@@YAXPAVfont_renderer@@PAUfont_renderer_cache@@1@Z PROC ; insertCache, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 426
	mov	ecx, DWORD PTR _before$[esp-4]
	push	esi
	mov	esi, DWORD PTR _fr$[esp]
	mov	edx, DWORD PTR [esi+44]
	cmp	edx, ecx
	jne	SHORT $LN5@insertCach
; Line 427
	mov	eax, DWORD PTR _cache$[esp]
	mov	DWORD PTR [eax+64], edx
; Line 428
	mov	DWORD PTR [esi+44], eax
	pop	esi
; Line 440
	ret	0
$LN5@insertCach:
; Line 431
	mov	eax, DWORD PTR [edx+64]
	test	eax, eax
	je	SHORT $LN3@insertCach
$LL4@insertCach:
; Line 432
	cmp	eax, ecx
	je	SHORT $LN9@insertCach
; Line 431
	mov	edx, eax
	mov	eax, DWORD PTR [eax+64]
	test	eax, eax
	jne	SHORT $LL4@insertCach
$LN3@insertCach:
; Line 438
	mov	eax, DWORD PTR _cache$[esp]
	pop	esi
	mov	DWORD PTR [eax+64], 0
; Line 439
	mov	DWORD PTR [edx+64], eax
; Line 440
	ret	0
$LN9@insertCach:
; Line 433
	mov	ecx, DWORD PTR _cache$[esp]
	pop	esi
	mov	DWORD PTR [ecx+64], eax
; Line 434
	mov	DWORD PTR [edx+64], ecx
; Line 440
	ret	0
?insertCache@@YAXPAVfont_renderer@@PAUfont_renderer_cache@@1@Z ENDP ; insertCache
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?doesCacheMatch@@YAHPAUfont_renderer_cache@@0K@Z
_TEXT	SEGMENT
_cache$ = 8						; size = 4
_arg$ = 12						; size = 4
_flags$ = 16						; size = 4
?doesCacheMatch@@YAHPAUfont_renderer_cache@@0K@Z PROC	; doesCacheMatch, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 408
	mov	eax, DWORD PTR _flags$[esp-4]
	push	esi
	push	edi
	test	eax, 1024				; 00000400H
	jne	$LN6@doesCacheM
; Line 410
	mov	ecx, DWORD PTR _arg$[esp+4]
	mov	edx, DWORD PTR _cache$[esp+4]
	test	eax, 2048				; 00000800H
	je	SHORT $LN3@doesCacheM
	movss	xmm0, DWORD PTR [edx+12]
	ucomiss	xmm0, DWORD PTR [ecx+12]
	lahf
	test	ah, 68					; 00000044H
	jp	$LN6@doesCacheM
	mov	eax, DWORD PTR [edx+52]
	cmp	eax, DWORD PTR [ecx+52]
	jne	$LN6@doesCacheM
	mov	eax, DWORD PTR [edx+56]
	cmp	eax, DWORD PTR [ecx+56]
	jne	SHORT $LN6@doesCacheM
$LN3@doesCacheM:
; Line 412
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR [ecx+16]
	jne	SHORT $LN6@doesCacheM
	mov	eax, DWORD PTR [edx+20]
	cmp	eax, DWORD PTR [ecx+20]
	jne	SHORT $LN6@doesCacheM
; Line 414
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN6@doesCacheM
	mov	edi, DWORD PTR [edx+4]
	cmp	edi, DWORD PTR [ecx+4]
	jne	SHORT $LN6@doesCacheM
	mov	esi, DWORD PTR [edx+24]
	cmp	esi, DWORD PTR [ecx+24]
	jne	SHORT $LN6@doesCacheM
	mov	eax, DWORD PTR [edx+28]
	cmp	eax, DWORD PTR [ecx+28]
	jne	SHORT $LN6@doesCacheM
	mov	eax, DWORD PTR [edx+44]
	cmp	eax, DWORD PTR [ecx+44]
	jne	SHORT $LN6@doesCacheM
	mov	eax, DWORD PTR [edx+48]
	cmp	eax, DWORD PTR [ecx+48]
	jne	SHORT $LN6@doesCacheM
; Line 416
	test	esi, esi
	je	SHORT $LN9@doesCacheM
	movss	xmm0, DWORD PTR [edx+32]
	ucomiss	xmm0, DWORD PTR [ecx+32]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN6@doesCacheM
	movss	xmm0, DWORD PTR [edx+12]
	ucomiss	xmm0, DWORD PTR [ecx+12]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN6@doesCacheM
$LN9@doesCacheM:
; Line 418
	push	edi
	push	DWORD PTR [ecx+8]
	push	DWORD PTR [edx+8]
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@doesCacheM
; Line 420
	pop	edi
	mov	eax, 1
; Line 421
	pop	esi
	ret	0
$LN6@doesCacheM:
	pop	edi
; Line 413
	xor	eax, eax
; Line 421
	pop	esi
	ret	0
?doesCacheMatch@@YAHPAUfont_renderer_cache@@0K@Z ENDP	; doesCacheMatch
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?fillCacheArgument@@YAHPAUfont_renderer_cache@@PAUfont_renderer_font@@PAUrender_text_draw@@@Z
_TEXT	SEGMENT
_c$ = 8							; size = 4
_font$ = 12						; size = 4
_args$ = 16						; size = 4
?fillCacheArgument@@YAHPAUfont_renderer_cache@@PAUfont_renderer_font@@PAUrender_text_draw@@@Z PROC ; fillCacheArgument, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 371
	mov	eax, DWORD PTR _font$[esp-4]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _args$[esp+4]
	mov	ebx, DWORD PTR [esi]
	test	eax, eax
	je	$LN19@fillCacheA
; Line 373
	mov	ecx, DWORD PTR _c$[esp+4]
	mov	DWORD PTR [ecx], eax
; Line 374
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+8], edx
; Line 375
	test	edx, edx
	je	$LN19@fillCacheA
; Line 377
	movss	xmm0, DWORD PTR [esi+20]
; Line 378
	ucomiss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+12], xmm0
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN19@fillCacheA
; Line 380
	test	bl, 32					; 00000020H
	je	SHORT $LN17@fillCacheA
	mov	edx, DWORD PTR [esi+8]
	jmp	SHORT $LN18@fillCacheA
$LN17@fillCacheA:
	push	edi
	lea	edi, DWORD PTR [edx+1]
$LL20@fillCacheA:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL20@fillCacheA
	sub	edx, edi
	pop	edi
$LN18@fillCacheA:
	mov	DWORD PTR [ecx+4], edx
; Line 381
	test	ebx, 131072				; 00020000H
	je	SHORT $LN5@fillCacheA
; Line 382
	mov	DWORD PTR [ecx+16], 900			; 00000384H
	jmp	SHORT $LN7@fillCacheA
$LN5@fillCacheA:
; Line 383
	mov	eax, ebx
	and	eax, 32768				; 00008000H
	neg	eax
	sbb	eax, eax
	and	eax, 700				; 000002bcH
	mov	DWORD PTR [ecx+16], eax
$LN7@fillCacheA:
; Line 387
	mov	eax, ebx
	and	eax, 65536				; 00010000H
	mov	DWORD PTR [ecx+20], eax
; Line 388
	mov	eax, ebx
	and	eax, 16					; 00000010H
	mov	DWORD PTR [ecx+24], eax
	je	SHORT $LN9@fillCacheA
; Line 389
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [ecx+32], eax
$LN9@fillCacheA:
; Line 390
	test	bl, 1
	je	SHORT $LN10@fillCacheA
; Line 391
	mov	DWORD PTR [ecx+28], 2
	jmp	SHORT $LN12@fillCacheA
$LN10@fillCacheA:
; Line 392
	movzx	eax, bl
	shr	eax, 1
	and	eax, 1
	mov	DWORD PTR [ecx+28], eax
$LN12@fillCacheA:
; Line 396
	mov	eax, ebx
	and	eax, 64					; 00000040H
	mov	DWORD PTR [ecx+44], eax
; Line 397
	mov	eax, ebx
	and	eax, 128				; 00000080H
	mov	DWORD PTR [ecx+48], eax
; Line 398
	test	ebx, 262144				; 00040000H
	je	SHORT $LN14@fillCacheA
; Line 399
	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [ecx+52], eax
; Line 400
	mov	eax, DWORD PTR [esi+44]
	pop	esi
; Line 403
	mov	DWORD PTR [ecx+56], eax
	mov	eax, 1
; Line 404
	pop	ebx
	ret	0
$LN14@fillCacheA:
; Line 402
	xor	eax, eax
	mov	DWORD PTR [ecx+52], 0
	pop	esi
; Line 403
	mov	DWORD PTR [ecx+56], eax
	mov	eax, 1
; Line 404
	pop	ebx
	ret	0
$LN19@fillCacheA:
	pop	esi
; Line 379
	xor	eax, eax
; Line 404
	pop	ebx
	ret	0
?fillCacheArgument@@YAHPAUfont_renderer_cache@@PAUfont_renderer_font@@PAUrender_text_draw@@@Z ENDP ; fillCacheArgument
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?getCacheCount@@YAIPAVfont_renderer@@@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
?getCacheCount@@YAIPAVfont_renderer@@@Z PROC		; getCacheCount, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 362
	mov	ecx, DWORD PTR _fr$[esp-4]
	xor	eax, eax
	mov	ecx, DWORD PTR [ecx+44]
	test	ecx, ecx
	je	SHORT $LN3@getCacheCo
	npad	3
$LL4@getCacheCo:
	mov	ecx, DWORD PTR [ecx+64]
; Line 363
	inc	eax
	test	ecx, ecx
	jne	SHORT $LL4@getCacheCo
$LN3@getCacheCo:
; Line 365
	ret	0
?getCacheCount@@YAIPAVfont_renderer@@@Z ENDP		; getCacheCount
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?drawCacheTexture@@YAHPAVfont_renderer@@PAUfont_renderer_cache@@PB_WPAH@Z
_TEXT	SEGMENT
tv1450 = -184						; size = 4
_font$1$ = -184						; size = 4
_layout$1 = -184					; size = 4
tv1447 = -180						; size = 4
_w$2$ = -180						; size = 4
_h$1$ = -176						; size = 4
_texture$2 = -176					; size = 4
_remain$1$ = -172					; size = 4
_bh$1$ = -172						; size = 4
tv1448 = -172						; size = 4
_align$1$ = -172					; size = 4
_h$2$ = -168						; size = 4
_ratio$ = -168						; size = 4
_format$3 = -164					; size = 4
_size$1$ = -160						; size = 4
tv1391 = -160						; size = 4
_text$GSCopy$1$ = -156					; size = 4
_bw$1$ = -156						; size = 4
_w$3$ = -156						; size = 4
_target$ = -152						; size = 4
_wrap$1$ = -148						; size = 4
_rect$4 = -148						; size = 8
_gdi$ = -140						; size = 4
_cache$GSCopy$1$ = -136					; size = 4
$T5 = -132						; size = 4
$T6 = -128						; size = 4
_dib$7 = -124						; size = 84
_dib$8 = -124						; size = 84
_metrics$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_fr$ = 8						; size = 4
_cache$ = 12						; size = 4
_text$ = 16						; size = 4
_failcode$ = 20						; size = 4
?drawCacheTexture@@YAHPAVfont_renderer@@PAUfont_renderer_cache@@PB_WPAH@Z PROC ; drawCacheTexture, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 264
	sub	esp, 184				; 000000b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+184], eax
	mov	eax, DWORD PTR _text$[esp+180]
	push	ebx
	mov	ebx, DWORD PTR _failcode$[esp+184]
	push	ebp
	mov	ebp, DWORD PTR _cache$[esp+188]
	push	esi
	push	edi
	mov	edi, DWORD PTR _fr$[esp+196]
	mov	DWORD PTR _cache$GSCopy$1$[esp+200], ebp
	mov	DWORD PTR _text$GSCopy$1$[esp+200], eax
; Line 275
	cmp	DWORD PTR [edi+4], 0
	jle	$LN3@drawCacheT
	cmp	DWORD PTR [edi+8], 0
	jle	$LN3@drawCacheT
; Line 277
	mov	ecx, DWORD PTR [edi+24]
	mov	DWORD PTR _gdi$[esp+200], ecx
	test	ecx, ecx
; Line 278
	jne	SHORT $LN4@drawCacheT
; Line 279
	mov	eax, DWORD PTR [edi+16]
	lea	edx, DWORD PTR _gdi$[esp+200]
	push	edx
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+68]
	test	eax, eax
	je	SHORT $LN5@drawCacheT
; Line 280
	mov	DWORD PTR [ebx], 14			; 0000000eH
$LN86@drawCacheT:
; Line 354
	xor	eax, eax
	jmp	$LN1@drawCacheT
$LN5@drawCacheT:
; Line 281
	mov	ecx, DWORD PTR _gdi$[esp+200]
	mov	DWORD PTR [edi+24], ecx
$LN4@drawCacheT:
; Line 283
	mov	edx, DWORD PTR [edi+28]
	mov	DWORD PTR _target$[esp+200], edx
	test	edx, edx
; Line 284
	jne	SHORT $LN6@drawCacheT
; Line 288
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR _target$[esp+200]
	push	edx
	push	DWORD PTR [edi+8]
	push	DWORD PTR [edi+4]
	push	0
	push	ecx
	call	DWORD PTR [eax+28]
	test	eax, eax
	je	SHORT $LN8@drawCacheT
; Line 289
	mov	DWORD PTR [ebx], 15			; 0000000fH
	xor	eax, eax
	jmp	$LN1@drawCacheT
$LN8@drawCacheT:
; Line 290
	mov	edx, DWORD PTR _target$[esp+200]
	mov	DWORD PTR [edi+28], edx
; Line 292
	jmp	SHORT $LN84@drawCacheT
$LN6@drawCacheT:
; Line 293
	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, DWORD PTR [edi+32]
	jne	SHORT $LN83@drawCacheT
	mov	esi, DWORD PTR [edi+8]
	cmp	esi, DWORD PTR [edi+36]
	je	SHORT $LN9@drawCacheT
$LN83@drawCacheT:
; Line 297
	push	DWORD PTR [edi+8]
	mov	eax, DWORD PTR [edx]
	push	ecx
	push	edx
	call	DWORD PTR [eax+40]
	test	eax, eax
	je	SHORT $LN11@drawCacheT
; Line 298
	mov	DWORD PTR [ebx], 4
	xor	eax, eax
	jmp	$LN1@drawCacheT
$LN11@drawCacheT:
; Line 300
	mov	edx, DWORD PTR _target$[esp+200]
$LN84@drawCacheT:
; Line 302
	mov	esi, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [edi+36], esi
	mov	DWORD PTR [edi+32], ecx
$LN9@drawCacheT:
	mov	eax, DWORD PTR [ebp+52]
; Line 303
	test	eax, eax
	cmove	eax, ecx
; Line 305
	cmp	eax, ecx
	cmovle	ecx, eax
; Line 306
	cmp	DWORD PTR [ebp+24], 0
	mov	DWORD PTR $T5[esp+200], ecx
	mov	eax, ecx
	mov	DWORD PTR _w$2$[esp+200], ecx
	je	SHORT $LN13@drawCacheT
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR [ebp+32]
	cvttss2si eax, xmm0
	cmp	eax, ecx
	cmovg	eax, ecx
	mov	DWORD PTR _w$2$[esp+200], eax
$LN13@drawCacheT:
; Line 308
	mov	ecx, DWORD PTR [ebp+56]
; Line 309
	test	ecx, ecx
	cmove	ecx, esi
; Line 312
	cmp	ecx, esi
	mov	DWORD PTR _h$1$[esp+200], ecx
	cmovle	esi, ecx
	mov	DWORD PTR $T6[esp+200], esi
	test	eax, eax
	jle	$LN3@drawCacheT
	test	esi, esi
	jle	$LN3@drawCacheT
; Line 314
	mov	eax, DWORD PTR [edx]
	push	edx
	mov	eax, DWORD PTR [eax+20]
	call	eax
; Line 315
	cmp	DWORD PTR [ebp+44], 0
	fld1
	fdivrp	ST(1), ST(0)
	mov	eax, DWORD PTR [ebp+48]
	fstp	DWORD PTR _ratio$[esp+200]
	movss	xmm1, DWORD PTR _ratio$[esp+200]
	je	SHORT $LN17@drawCacheT
; Line 316
	test	eax, eax
	je	SHORT $LN34@drawCacheT
	movss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR __real@3faaaaab
	jmp	SHORT $LN37@drawCacheT
$LN34@drawCacheT:
	movaps	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@3faaaaab
	jmp	SHORT $LN37@drawCacheT
$LN17@drawCacheT:
	movd	xmm0, DWORD PTR _h$1$[esp+200]
; Line 318
	cvtdq2ps xmm0, xmm0
	test	eax, eax
	jne	SHORT $LN37@drawCacheT
	mulss	xmm0, xmm1
$LN37@drawCacheT:
; Line 319
	mov	edx, DWORD PTR [ebp]
	movss	xmm1, DWORD PTR [ebp+12]
	mov	ecx, DWORD PTR [ebp+28]
	mov	eax, DWORD PTR [ebp+24]
; Line 183
	mov	esi, DWORD PTR [edx+4]
; Line 319
	mulss	xmm1, xmm0
	mov	DWORD PTR _align$1$[esp+200], ecx
	mov	DWORD PTR _wrap$1$[esp+200], eax
	mov	DWORD PTR _font$1$[esp+200], edx
	movss	DWORD PTR _size$1$[esp+200], xmm1
; Line 183
	mov	DWORD PTR _format$3[esp+200], esi
	test	esi, esi
; Line 184
	je	SHORT $LN41@drawCacheT
	movss	xmm0, DWORD PTR [edx+12]
	ucomiss	xmm0, xmm1
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN40@drawCacheT
; Line 194
	mov	eax, DWORD PTR _wrap$1$[esp+200]
	cmp	DWORD PTR [edx+16], eax
	je	SHORT $LN43@drawCacheT
; Line 195
	mov	DWORD PTR [edx+16], eax
	xor	eax, eax
	cmp	DWORD PTR _wrap$1$[esp+200], eax
	mov	ecx, DWORD PTR [esi]
	sete	al
	push	eax
	push	esi
	call	DWORD PTR [ecx+20]
	mov	esi, DWORD PTR _format$3[esp+200]
	mov	edx, DWORD PTR _font$1$[esp+200]
	mov	ecx, DWORD PTR _align$1$[esp+200]
$LN43@drawCacheT:
; Line 196
	cmp	DWORD PTR [edx+20], ecx
	je	$LN38@drawCacheT
; Line 197
	mov	DWORD PTR [edx+20], ecx
	mov	eax, DWORD PTR [esi]
	push	ecx
	push	esi
	call	DWORD PTR [eax+12]
; Line 198
	mov	esi, DWORD PTR _format$3[esp+200]
	jmp	$LN38@drawCacheT
$LN40@drawCacheT:
; Line 186
	mov	eax, DWORD PTR [esi]
	push	esi
	call	DWORD PTR [eax+8]
	movss	xmm1, DWORD PTR _size$1$[esp+200]
	mov	edx, DWORD PTR _font$1$[esp+200]
$LN41@drawCacheT:
; Line 187
	mov	eax, DWORD PTR [edi+16]
	lea	esi, DWORD PTR _format$3[esp+200]
	push	esi
	push	OFFSET ??_C@_1M@BMHNFIME@?$AAe?$AAn?$AA?9?$AAU?$AAS@
	mov	ecx, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	5
	push	0
	push	400					; 00000190H
	push	DWORD PTR [edx]
	push	DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR [ecx+60]
	test	eax, eax
	jne	$LN81@drawCacheT
; Line 189
	mov	esi, DWORD PTR _font$1$[esp+200]
; Line 190
	mov	eax, DWORD PTR _wrap$1$[esp+200]
	mov	ecx, DWORD PTR _format$3[esp+200]
	movss	xmm0, DWORD PTR _size$1$[esp+200]
	mov	DWORD PTR [esi+16], eax
	xor	eax, eax
	cmp	DWORD PTR _wrap$1$[esp+200], eax
	movss	DWORD PTR [esi+12], xmm0
	mov	edx, DWORD PTR [ecx]
	sete	al
	push	eax
	push	ecx
	call	DWORD PTR [edx+20]
; Line 191
	mov	eax, DWORD PTR _format$3[esp+200]
	mov	edx, DWORD PTR _align$1$[esp+200]
	mov	DWORD PTR [esi+20], edx
	push	edx
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+12]
; Line 192
	mov	eax, DWORD PTR _font$1$[esp+200]
	mov	esi, DWORD PTR _format$3[esp+200]
	mov	DWORD PTR [eax+4], esi
$LN38@drawCacheT:
; Line 320
	test	esi, esi
	je	$LN81@drawCacheT
	movd	xmm0, DWORD PTR _h$1$[esp+200]
; Line 204
	lea	eax, DWORD PTR _layout$1[esp+200]
; Line 322
	cvtdq2ps xmm0, xmm0
; Line 204
	push	eax
	sub	esp, 8
	mov	ecx, DWORD PTR [edi+16]
; Line 322
	mulss	xmm0, DWORD PTR _ratio$[esp+212]
; Line 204
	mov	edx, DWORD PTR [ecx]
; Line 322
	cvttss2si eax, xmm0
	movd	xmm0, eax
; Line 204
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [esp+4], xmm0
	movd	xmm0, DWORD PTR _w$2$[esp+212]
; Line 322
	cvtdq2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR _ratio$[esp+212]
	cvttss2si eax, xmm0
	movd	xmm0, eax
; Line 204
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	esi
	push	DWORD PTR [ebp+4]
	push	DWORD PTR _text$GSCopy$1$[esp+220]
	push	ecx
	call	DWORD PTR [edx+72]
	test	eax, eax
	jne	$LN82@drawCacheT
; Line 208
	mov	edx, DWORD PTR [ebp+16]
	mov	esi, DWORD PTR [ebp+4]
	test	edx, edx
	je	SHORT $LN48@drawCacheT
; Line 209
	mov	eax, DWORD PTR _layout$1[esp+200]
	push	esi
	push	0
	push	edx
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+128]
$LN48@drawCacheT:
; Line 210
	cmp	DWORD PTR [ebp+20], 0
	je	SHORT $LN49@drawCacheT
; Line 211
	mov	eax, DWORD PTR _layout$1[esp+200]
	push	esi
	push	0
	push	2
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+132]
$LN49@drawCacheT:
; Line 212
	mov	esi, DWORD PTR _layout$1[esp+200]
	test	esi, esi
; Line 323
	je	$LN82@drawCacheT
; Line 325
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR _bh$1$[esp+200], eax
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR _bw$1$[esp+200], eax
; Line 257
	mov	eax, DWORD PTR [edi+28]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+16]
; Line 258
	push	7
	push	eax
	call	DWORD PTR __imp__GetCurrentObject@8
; Line 259
	test	eax, eax
	je	SHORT $LN53@drawCacheT
	lea	ecx, DWORD PTR _dib$8[esp+200]
	push	ecx
	push	84					; 00000054H
	push	eax
	call	DWORD PTR __imp__GetObjectA@12
	test	eax, eax
	je	SHORT $LN53@drawCacheT
; Line 261
	mov	eax, DWORD PTR _bw$1$[esp+200]
	imul	eax, DWORD PTR _bh$1$[esp+200]
	shl	eax, 2
	push	eax
	push	0
	push	DWORD PTR _dib$8[esp+228]
	call	_memset
	add	esp, 12					; 0000000cH
; Line 262
	xor	ecx, ecx
	jmp	SHORT $LN51@drawCacheT
$LN53@drawCacheT:
; Line 260
	mov	DWORD PTR [ebx], 2
	mov	ecx, 1
$LN51@drawCacheT:
; Line 325
	mov	eax, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN21@drawCacheT
; Line 326
	push	esi
	call	DWORD PTR [eax+8]
; Line 327
	xor	eax, eax
	jmp	$LN1@drawCacheT
$LN21@drawCacheT:
; Line 329
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	push	edi
	push	0
	push	esi
	call	DWORD PTR [eax+232]
	test	eax, eax
	jne	$LN23@drawCacheT
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR _metrics$[esp+200]
	push	ecx
	push	esi
	call	DWORD PTR [eax+240]
	test	eax, eax
	jne	$LN23@drawCacheT
; Line 333
	mov	eax, DWORD PTR [esi]
	push	esi
	call	DWORD PTR [eax+8]
; Line 334
	movss	xmm1, DWORD PTR _ratio$[esp+200]
; Line 340
	xor	ebp, ebp
	movss	xmm0, DWORD PTR _metrics$[esp+200]
	divss	xmm0, xmm1
	cvttss2si eax, xmm0
	movss	xmm0, DWORD PTR _metrics$[esp+204]
	divss	xmm0, xmm1
	test	eax, eax
	cmovns	ebp, eax
; Line 342
	xor	eax, eax
	mov	DWORD PTR tv1450[esp+200], ebp
	cvttss2si ecx, xmm0
	movss	xmm0, DWORD PTR _metrics$[esp+208]
	divss	xmm0, xmm1
	test	ecx, ecx
	cmovns	eax, ecx
; Line 344
	mov	ecx, DWORD PTR _w$2$[esp+200]
	mov	DWORD PTR tv1391[esp+200], eax
	sub	ecx, ebp
	cvttss2si edx, xmm0
	movss	xmm0, DWORD PTR _metrics$[esp+216]
	divss	xmm0, xmm1
	lea	eax, DWORD PTR [edx+ebp]
; Line 346
	mov	ebp, DWORD PTR _h$1$[esp+200]
	cmp	eax, DWORD PTR _w$2$[esp+200]
	cmovle	ecx, edx
	mov	edx, DWORD PTR tv1391[esp+200]
	sub	ebp, edx
	mov	DWORD PTR tv1448[esp+200], ecx
	mov	DWORD PTR tv1447[esp+200], ebp
	cvttss2si esi, xmm0
	lea	eax, DWORD PTR [edx+esi]
; Line 347
	mov	edx, DWORD PTR [edi+8]
	cmp	eax, DWORD PTR _h$1$[esp+200]
	mov	eax, ebp
; Line 234
	mov	ebp, DWORD PTR _cache$GSCopy$1$[esp+200]
; Line 346
	cmovle	eax, esi
; Line 347
	mov	DWORD PTR _h$2$[esp+200], edx
	mov	esi, DWORD PTR [edi+4]
	mov	DWORD PTR tv1447[esp+200], eax
	mov	DWORD PTR _w$3$[esp+200], esi
; Line 234
	test	ecx, ecx
	jle	$LN57@drawCacheT
	test	eax, eax
	jle	$LN57@drawCacheT
; Line 236
	mov	eax, DWORD PTR [edi+28]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+16]
; Line 237
	push	7
	push	eax
	call	DWORD PTR __imp__GetCurrentObject@8
; Line 238
	test	eax, eax
	je	$LN59@drawCacheT
	lea	ecx, DWORD PTR _dib$7[esp+200]
	push	ecx
	push	84					; 00000054H
	push	eax
	call	DWORD PTR __imp__GetObjectA@12
	test	eax, eax
	je	$LN59@drawCacheT
; Line 240
	mov	eax, DWORD PTR [edi+12]
	lea	edx, DWORD PTR _texture$2[esp+200]
	mov	edi, DWORD PTR tv1447[esp+200]
	push	0
	push	edx
	mov	ecx, DWORD PTR [eax]
	push	1
	push	21					; 00000015H
	push	0
	push	1
	push	edi
	push	DWORD PTR tv1448[esp+228]
	push	eax
	call	DWORD PTR [ecx+92]
	test	eax, eax
	je	SHORT $LN60@drawCacheT
; Line 241
	mov	edx, DWORD PTR _h$2$[esp+200]
	mov	DWORD PTR [ebx], 22			; 00000016H
	jmp	$LN85@drawCacheT
$LN60@drawCacheT:
; Line 242
	mov	eax, DWORD PTR _texture$2[esp+200]
	lea	edx, DWORD PTR _rect$4[esp+200]
	push	0
	push	0
	push	edx
	mov	ecx, DWORD PTR [eax]
	push	0
	push	eax
	call	DWORD PTR [ecx+76]
	test	eax, eax
	je	SHORT $LN61@drawCacheT
; Line 243
	mov	eax, DWORD PTR _texture$2[esp+200]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
; Line 244
	mov	edx, DWORD PTR _h$2$[esp+200]
	mov	DWORD PTR [ebx], 3
	jmp	SHORT $LN85@drawCacheT
$LN61@drawCacheT:
; Line 217
	mov	ebx, DWORD PTR tv1448[esp+200]
	sub	esi, ebx
; Line 246
	mov	edx, DWORD PTR _rect$4[esp+204]
; Line 217
	mov	DWORD PTR _remain$1$[esp+200], esi
; Line 218
	js	SHORT $LN65@drawCacheT
; Line 220
	mov	ecx, DWORD PTR tv1391[esp+200]
	mov	ebp, esi
	imul	ecx, DWORD PTR _w$3$[esp+200]
	mov	eax, DWORD PTR _dib$7[esp+220]
	add	ecx, DWORD PTR tv1450[esp+200]
	lea	ecx, DWORD PTR [eax+ecx*4]
$LL66@drawCacheT:
; Line 222
	mov	esi, ebx
$LL69@drawCacheT:
; Line 223
	mov	eax, DWORD PTR [ecx]
	add	ecx, 4
	shl	eax, 24					; 00000018H
	or	eax, 16777215				; 00ffffffH
	mov	DWORD PTR [edx], eax
	add	edx, 4
	sub	esi, 1
	jne	SHORT $LL69@drawCacheT
; Line 224
	lea	eax, DWORD PTR [ebp*4]
	add	ecx, eax
	sub	edi, 1
	jne	SHORT $LL66@drawCacheT
	mov	ebp, DWORD PTR _cache$GSCopy$1$[esp+200]
$LN65@drawCacheT:
; Line 247
	mov	eax, DWORD PTR _texture$2[esp+200]
	push	0
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+80]
; Line 249
	mov	edx, DWORD PTR tv1447[esp+200]
	mov	esi, ebx
; Line 250
	mov	eax, DWORD PTR _texture$2[esp+200]
	jmp	SHORT $LN55@drawCacheT
$LN59@drawCacheT:
; Line 239
	mov	edx, DWORD PTR _h$2$[esp+200]
	mov	DWORD PTR [ebx], 2
	jmp	SHORT $LN85@drawCacheT
$LN57@drawCacheT:
; Line 235
	mov	DWORD PTR [ebx], 13			; 0000000dH
$LN85@drawCacheT:
; Line 348
	xor	eax, eax
$LN55@drawCacheT:
	mov	DWORD PTR [ebp+60], eax
; Line 349
	test	eax, eax
	je	$LN86@drawCacheT
; Line 353
	movd	xmm0, DWORD PTR $T5[esp+200]
	mov	eax, 1
	movd	xmm1, esi
	cvtdq2ps xmm1, xmm1
	cvtdq2ps xmm0, xmm0
	divss	xmm1, xmm0
	movd	xmm0, DWORD PTR $T6[esp+200]
	movss	DWORD PTR [ebp+36], xmm1
	movd	xmm1, edx
	cvtdq2ps xmm1, xmm1
	cvtdq2ps xmm0, xmm0
	divss	xmm1, xmm0
	movss	DWORD PTR [ebp+40], xmm1
	jmp	SHORT $LN1@drawCacheT
$LN23@drawCacheT:
; Line 330
	mov	eax, DWORD PTR [esi]
	push	esi
	call	DWORD PTR [eax+8]
; Line 331
	mov	DWORD PTR [ebx], 20			; 00000014H
	xor	eax, eax
	jmp	SHORT $LN1@drawCacheT
$LN82@drawCacheT:
; Line 324
	mov	DWORD PTR [ebx], 17			; 00000011H
	xor	eax, eax
	jmp	SHORT $LN1@drawCacheT
$LN81@drawCacheT:
; Line 321
	mov	DWORD PTR [ebx], 16			; 00000010H
	xor	eax, eax
	jmp	SHORT $LN1@drawCacheT
$LN3@drawCacheT:
; Line 276
	mov	DWORD PTR [ebx], 13			; 0000000dH
	mov	eax, 13					; 0000000dH
$LN1@drawCacheT:
; Line 354
	mov	ecx, DWORD PTR __$ArrayPad$[esp+200]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 184				; 000000b8H
	ret	0
?drawCacheTexture@@YAHPAVfont_renderer@@PAUfont_renderer_cache@@PB_WPAH@Z ENDP ; drawCacheTexture
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clearBitmap@@YAHPAVfont_renderer@@IIPAH@Z
_TEXT	SEGMENT
_dib$ = -88						; size = 84
__$ArrayPad$ = -4					; size = 4
_fr$ = 8						; size = 4
_bw$ = 12						; size = 4
_bh$ = 16						; size = 4
_failcode$ = 20						; size = 4
?clearBitmap@@YAHPAVfont_renderer@@IIPAH@Z PROC		; clearBitmap, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 252
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+88], eax
	mov	eax, DWORD PTR _fr$[esp+84]
	push	esi
	mov	esi, DWORD PTR _failcode$[esp+88]
; Line 257
	mov	eax, DWORD PTR [eax+28]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+16]
; Line 258
	push	7
	push	eax
	call	DWORD PTR __imp__GetCurrentObject@8
; Line 259
	test	eax, eax
	je	SHORT $LN3@clearBitma
	lea	ecx, DWORD PTR _dib$[esp+92]
	push	ecx
	push	84					; 00000054H
	push	eax
	call	DWORD PTR __imp__GetObjectA@12
	test	eax, eax
	je	SHORT $LN3@clearBitma
; Line 261
	mov	eax, DWORD PTR _bw$[esp+88]
	imul	eax, DWORD PTR _bh$[esp+88]
	shl	eax, 2
	push	eax
	push	0
	push	DWORD PTR _dib$[esp+120]
	call	_memset
	add	esp, 12					; 0000000cH
; Line 262
	xor	eax, eax
	pop	esi
; Line 263
	mov	ecx, DWORD PTR __$ArrayPad$[esp+88]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 88					; 00000058H
	ret	0
$LN3@clearBitma:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+92]
	mov	eax, 1
	mov	DWORD PTR [esi], 2
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 88					; 00000058H
	ret	0
?clearBitmap@@YAHPAVfont_renderer@@IIPAH@Z ENDP		; clearBitmap
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?createTextureFromBitmap@@YAPAUIDirect3DTexture9@@PAVfont_renderer@@HHHHPAH11@Z
_TEXT	SEGMENT
_texture$ = -108					; size = 4
_width$GSCopy$1$ = -104					; size = 4
_height$GSCopy$1$ = -100				; size = 4
_rect$ = -96						; size = 8
_dib$ = -88						; size = 84
__$ArrayPad$ = -4					; size = 4
_fr$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_w$ = 20						; size = 4
_h$ = 24						; size = 4
_width$ = 28						; size = 4
_height$ = 32						; size = 4
_failcode$ = 36						; size = 4
?createTextureFromBitmap@@YAPAUIDirect3DTexture9@@PAVfont_renderer@@HHHHPAH11@Z PROC ; createTextureFromBitmap, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 227
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+108], eax
	mov	eax, DWORD PTR _width$[esp+104]
	push	ebx
; Line 234
	mov	ebx, DWORD PTR _w$[esp+108]
	mov	DWORD PTR _width$GSCopy$1$[esp+112], eax
	mov	eax, DWORD PTR _height$[esp+108]
	mov	DWORD PTR _height$GSCopy$1$[esp+112], eax
	push	ebp
	push	esi
	mov	esi, DWORD PTR _failcode$[esp+116]
	push	edi
	mov	edi, DWORD PTR _fr$[esp+120]
	test	ebx, ebx
	jle	$LN3@createText
	mov	ebp, DWORD PTR _h$[esp+120]
	test	ebp, ebp
	jle	$LN3@createText
; Line 236
	mov	eax, DWORD PTR [edi+28]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+16]
; Line 237
	push	7
	push	eax
	call	DWORD PTR __imp__GetCurrentObject@8
; Line 238
	test	eax, eax
	je	$LN5@createText
	lea	ecx, DWORD PTR _dib$[esp+124]
	push	ecx
	push	84					; 00000054H
	push	eax
	call	DWORD PTR __imp__GetObjectA@12
	test	eax, eax
	je	$LN5@createText
; Line 240
	mov	eax, DWORD PTR [edi+12]
	lea	edx, DWORD PTR _texture$[esp+124]
	push	0
	push	edx
	push	1
	mov	ecx, DWORD PTR [eax]
	push	21					; 00000015H
	push	0
	push	1
	push	ebp
	push	ebx
	push	eax
	call	DWORD PTR [ecx+92]
	test	eax, eax
	je	SHORT $LN6@createText
; Line 241
	pop	edi
	mov	DWORD PTR [esi], 22			; 00000016H
; Line 251
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 108				; 0000006cH
	ret	0
$LN6@createText:
; Line 242
	mov	eax, DWORD PTR _texture$[esp+124]
	lea	edx, DWORD PTR _rect$[esp+124]
	push	0
	push	0
	push	edx
	mov	ecx, DWORD PTR [eax]
	push	0
	push	eax
	call	DWORD PTR [ecx+76]
	test	eax, eax
	je	SHORT $LN7@createText
; Line 243
	mov	eax, DWORD PTR _texture$[esp+124]
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+8]
	pop	edi
; Line 244
	mov	DWORD PTR [esi], 3
; Line 251
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 108				; 0000006cH
	ret	0
$LN7@createText:
; Line 246
	mov	ecx, DWORD PTR _width$GSCopy$1$[esp+124]
	mov	edi, ebp
	mov	edx, DWORD PTR _rect$[esp+128]
	mov	ecx, DWORD PTR [ecx]
; Line 217
	mov	esi, ecx
	sub	esi, ebx
; Line 218
	js	SHORT $LN11@createText
; Line 220
	imul	ecx, DWORD PTR _y$[esp+120]
	lea	ebp, DWORD PTR [esi*4]
	mov	eax, DWORD PTR _dib$[esp+144]
	add	ecx, DWORD PTR _x$[esp+120]
	lea	eax, DWORD PTR [eax+ecx*4]
	npad	6
$LL12@createText:
; Line 222
	mov	esi, ebx
$LL15@createText:
; Line 223
	mov	ecx, DWORD PTR [eax]
	add	eax, 4
	shl	ecx, 24					; 00000018H
	or	ecx, 16777215				; 00ffffffH
	mov	DWORD PTR [edx], ecx
	add	edx, 4
	sub	esi, 1
	jne	SHORT $LL15@createText
; Line 224
	add	eax, ebp
	sub	edi, 1
	jne	SHORT $LL12@createText
	mov	ebp, DWORD PTR _h$[esp+120]
$LN11@createText:
; Line 247
	mov	eax, DWORD PTR _texture$[esp+124]
	push	0
	push	eax
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR [ecx+80]
; Line 248
	mov	eax, DWORD PTR _width$GSCopy$1$[esp+124]
	pop	edi
; Line 251
	pop	esi
	mov	DWORD PTR [eax], ebx
	mov	eax, DWORD PTR _height$GSCopy$1$[esp+116]
	mov	DWORD PTR [eax], ebp
	mov	eax, DWORD PTR _texture$[esp+116]
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 108				; 0000006cH
	ret	0
$LN5@createText:
	pop	edi
; Line 239
	mov	DWORD PTR [esi], 2
; Line 251
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 108				; 0000006cH
	ret	0
$LN3@createText:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+124]
	xor	eax, eax
	pop	edi
	mov	DWORD PTR [esi], 13			; 0000000dH
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 108				; 0000006cH
	ret	0
?createTextureFromBitmap@@YAPAUIDirect3DTexture9@@PAVfont_renderer@@HHHHPAH11@Z ENDP ; createTextureFromBitmap
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?fillTextureUsingBitmapData@@YAXPAI0HHHHHH@Z
_TEXT	SEGMENT
_tex$ = 8						; size = 4
_bit$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_tw$ = 24						; size = 4
_th$ = 28						; size = 4
_bw$ = 32						; size = 4
_bh$ = 36						; size = 4
?fillTextureUsingBitmapData@@YAXPAI0HHHHHH@Z PROC	; fillTextureUsingBitmapData, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 217
	mov	eax, DWORD PTR _bw$[esp-4]
	mov	edx, eax
	push	ebx
	mov	ebx, DWORD PTR _tw$[esp]
	sub	edx, ebx
; Line 218
	js	SHORT $LN3@fillTextur
; Line 220
	mov	ecx, DWORD PTR _y$[esp]
	imul	ecx, eax
	mov	eax, DWORD PTR _bit$[esp]
	push	edi
; Line 221
	mov	edi, DWORD PTR _th$[esp+4]
	add	ecx, DWORD PTR _x$[esp+4]
	lea	eax, DWORD PTR [eax+ecx*4]
	test	edi, edi
	je	SHORT $LN18@fillTextur
	push	ebp
	lea	ebp, DWORD PTR [edx*4]
	mov	edx, DWORD PTR _tex$[esp+8]
	push	esi
$LL4@fillTextur:
; Line 222
	mov	esi, ebx
	test	ebx, ebx
	je	SHORT $LN6@fillTextur
	npad	3
$LL7@fillTextur:
; Line 223
	mov	ecx, DWORD PTR [eax]
	add	eax, 4
	shl	ecx, 24					; 00000018H
	or	ecx, 16777215				; 00ffffffH
	mov	DWORD PTR [edx], ecx
	add	edx, 4
	sub	esi, 1
	jne	SHORT $LL7@fillTextur
$LN6@fillTextur:
; Line 224
	add	eax, ebp
	sub	edi, 1
	jne	SHORT $LL4@fillTextur
	pop	esi
	pop	ebp
$LN18@fillTextur:
	pop	edi
$LN3@fillTextur:
	pop	ebx
; Line 226
	ret	0
?fillTextureUsingBitmapData@@YAXPAI0HHHHHH@Z ENDP	; fillTextureUsingBitmapData
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?createLayout@@YAPAUIDWriteTextLayout@@PAVfont_renderer@@PAUfont_renderer_cache@@PAUIDWriteTextFormat@@PB_WIHH@Z
_TEXT	SEGMENT
_layout$ = 8						; size = 4
_fr$ = 8						; size = 4
_cache$ = 12						; size = 4
_format$ = 16						; size = 4
_text$ = 20						; size = 4
_length$ = 24						; size = 4
_width$ = 28						; size = 4
_height$ = 32						; size = 4
?createLayout@@YAPAUIDWriteTextLayout@@PAVfont_renderer@@PAUfont_renderer_cache@@PAUIDWriteTextFormat@@PB_WIHH@Z PROC ; createLayout, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 200
	movd	xmm0, DWORD PTR _height$[esp-4]
; Line 204
	lea	edx, DWORD PTR _layout$[esp-4]
	mov	eax, DWORD PTR _fr$[esp-4]
	push	edx
	sub	esp, 8
	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR [eax]
	movss	DWORD PTR [esp+4], xmm0
	movd	xmm0, DWORD PTR _width$[esp+8]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	DWORD PTR _format$[esp+8]
	push	DWORD PTR _length$[esp+12]
	push	DWORD PTR _text$[esp+16]
	push	eax
	call	DWORD PTR [ecx+72]
	test	eax, eax
	je	SHORT $LN2@createLayo
; Line 205
	xor	eax, eax
; Line 213
	ret	0
$LN2@createLayo:
	push	esi
; Line 207
	mov	esi, DWORD PTR _cache$[esp]
	push	edi
; Line 208
	mov	edx, DWORD PTR [esi+16]
	mov	edi, DWORD PTR [esi+4]
	test	edx, edx
	je	SHORT $LN3@createLayo
; Line 209
	mov	eax, DWORD PTR _layout$[esp+4]
	push	edi
	push	0
	push	edx
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+128]
$LN3@createLayo:
; Line 210
	cmp	DWORD PTR [esi+20], 0
	je	SHORT $LN4@createLayo
; Line 211
	mov	eax, DWORD PTR _layout$[esp+4]
	push	edi
	push	0
	push	2
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+132]
$LN4@createLayo:
; Line 212
	mov	eax, DWORD PTR _layout$[esp+4]
	pop	edi
	pop	esi
; Line 213
	ret	0
?createLayout@@YAPAUIDWriteTextLayout@@PAVfont_renderer@@PAUfont_renderer_cache@@PAUIDWriteTextFormat@@PB_WIHH@Z ENDP ; createLayout
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?getFontFormat@@YAPAUIDWriteTextFormat@@PAVfont_renderer@@PAUfont_renderer_font@@MHW4DWRITE_TEXT_ALIGNMENT@@@Z
_TEXT	SEGMENT
_fr$ = 8						; size = 4
_format$ = 12						; size = 4
_font$ = 12						; size = 4
_size$ = 16						; size = 4
_wrap$ = 20						; size = 4
_align$ = 24						; size = 4
?getFontFormat@@YAPAUIDWriteTextFormat@@PAVfont_renderer@@PAUfont_renderer_font@@MHW4DWRITE_TEXT_ALIGNMENT@@@Z PROC ; getFontFormat, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 178
	push	esi
	push	edi
; Line 183
	mov	edi, DWORD PTR _font$[esp+4]
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR _format$[esp+4], edx
	test	edx, edx
; Line 184
	je	SHORT $LN4@getFontFor
	movss	xmm0, DWORD PTR [edi+12]
	ucomiss	xmm0, DWORD PTR _size$[esp+4]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@getFontFor
; Line 194
	mov	esi, DWORD PTR _wrap$[esp+4]
	cmp	DWORD PTR [edi+16], esi
	je	SHORT $LN6@getFontFor
; Line 195
	xor	eax, eax
	mov	DWORD PTR [edi+16], esi
	mov	ecx, DWORD PTR [edx]
	test	esi, esi
	sete	al
	push	eax
	push	edx
	call	DWORD PTR [ecx+20]
	mov	edx, DWORD PTR _format$[esp+4]
$LN6@getFontFor:
; Line 196
	mov	ecx, DWORD PTR _align$[esp+4]
	cmp	DWORD PTR [edi+20], ecx
	je	SHORT $LN7@getFontFor
; Line 197
	mov	DWORD PTR [edi+20], ecx
	mov	eax, DWORD PTR [edx]
	push	ecx
	push	edx
	call	DWORD PTR [eax+12]
	mov	edx, DWORD PTR _format$[esp+4]
$LN7@getFontFor:
; Line 198
	pop	edi
	mov	eax, edx
; Line 199
	pop	esi
	ret	0
$LN3@getFontFor:
; Line 186
	mov	eax, DWORD PTR [edx]
	push	edx
	call	DWORD PTR [eax+8]
$LN4@getFontFor:
; Line 187
	mov	eax, DWORD PTR _fr$[esp+4]
	lea	edx, DWORD PTR _format$[esp+4]
	movss	xmm0, DWORD PTR _size$[esp+4]
	push	edx
	push	OFFSET ??_C@_1M@BMHNFIME@?$AAe?$AAn?$AA?9?$AAU?$AAS@
	mov	eax, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	5
	push	0
	push	400					; 00000190H
	push	DWORD PTR [edi]
	push	DWORD PTR [edi+8]
	push	eax
	call	DWORD PTR [ecx+60]
	test	eax, eax
	je	SHORT $LN5@getFontFor
; Line 188
	pop	edi
	xor	eax, eax
; Line 199
	pop	esi
	ret	0
$LN5@getFontFor:
; Line 190
	mov	ecx, DWORD PTR _wrap$[esp+4]
	xor	eax, eax
	mov	edx, DWORD PTR _format$[esp+4]
	test	ecx, ecx
	movss	xmm0, DWORD PTR _size$[esp+4]
	movss	DWORD PTR [edi+12], xmm0
	sete	al
	mov	DWORD PTR [edi+16], ecx
	mov	esi, DWORD PTR [edx]
	push	eax
	push	edx
	call	DWORD PTR [esi+20]
; Line 191
	mov	eax, DWORD PTR _format$[esp+4]
	mov	edx, DWORD PTR _align$[esp+4]
	mov	DWORD PTR [edi+20], edx
	push	edx
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+12]
; Line 192
	mov	eax, DWORD PTR _format$[esp+4]
	mov	DWORD PTR [edi+4], eax
	pop	edi
; Line 199
	pop	esi
	ret	0
?getFontFormat@@YAPAUIDWriteTextFormat@@PAVfont_renderer@@PAUfont_renderer_font@@MHW4DWRITE_TEXT_ALIGNMENT@@@Z ENDP ; getFontFormat
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?makeWideCharFromAscii@@YAPA_WPBD@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
?makeWideCharFromAscii@@YAPA_WPBD@Z PROC		; makeWideCharFromAscii, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 169
	mov	eax, DWORD PTR _str$[esp-4]
	lea	edx, DWORD PTR [eax+1]
$LL4@makeWideCh:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL4@makeWideCh
	sub	eax, edx
	push	ebx
	push	esi
	lea	ebx, DWORD PTR [eax+1]
; Line 170
	lea	eax, DWORD PTR [ebx+ebx]
	push	eax
	call	_malloc
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN2@makeWideCh
; Line 171
	push	DWORD PTR _str$[esp+4]
	push	OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
	push	ebx
	push	esi
	call	_swprintf
	add	esp, 16					; 00000010H
; Line 172
	mov	eax, esi
	pop	esi
; Line 175
	pop	ebx
	ret	0
$LN2@makeWideCh:
	pop	esi
; Line 174
	xor	eax, eax
; Line 175
	pop	ebx
	ret	0
?makeWideCharFromAscii@@YAPA_WPBD@Z ENDP		; makeWideCharFromAscii
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?procMonitorEnum@@YGHPAUHMONITOR__@@PAUHDC__@@PAUtagRECT@@J@Z
_TEXT	SEGMENT
_monitor$ = 8						; size = 4
_hdc$ = 12						; size = 4
_rect$ = 16						; size = 4
_arg$ = 20						; size = 4
?procMonitorEnum@@YGHPAUHMONITOR__@@PAUHDC__@@PAUtagRECT@@J@Z PROC ; procMonitorEnum, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 162
	mov	ecx, DWORD PTR _arg$[esp-4]
	mov	eax, DWORD PTR _monitor$[esp-4]
	mov	DWORD PTR [ecx], eax
; Line 163
	xor	eax, eax
; Line 164
	ret	16					; 00000010H
?procMonitorEnum@@YGHPAUHMONITOR__@@PAUHDC__@@PAUtagRECT@@J@Z ENDP ; procMonitorEnum
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0font_renderer@@QAE@XZ
_TEXT	SEGMENT
??0font_renderer@@QAE@XZ PROC				; font_renderer::font_renderer, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], OFFSET ??_7font_renderer@@6B@
	mov	eax, ecx
	ret	0
??0font_renderer@@QAE@XZ ENDP				; font_renderer::font_renderer
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Release@font_renderer@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@font_renderer@@UAGKXZ PROC			; font_renderer::Release, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 144
	xor	eax, eax
; Line 145
	ret	4
?Release@font_renderer@@UAGKXZ ENDP			; font_renderer::Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AddRef@font_renderer@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@font_renderer@@UAGKXZ PROC			; font_renderer::AddRef, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 141
	xor	eax, eax
; Line 142
	ret	4
?AddRef@font_renderer@@UAGKXZ ENDP			; font_renderer::AddRef
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?QueryInterface@font_renderer@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_arg$ = 16						; size = 4
?QueryInterface@font_renderer@@UAGJABU_GUID@@PAPAX@Z PROC ; font_renderer::QueryInterface, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 138
	mov	eax, -2147467263			; 80004001H
; Line 139
	ret	12					; 0000000cH
?QueryInterface@font_renderer@@UAGJABU_GUID@@PAPAX@Z ENDP ; font_renderer::QueryInterface
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?DrawUnderline@font_renderer@@UAGJPAXMMPBUDWRITE_UNDERLINE@@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ptr$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_underline$ = 24					; size = 4
_effect$ = 28						; size = 4
?DrawUnderline@font_renderer@@UAGJPAXMMPBUDWRITE_UNDERLINE@@PAUIUnknown@@@Z PROC ; font_renderer::DrawUnderline, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 135
	mov	eax, -2147467263			; 80004001H
; Line 136
	ret	24					; 00000018H
?DrawUnderline@font_renderer@@UAGJPAXMMPBUDWRITE_UNDERLINE@@PAUIUnknown@@@Z ENDP ; font_renderer::DrawUnderline
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?DrawStrikethrough@font_renderer@@UAGJPAXMMPBUDWRITE_STRIKETHROUGH@@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ptr$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_strike$ = 24						; size = 4
_effect$ = 28						; size = 4
?DrawStrikethrough@font_renderer@@UAGJPAXMMPBUDWRITE_STRIKETHROUGH@@PAUIUnknown@@@Z PROC ; font_renderer::DrawStrikethrough, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 132
	mov	eax, -2147467263			; 80004001H
; Line 133
	ret	24					; 00000018H
?DrawStrikethrough@font_renderer@@UAGJPAXMMPBUDWRITE_STRIKETHROUGH@@PAUIUnknown@@@Z ENDP ; font_renderer::DrawStrikethrough
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?DrawInlineObject@font_renderer@@UAGJPAXMMPAUIDWriteInlineObject@@HHPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ptr$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_inlobj$ = 24						; size = 4
_arg1$ = 28						; size = 4
_arg2$ = 32						; size = 4
_effect$ = 36						; size = 4
?DrawInlineObject@font_renderer@@UAGJPAXMMPAUIDWriteInlineObject@@HHPAUIUnknown@@@Z PROC ; font_renderer::DrawInlineObject, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 129
	mov	eax, -2147467263			; 80004001H
; Line 130
	ret	32					; 00000020H
?DrawInlineObject@font_renderer@@UAGJPAXMMPAUIDWriteInlineObject@@HHPAUIUnknown@@@Z ENDP ; font_renderer::DrawInlineObject
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?DrawGlyphRun@font_renderer@@UAGJPAXMMW4DWRITE_MEASURING_MODE@@PBUDWRITE_GLYPH_RUN@@PBUDWRITE_GLYPH_RUN_DESCRIPTION@@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ptr$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_measure$ = 24						; size = 4
_run$ = 28						; size = 4
_description$ = 32					; size = 4
_effect$ = 36						; size = 4
?DrawGlyphRun@font_renderer@@UAGJPAXMMW4DWRITE_MEASURING_MODE@@PBUDWRITE_GLYPH_RUN@@PBUDWRITE_GLYPH_RUN_DESCRIPTION@@PAUIUnknown@@@Z PROC ; font_renderer::DrawGlyphRun, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 126
	mov	eax, DWORD PTR _this$[esp-4]
	movss	xmm0, DWORD PTR _y$[esp-4]
	push	0
	push	-1
	push	DWORD PTR [eax+20]
	mov	ecx, DWORD PTR [eax+28]
	push	DWORD PTR _run$[esp+8]
	push	DWORD PTR _measure$[esp+12]
	mov	edx, DWORD PTR [ecx]
	sub	esp, 8
	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _x$[esp+24]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	call	DWORD PTR [edx+12]
; Line 127
	ret	32					; 00000020H
?DrawGlyphRun@font_renderer@@UAGJPAXMMW4DWRITE_MEASURING_MODE@@PBUDWRITE_GLYPH_RUN@@PBUDWRITE_GLYPH_RUN_DESCRIPTION@@PAUIUnknown@@@Z ENDP ; font_renderer::DrawGlyphRun
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?IsPixelSnappingDisabled@font_renderer@@UAGJPAXPAH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ptr$ = 12						; size = 4
_result$ = 16						; size = 4
?IsPixelSnappingDisabled@font_renderer@@UAGJPAXPAH@Z PROC ; font_renderer::IsPixelSnappingDisabled, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 122
	mov	eax, DWORD PTR _result$[esp-4]
	mov	DWORD PTR [eax], 1
; Line 123
	xor	eax, eax
; Line 124
	ret	12					; 0000000cH
?IsPixelSnappingDisabled@font_renderer@@UAGJPAXPAH@Z ENDP ; font_renderer::IsPixelSnappingDisabled
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetPixelsPerDip@font_renderer@@UAGJPAXPAM@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ptr$ = 12						; size = 4
_result$ = 16						; size = 4
?GetPixelsPerDip@font_renderer@@UAGJPAXPAM@Z PROC	; font_renderer::GetPixelsPerDip, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 118
	mov	eax, DWORD PTR _result$[esp-4]
	mov	DWORD PTR [eax], 1065353216		; 3f800000H
; Line 119
	xor	eax, eax
; Line 120
	ret	12					; 0000000cH
?GetPixelsPerDip@font_renderer@@UAGJPAXPAM@Z ENDP	; font_renderer::GetPixelsPerDip
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetCurrentTransform@font_renderer@@UAGJPAXPAUDWRITE_MATRIX@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ptr$ = 12						; size = 4
_matrix$ = 16						; size = 4
?GetCurrentTransform@font_renderer@@UAGJPAXPAUDWRITE_MATRIX@@@Z PROC ; font_renderer::GetCurrentTransform, COMDAT
; File C:\Program Files (x86)\Steam\steamapps\common\Bully Scholarship Edition\_derpy_script_loader\src\client\render_font.cpp
; Line 111
	mov	eax, DWORD PTR _matrix$[esp-4]
; Line 112
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+16], 0
	mov	DWORD PTR [eax+20], 0
; Line 113
	mov	DWORD PTR [eax], 1065353216		; 3f800000H
; Line 114
	mov	DWORD PTR [eax+12], 1065353216		; 3f800000H
; Line 115
	xor	eax, eax
; Line 116
	ret	12					; 0000000cH
?GetCurrentTransform@font_renderer@@UAGJPAXPAUDWRITE_MATRIX@@@Z ENDP ; font_renderer::GetCurrentTransform
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0IDWriteTextRenderer@@QAE@XZ
_TEXT	SEGMENT
??0IDWriteTextRenderer@@QAE@XZ PROC			; IDWriteTextRenderer::IDWriteTextRenderer, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0IDWriteTextRenderer@@QAE@XZ ENDP			; IDWriteTextRenderer::IDWriteTextRenderer
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0IDWritePixelSnapping@@QAE@XZ
_TEXT	SEGMENT
??0IDWritePixelSnapping@@QAE@XZ PROC			; IDWritePixelSnapping::IDWritePixelSnapping, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0IDWritePixelSnapping@@QAE@XZ ENDP			; IDWritePixelSnapping::IDWritePixelSnapping
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	mov	eax, ecx
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _swprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_wstdio.h
; Line 1161
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __BufferCount$[esp+8]
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vswprintf
; Line 1165
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1480
	ret	0
_swprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vswprintf_c_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_c_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_wstdio.h
; Line 1161
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __BufferCount$[esp+8]
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vswprintf
; Line 1165
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1166
	ret	0
__vswprintf_c_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
